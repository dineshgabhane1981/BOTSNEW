@model WebApp.ViewModel.CustomizeMetricsViewModel
@using BOTS_BL.Models;
@using System.Configuration;
@{
    ViewBag.Title = "Smart Slicer";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string baseURL = ConfigurationManager.AppSettings["BaseSlicerExportUrl"];
}
<style>
    h2 {
        color: #000;
        text-align: center;
        font-size: 2em;
    }

    .warpper {
        display: grid;
        flex-direction: column;
        align-items: center;
    }

    .tab {
        cursor: pointer;
        padding: 10px 20px;
        margin: 0px 2px;
        background-color: #2f4353 !important;
        display: inline-block;
        color: #fff;
        border-radius: 3px 3px 0px 0px;
        box-shadow: 0 0.5rem 0.8rem #00000080;
    }

    .tabs {
        padding-left: 25px;
    }

    .panels {
        background: #ffffff;
        box-shadow: 0 2rem 2rem #00000080;
        width: 100%;
        border-radius: 3px;
        overflow: hidden;
    }

    .panel {
        display: none;
        animation: fadein .8s;
    }

    .panel-title {
        font-size: 1.5em;
        font-weight: bold
    }

    .radio {
        display: none;
    }



    #one:checked ~ .panels #one-panel,
    #two:checked ~ .panels #two-panel {
        display: block
    }


    #one:checked ~ .tabs #one-tab,
    #two:checked ~ .tabs #two-tab {
        background: #fff !important;
        color: #000;
        border-top: 3px solid #fff;
        border-left: 3px solid #fff;
        border-right: 3px solid #fff;
        font-weight: bold;
        border-top-left-radius: 7px;
        border-top-right-radius: 7px;
    }

    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 5 !important; /* Sit on top */
        padding-top: 65px; /* Location of the box */
        left: 120px;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    /* Modal Content */
    .modal-content {
        background-color: #fefefe;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 75%;
        border-radius: 25px;
    }

    .close {
        color: #aaaaaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }

    /* input:read-only {
        background-color: lightgray;
    }*/
</style>
<div class="app-main__inner" id="dvall">
    <input class="radio" id="one" name="group" type="radio" checked>
    <input class="radio" id="two" name="group" type="radio">
    <div class="tabs">
        <label class="tab" id="one-tab" for="one">Smart Slicer</label>
        <label class="tab" id="two-tab" for="two">Saved Datasets</label>
    </div>
    <div class="panels">
        <input type="hidden" id="hdnDSID" />

        <div class="multisteps-form__panel  p-2 m-2 bg-white panel" id="one-panel">
            <div id="dvSmartSlicer">

                <div class="mb-3 pr-3 pt-3 pl-3 card col-md-12 col-xl-12" style="padding-bottom:20px;">
                    <div class="row mt-4 col-md-12 col-xl-12 ml-0">
                        <input type="radio" id="chkTransacting" name="firstFilters" style="width:20px; cursor:pointer;" /> &nbsp; Loyalty Transacting Base
                        <input type="radio" id="chkNonTransacting" name="firstFilters" style="width:20px; cursor:pointer;margin-left:20px;" /> &nbsp;Multiple Sources Non Transacting Base
                        <input type="radio" id="chkMemberAcquition" name="firstFilters" style="width: 20px; cursor: pointer; margin-left: 20px;" /> &nbsp;Member Acquition
                        <input type="radio" id="chkPastTransTrendAnalysis" name="firstFilters" style="width: 20px; cursor: pointer; margin-left: 20px;" /> &nbsp;Past Transacting Trend Analysis
                    </div>
                    <div style="display:none;" id="dvBaseFilters">
                        <hr id="hrBaseFilter" style="border-top: dashed 1px;" />
                        <h6 style="font-weight:bold;">Base Filter</h6>
                        <div class="row mt-4 col-md-12 col-xl-12 ml-0" id="dvTxnFilters" style="display:none;">
                            <input type="radio" id="chkAll" name="secondFilters" style="width: 20px; cursor: pointer;" /> &nbsp;All &nbsp;
                            <input type="radio" id="chkTxnAIsegment" name="secondFilters" style="width: 20px; cursor: pointer; margin-left: 20px;" /> &nbsp; AI segment
                            <input type="radio" id="chkTxnTier" name="secondFilters" style="width:20px; cursor:pointer;margin-left:20px;" /> &nbsp;Tier
                            <input type="radio" id="chkTxnOnlyOnce" name="secondFilters" style="width: 20px; cursor: pointer; margin-left: 20px;" /> &nbsp; Only Once
                            <input type="radio" id="chkTxnInactive" name="secondFilters" style="width:20px; cursor:pointer;margin-left:20px;" /> &nbsp;Inactive
                        </div>
                        <div class="row mt-4 col-md-12 col-xl-12 ml-0" id="dvTxnOnlyOnce" style="display:none;">
                            @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.OnlyOnceDDL(), "Value", "Text"), htmlAttributes: new { @class = "input100", @id = "ddlOnlyOnce" })&nbsp;
                        </div>
                        <div class="row mt-4 col-md-12 col-xl-12 ml-0" id="dvTxnInactive" style="display:none;">
                            @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.InactiveDDL(), "Value", "Text"), htmlAttributes: new { @class = "input100", @id = "ddlInactive" })&nbsp;
                            <input type="checkbox" id="chkExcludeOnlyOnce" style="width:20px; height:20px; margin-top:10px; margin-left:10px; cursor:pointer;" /><span style="margin-top:10px;margin-left:3px;">Exclude Only Once</span>
                        </div>
                        <div class="row mt-4 col-md-12 col-xl-12 ml-0" id="dvTxnAIsegment" style="display:none;">
                            @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.AISegment(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlAIsegment" })&nbsp;
                        </div>
                        <div class="row mt-4 col-md-12 col-xl-12 ml-0" id="dvTxnTier" style="display:none;">
                            @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.lstTiers, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlTier" })&nbsp;
                        </div>
                        <div style="border:1px solid lightgrey; border-radius:5px; margin-top:20px; margin-left:20px;display:none;" id="dvCumulative">
                            <div class="row mt-2 col-md-12 col-xl-12 ml-0">
                                <input type="radio" id="rbtnCTxnCount" name="CumulativeFilters" style="width: 20px; height: 20px;cursor:pointer;" /> &nbsp;Txn Count &nbsp;
                                @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.LessThanMoreThan(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @disabled = "disabled", @id = "ddlTxnCumulative" })&nbsp;
                                <input type="number" id="txtCTxnCount" class="input40" placeholder="Txn Count" disabled /><span style="margin-left: 10px; margin-right: 10px;margin-top:10px;"> in last</span>
                                <input type="number" id="txtCTxnMonths" class="input20" placeholder="months" disabled style="margin-right:10px;" />
                                @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.CumulativeFrequency(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @disabled = "disabled", @id = "ddlTxnCumulativeFrequency" })&nbsp;
                            </div>

                            <div class="row mt-4 mb-2 col-md-12 col-xl-12 ml-0">
                                <input type="radio" id="rbtnCSpend" name="CumulativeFilters" style="width: 20px; height: 20px; cursor: pointer;" /> &nbsp;Spend&nbsp;
                                @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.LessThanMoreThan(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @disabled = "disabled", @id = "ddlSpendCumulative" })&nbsp;
                                <input type="number" id="txtCSpendCount" class="input40" placeholder="Amount" disabled /><span style="margin-left: 10px; margin-right: 10px;margin-top:10px;"> in last</span>
                                <input type="number" id="txtCSpendMonths" class="input20" placeholder="months" disabled style="margin-right:10px;" />
                                @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.CumulativeFrequency(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @disabled = "disabled", @id = "ddlSpendCumulativeFrequency" })&nbsp;
                            </div>
                        </div>
                        <div class="row mt-4 col-md-12 col-xl-12 ml-0" id="dvNonTxnFilters" style="display:none;">
                            <input type="radio" id="chkNonTxnAll" name="NonTxnsecondFilters" style="width: 20px; cursor: pointer;" /> &nbsp;All &nbsp;
                            <input type="radio" id="chkNonTxnEnrolled" name="NonTxnsecondFilters" style="width:20px; cursor:pointer;" /> &nbsp; Enrolled
                            <input type="radio" id="chkNonTxnBulkUpload" name="NonTxnsecondFilters" style="width:20px; cursor:pointer;margin-left:20px;" /> &nbsp;Bulk Upload
                            <input type="radio" id="chkNonTxnReferal" name="NonTxnsecondFilters" style="width: 20px; cursor: pointer; margin-left: 20px;" /> &nbsp;Referal
                            <input type="radio" id="chkNonTxnDLC" name="NonTxnsecondFilters" style="width: 20px; cursor: pointer; margin-left: 20px;" /> &nbsp;DLC
                        </div>

                        <div class="row mt-4 col-md-12 col-xl-12 ml-0" id="dvNonTxnDLC" style="display:none;">
                            <span style="margin-top:10px;margin-right:5px;">QR Source</span> @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.lstDLCSource, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlDLCSourceNT" })&nbsp;
                        </div>

                        <div class="row mt-4 col-md-12 col-xl-12 ml-0" id="dvMemberAFilters" style="display:none;">
                            <input type="radio" id="chkMReferal" name="MemberAFilters" style="width: 20px; cursor: pointer;" /> &nbsp;Referal &nbsp;
                            <input type="radio" id="chkMDLC" name="MemberAFilters" style="width:20px; cursor:pointer;" /> &nbsp; DLC
                        </div>

                        <div class="row mt-4 col-md-12 col-xl-12 ml-0" id="dvMemberAThirdFilters" style="display:none;">
                            <input type="radio" id="chkMAAll" name="MemberAThirdFilters" style="width: 20px; cursor: pointer;" /> &nbsp;All &nbsp;
                            <input type="radio" id="chkMATransacting" name="MemberAThirdFilters" style="width:20px; cursor:pointer;" /> &nbsp; Transacting &nbsp;
                            <input type="radio" id="chkMANonTransacting" name="MemberAThirdFilters" style="width:20px; cursor:pointer;" /> &nbsp; Only Registered
                        </div>

                        <div class="row mt-4 col-md-12 col-xl-12 ml-0" id="dvMDLCSource" style="display:none;">
                            <span style="margin-top:10px;margin-right:5px;">QR Source</span> @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.lstDLCSource, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlDLCSource" })&nbsp;
                        </div>
                    </div>
                    <hr id="hrTxnFilter" style="border-top: dashed 1px;" />
                    <h6 style="font-weight:bold;" id="TxnFilterText">Transactional Filter</h6>

                    <div class="row mt-4 col-md-12 col-xl-12" id="dvEnrolledRange">
                        <div class="col-xl-1">
                            <input type="checkbox" id="chkEnrolledRange" style="width:20px; height:20px; cursor:pointer;" />
                        </div>
                        <div class="col-xl-3" style="margin-left:-40px;">
                            Enrolled/Upload/Registration Range
                        </div>
                        <div class="col-xl-8 row" id="divDateRange" style="margin-left:0px;">
                            <input type="date" id="txtEnrollfromdt" class="input40" placeholder="From Enrolled" disabled />
                            <input type="date" id="txtEnrolltodt" class="input40" placeholder="To Enrolled" disabled style="margin-left:5px;" />
                        </div>
                    </div>

                    <div class="row mt-2 col-md-12 col-xl-12" id="dvInactive">
                        <div class="col-xl-1">
                            <input type="checkbox" id="chkInactiveSince" style="width:20px; height:20px; cursor:pointer;" />
                        </div>
                        <div class="col-xl-3" style="margin-left:-40px;">
                            Inactive since (days)
                        </div>
                        <div class="col-xl-3">
                            <input type="number" id="txtNonTransactedMax" class="input40" placeholder="Enter days" disabled />
                        </div>
                    </div>

                    <div class="row mt-2 col-md-12 col-xl-12" id="dvPointBalance">
                        <div class="col-xl-1">
                            <input type="checkbox" id="chkPointBalance" style="width:20px; height:20px; cursor:pointer;" />
                        </div>
                        <div class="col-xl-3" style="margin-left:-40px;">
                            Points Balance
                        </div>
                        <div class="col-xl-6">
                            <input type="number" id="txtPointsBalMin" class="input40" placeholder="From/Less than" disabled />
                            <input type="number" id="txtPointsBalMax" class="input40" placeholder="To/More than" disabled />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xl-10">
                            <div class="row mt-2 col-md-12 col-xl-12" id="dvTxnCount">
                                <div class="col-xl-1">
                                    <input type="checkbox" id="chkTxnCount" style="width:20px; height:20px; cursor:pointer;" />
                                </div>
                                <div class="col-xl-3" style="margin-left:-25px;">
                                    Transaction Count
                                </div>
                                <div class="col-xl-6" style="margin-left:43px;">
                                    <input type="number" id="txtTxnCountMin" class="input40" placeholder="From/Less than" disabled />
                                    <input type="number" id="txtTxnCountMax" class="input40" placeholder="To/More than" disabled />
                                </div>
                            </div>

                            <div class="row mt-2 col-md-12 col-xl-12" id="dvSpend">
                                <div class="col-xl-1">
                                    <input type="checkbox" id="chkSpend" style="width:20px; height:20px; cursor:pointer;" />
                                </div>
                                <div class="col-xl-3" style="margin-left:-25px;">
                                    Cumulative Spends (Rs.)
                                </div>
                                <div class="col-xl-6" style="margin-left:43px;">
                                    <input type="number" id="txtSpendMin" class="input40" placeholder="From/Less than" disabled />
                                    <input type="number" id="txtSpendMax" class="input40" placeholder="To/More than" disabled />
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-2" style="margin-top:30px;margin-left:-200px;" id="dvCountSpendDt">
                            <input type="date" id="txtTxnCountSpendfromdt" class="input40" placeholder="From" disabled />
                            <input type="date" id="txtTxnCountSpendtodt" class="input40" placeholder="To" disabled style="margin-left:5px;" />
                        </div>
                    </div>
                    <div class="row mt-2 col-md-12 col-xl-12" id="dvInvoiceValue">
                        <div class="col-xl-1">
                            <input type="checkbox" id="chkInvoiceValue" style="width:20px; height:20px; cursor:pointer;" />
                        </div>
                        <div class="col-xl-3" style="margin-left:-40px;">
                            Invoice Value (Rs.)
                        </div>
                        <div class="col-xl-6">
                            <input type="number" id="txtInvoiceValueMin" class="input40" placeholder="From/Less than" disabled />
                            <input type="number" id="txtInvoiceValueMax" class="input40" placeholder="To/More than" disabled />
                        </div>
                    </div>

                    <div class="row mt-2 col-md-12 col-xl-12" id="dvAvgTicket">
                        <div class="col-xl-1">
                            <input type="checkbox" id="chkAvgTicket" style="width:20px; height:20px; cursor:pointer;" />
                        </div>
                        <div class="col-xl-3" style="margin-left:-40px;">
                            Average Ticket Size
                        </div>
                        <div class="col-xl-8">
                            <input type="number" id="txtAvgTicketFrm" class="input40" placeholder="Ticket size from" disabled />
                            <input type="number" id="txtAvgTicketTo" class="input40" placeholder="Ticket size to" disabled />
                        </div>
                    </div>

                    <div class="row mt-2 col-md-12 col-xl-12" style="padding-bottom:20px;" id="dvRedeemed">
                        <div class="col-xl-1">
                            <input type="checkbox" id="chkRedeemed" style="width:20px; height:20px; cursor:pointer;" />
                        </div>
                        <div class="col-xl-3" style="margin-left:-40px;">
                            Redeemed
                        </div>
                        <div class="col-xl-4">
                            <input type="radio" id="rbtnRedeemedMultiple" name="RedeemedOrNot" style="width:20px;height:20px; cursor:pointer;" disabled />&nbsp; Multiple
                            <input type="radio" id="rbtnRedeemedSingle" name="RedeemedOrNot" style="width: 20px; height: 20px; cursor: pointer; margin-left: 20px;" disabled />&nbsp; Single
                            <input type="radio" id="rbtnNonRedeemed" name="RedeemedOrNot" style="width: 20px; height: 20px; cursor: pointer; margin-left: 20px;" disabled />&nbsp; No
                        </div>
                    </div>

                    <hr id="hrProduct" style="border-top: dashed 1px;" />
                    <h6 id="headingProduct" style="font-weight:bold;">Product Filter</h6>

                    <div class="row mt-2 col-md-12 col-xl-12" id="dvNeverPurchased">
                        <div class="col-xl-1">
                            <input type="checkbox" id="chkNeverPurchased" style="width:20px; height:20px; cursor:pointer;" />
                        </div>
                        <div class="col-xl-3" style="margin-left:-40px;">
                            Never Purchased
                        </div>
                        <div class="row col-xl-8 ml-0">
                            @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.lstCategory, "Value", "Text"), "All Category", htmlAttributes: new { @class = "input40", @disabled = "disabled", @id = "ddlNPCategory" })&nbsp;
                            @Html.DropDownListFor(x => Model.dummySubCategory, new SelectList(Model.lstSubCategory, "Value", "Text"), "All SubCategory", htmlAttributes: new { @class = "input40", @disabled = "disabled", @id = "ddlNPSubCategory" })&nbsp;
                            @Html.DropDownListFor(x => Model.dummyProduct, new SelectList(Model.lstProduct, "Value", "Text"), "All Products", htmlAttributes: new { @class = "input40", @disabled = "disabled", @id = "ddlNPProduct" })
                        </div>
                    </div>

                    <div class="row mt-2 col-md-12 col-xl-12" id="dvPurchased">
                        <div class="col-xl-1">
                            <input type="checkbox" id="chkPurchased" style="width:20px; height:20px; cursor:pointer;" />
                        </div>
                        <div class="col-xl-3" style="margin-left:-40px;">
                            Purchased
                        </div>
                        <div class="row col-xl-8 ml-0">
                            @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.lstCategory, "Value", "Text"), "All Category", htmlAttributes: new { @class = "input40", @disabled = "disabled", @id = "ddlPCategory" })&nbsp;
                            @Html.DropDownListFor(x => Model.dummySubCategory, new SelectList(Model.lstSubCategory, "Value", "Text"), "All SubCategory", htmlAttributes: new { @class = "input40", @disabled = "disabled", @id = "ddlPSubCategory" })&nbsp;
                            @Html.DropDownListFor(x => Model.dummyProduct, new SelectList(Model.lstProduct, "Value", "Text"), "All Products", htmlAttributes: new { @class = "input40", @disabled = "disabled", @id = "ddlPProduct" })
                        </div>
                    </div>

                    <hr id="hrBrand" style="border-top: dashed 1px;" />
                    <h6 style="font-weight:bold;">Store Filter</h6>

                    <div class="row mt-2 col-md-12 col-xl-12" style="border-top:dashed solid grey;">
                        <div class="col-xl-1">
                            <input type="checkbox" id="chkBrands" style="width:20px; height:20px; cursor:pointer;" />
                        </div>
                        <div class="col-xl-3" style="margin-left:-40px;">
                            Zone
                        </div>
                        <div class="row col-xl-8 ml-0">
                            @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.lstBrands, "Value", "Text"), "All", htmlAttributes: new { @class = "input40", @disabled = "disabled", @id = "ddlBrands" })

                        </div>
                    </div>

                    <div class="row mt-2 col-md-12 col-xl-12">
                        <div class="col-xl-1">
                            <input type="checkbox" id="chkOutlet" style="width:20px; height:20px; cursor:pointer;" />
                        </div>
                        <div class="col-xl-3" style="margin-left:-40px;">
                            Enrolled Outlet
                        </div>
                        <div class="row col-xl-8 ml-0">
                            @Html.ListBoxFor(x => Model.dummyCategory, new MultiSelectList(Model.lstOutlets, "Value", "Text"), new { @class = "input100", Multiple = "multiple", @disabled = "disabled", @id = "lstBoxOutlet" })
                        </div>
                    </div>

                    <div class="row mt-2 col-md-12 col-xl-12" id="dvTransactingOutlet">
                        <div class="col-xl-1">
                            <input type="checkbox" id="chkTOutlet" style="width:20px; height:20px; cursor:pointer;" />
                        </div>
                        <div class="col-xl-3" style="margin-left:-40px;">
                            Transacting Outlet
                        </div>
                        <div class="row col-xl-5 ml-0">
                            @Html.ListBoxFor(x => Model.dummyCategory, new MultiSelectList(Model.lstOutlets, "Value", "Text"), new { @class = "input100", Multiple = "multiple", @disabled = "disabled", @id = "lstBoxTOutlet" })
                        </div>
                        <div class="row col-xl-3 ml-0">
                            <input type="radio" id="chkTOutletAnyOne" name="TOutlet" style="width: 20px; cursor: pointer;" disabled /> <span style="padding-top:41px;">&nbsp;Anyone &nbsp;</span>
                            <input type="radio" id="chkTOutletLast" name="TOutlet" style="width:20px; cursor:pointer;" disabled /> <span style="padding-top:41px;">&nbsp;Last &nbsp;</span>
                        </div>
                    </div>

                    <hr id="hrDemography" style="border-top: dashed 1px;" />
                    <h6 id="headingDemography" style="font-weight:bold;">Demographic Filter</h6>

                    <div class="row mt-2 col-md-12 col-xl-12" id="dvGender">
                        <div class="col-xl-1">
                            <input type="checkbox" id="chkGender" style="width:20px; height:20px; cursor:pointer;" />
                        </div>
                        <div class="col-xl-3" style="margin-left:-40px;">
                            Gender
                        </div>
                        <div class="col-xl-8 row" style="margin-left:0px;">
                            @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.Gender(), "Value", "Text"), "All", htmlAttributes: new { @class = "input40", @disabled = "disabled", @id = "ddlGender" })
                        </div>
                    </div>

                    <div class="row mt-2 col-md-12 col-xl-12" id="dvCity">
                        <div class="col-xl-1">
                            <input type="checkbox" id="chkCity" style="width:20px; height:20px; cursor:pointer;" />
                        </div>
                        <div class="col-xl-3" style="margin-left:-40px;">
                            City
                        </div>
                        <div class="col-xl-8 row" style="margin-left:0px;">
                            <input type="text" id="txtCity" class="input40" placeholder="City" disabled />
                        </div>
                    </div>

                    <div class="row mt-2 col-md-12 col-xl-12" id="dvAge">
                        <div class="col-xl-1">
                            <input type="checkbox" id="chkAge" style="width:20px; height:20px; cursor:pointer;" />
                        </div>
                        <div class="col-xl-3" style="margin-left:-40px;">
                            Age
                        </div>
                        <div class="col-xl-8 row" style="margin-left:0px;">
                            <input type="number" id="txtAgefrom" class="input40" placeholder="Age From" disabled />
                            <input type="number" id="txtAgeTo" class="input40" placeholder="Age To" disabled style="margin-left:5px;" />
                        </div>
                    </div>

                    <div class="row mt-2 col-md-12 col-xl-12" id="dvBirthday">
                        <div class="col-xl-1">
                            <input type="checkbox" id="chkBirthday" style="width:20px; height:20px; cursor:pointer;" />
                        </div>
                        <div class="col-xl-3" style="margin-left:-40px;">
                            Birthday
                        </div>
                        <div class="col-xl-8 row" style="margin-left:0px;">
                            @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.BAMonths(), "Value", "Text"), "All", htmlAttributes: new { @class = "input40", @disabled = "disabled", @id = "ddlBirthday" })&nbsp;
                        </div>
                    </div>

                    <div class="row mt-2 col-md-12 col-xl-12" id="dvAnniversary">
                        <div class="col-xl-1">
                            <input type="checkbox" id="chkAnniversary" style="width:20px; height:20px; cursor:pointer;" />
                        </div>
                        <div class="col-xl-3" style="margin-left:-40px;">
                            Anniversary
                        </div>
                        <div class="col-xl-8 row" style="margin-left:0px;">
                            @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.BAMonths(), "Value", "Text"), "All", htmlAttributes: new { @class = "input40", @disabled = "disabled", @id = "ddlAnniversary" })&nbsp;
                        </div>
                    </div>


                    <hr id="hrButtons" style="border-top: dashed 1px;" />

                    <div class="row mt-4 col-md-8 col-xl-8">
                        <button id="btnFilter" class="btn btn-primary login-btn">Filter</button>
                        <button id="btnGenerate" class="btn btn-primary login-btn ml-2">Generate Report</button>
                        <button id="btnSave" class="btn btn-primary login-btn ml-2">Save For Campaign</button>

                    </div>
                    <div class="row mt-4 col-md-4 col-xl-4">
                        <table id="tblFilterDetails" border="1" cellpadding="5" cellspacing="5" style="margin-left:50px;display:none;">
                            <tr>
                                <td>Total Base Count</td>
                                <td><span id="spnTotalCount"></span></td>
                            </tr>
                            <tr>
                                <td>Filter Count</td>
                                <td><span id="spnFilterCount"></span></td>
                            </tr>
                        </table>
                    </div>

                    <div class="row mt-4 col-md-12 col-xl-12" style="display:none;" id="dvDatasetSave">
                        <input type="text" id="txtDSName" class="input100" placeholder="Dataset Name" />
                        <button id="btnSaveDS" class="btn btn-primary login-btn ml-2">Save Dataset</button>
                    </div>
                </div>

                <div class="mb-3 pr-3 pt-3 pl-3 card col-md-12 col-xl-12" style="padding-bottom:20px;display:none;" id="dvGenerateReport">
                    <h5>Customize Report</h5>

                    <div id="divcolumnlist" class="row mt-3 ml-3 col-md-10 col-xl-10 ">
                        <div>
                            <select id="ChooseLeft" multiple="multiple" style="height: 200px; width: 200px;">
                            </select>
                        </div>
                        <div style="margin-top:140px;margin-left:30px;margin-right:30px;">
                            <input id="ShiftRight" type="button" value="ShiftRight >>" class="btn btn-primary login-btn" style="margin-right:10px;font-weight:bold;" />
                            <input id="ShiftLeft" type="button" value="ShiftLeft << " class="btn btn-primary login-btn" style="font-weight:bold;" />
                        </div>
                        <div>
                            <select id="ChooseRight" multiple="multiple" style="height:200px;width:200px;">
                            </select>
                        </div>
                    </div>
                    <div class="row mt-5">
                        <button class=" ml-3 btn btn-primary login-btn" type="button" id="btnGetReport" onclick="GetReport();" style="text-align:right;">
                            Get Report
                        </button>
                        <button class="ml-3 btn btn-primary login-btn" onclick='ExportDataExcel(0);' type="button" id="btnExport">
                            <i class="fas fa-file-export"></i> Export
                        </button>
                    </div>
                    <div id="dvListing" class="row mt-5 col-md-12 col-xl-12" style="display:none;">

                    </div>
                </div>
            </div>
        </div>

        <div class="multisteps-form__panel  p-2 m-2 bg-white panel" id="two-panel">
            <div id="dvDataset">
                <div class="mb-3 pr-3 pt-3 pl-3 card col-md-12 col-xl-12" style="padding-bottom:20px;">
                    <h5>Dataset List</h5>
                    <div class="row mt-3" id="dvActivityData">
                        <div class="table-responsive">
                            <table class="table" id="groupListTable">
                                <thead>
                                    <tr>
                                        <th scope="col" style="text-align:center;">Dataset Name</th>
                                        <th scope="col" style="text-align:left;">Criteria</th>
                                        <th scope="col" style="text-align:center;">Created Date</th>
                                        <th scope="col" style="text-align: left;">Created By</th>
                                        <th scope="col" style="text-align:center;">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null)
                                    {
                                        foreach (var item in Model.lstCRDataset)
                                        {
                                            <tr>
                                                <td>@item.DSName</td>
                                                <td>@Html.Raw(item.DSCriteria)</td>
                                                <td>@item.AddedDate</td>
                                                <td>@item.AddedBy</td>
                                                <td>
                                                    <button class="ml-3 btn btn-primary login-btn" onclick='GetReportDSCount("@item.DSId");' type="button" id="btnGenerateReport">
                                                        Generate Report
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="mb-3 pr-3 pt-3 pl-3 card col-md-12 col-xl-12" style="padding-bottom:20px;display:none;" id="dvShowReport">
                <h5>Customize Report</h5>

                <div id="divcolumns" class="row mt-3 ml-3 col-md-12 col-xl-12 ">
                    <div>
                        <select id="ChooseLeft1" multiple="multiple" style="height: 200px; width: 200px;">
                        </select>
                    </div>
                    <div style="margin-top:140px;margin-left:20px;margin-right:20px;">
                        <input id="ShiftRight1" type="button" value="ShiftRight >>" class="btn btn-primary login-btn" style="margin-right:10px;font-weight:bold;" />
                        <input id="ShiftLeft1" type="button" value="ShiftLeft << " class="btn btn-primary login-btn" style="font-weight:bold;" />
                    </div>
                    <div>
                        <select id="ChooseRight1" multiple="multiple" style="height:200px;width:200px;">
                        </select>
                    </div>
                    <div class="ml-3">
                        <table id="tblDSFilterDetails" border="1" cellpadding="10" cellspacing="10">
                            <tr>
                                <td>Total Base Count</td>
                                <td style="text-align:right;"><span id="spnDSTotalCount"></span></td>
                            </tr>
                            <tr>
                                <td>Filter Count</td>
                                <td style="text-align:right;"><span id="spnDSQueryCount"></span></td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="row mt-5 pl-5">
                    <button type="button" id="btnPopupClose" class="btn btn-outline-primary cancel-btn" onclick="CloseGenerateReport();"> Close</button>
                    <button class=" ml-3 btn btn-primary login-btn" type="button" id="btnGetReport1" onclick="GetReportDS();" style="text-align:right;">
                        Get Report
                    </button>
                    <button class="ml-3 btn btn-primary login-btn" onclick='ExportDataExcel(1);' type="button" id="btnExport1">
                        <i class="fas fa-file-export"></i> Export
                    </button>
                </div>
                <div id="dvListing1" class="row mt-5 col-md-12 col-xl-12" style="display:none;">

                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

<script>
    $(function () {
        $("#ShiftRight,#ShiftLeft").click(function (event) {
            var ID = $(event.target).attr("ID");
            var ChooseFrom = ID == "ShiftRight" ? "#ChooseLeft" : "#ChooseRight";
            var moveTo = ID == "ShiftRight" ? "#ChooseRight" : "#ChooseLeft";
            var SelectData = $(ChooseFrom + " :selected").toArray();
            $(moveTo).append(SelectData);
            SelectData.remove;
        });
        $("#ShiftRight1,#ShiftLeft1").click(function (event) {
            var ID = $(event.target).attr("ID");
            var ChooseFrom = ID == "ShiftRight1" ? "#ChooseLeft1" : "#ChooseRight1";
            var moveTo = ID == "ShiftRight1" ? "#ChooseRight1" : "#ChooseLeft1";
            var SelectData = $(ChooseFrom + " :selected").toArray();
            $(moveTo).append(SelectData);
            SelectData.remove;
        });
    });

    $(document).ready(function () {
        DisableAllCheckboxes();
        
        FillColumns();
        FillColumns1();

        OnchangeMethods();

        $("#btnFilter").click(function () {
            GetFilterCount();
        });

        $("#btnGenerate").click(function () {
            $("#dvGenerateReport").show();
        });
        $("#btnSave").click(function () {
            $("#dvDatasetSave").show();
        });
        $("#btnSaveDS").click(function () {
            SaveFilterCriteria();
        });
        EnableDisableControls();

        document.getElementById("btnGenerate").disabled = "disabled";
        document.getElementById("btnSave").disabled = "disabled";
    });

    function FillColumns() {
        $("#ChooseLeft").empty();
        $("#ChooseRight").empty();
        let myOptions = [

            { "ColumnId": "EnrolledOutletName", "ColumnName": "Outlet Name" },
            { "ColumnId": "MobileNo", "ColumnName": "Mobile No" },
            { "ColumnId": "CustName", "ColumnName": "Customer Name" },
            { "ColumnId": "FirstTxnDate", "ColumnName": "First Txn Date" },
            { "ColumnId": "LastTxnDate", "ColumnName": "Last Txn Date" },
            { "ColumnId": "TotalTxnCount", "ColumnName": "No Of Txn" },
            { "ColumnId": "EnrolledDate", "ColumnName": "Enrolled Date" },
            { "ColumnId": "PointsBalance", "ColumnName": "Total Available Points" },
            { "ColumnId": "Spends", "ColumnName": "Total Spend" },
        ];

        myOptions.forEach(function (e, i) {
            $('#ChooseLeft').append($('<option></option>').val(e.ColumnId).text(e.ColumnName));
        });
    }

    function FillColumns1() {
        $("#ChooseLeft1").empty();
        $("#ChooseRight1").empty();
        let myOptions1 = [
            { "ColumnId": "EnrolledOutletName", "ColumnName": "Outlet Name" },
            { "ColumnId": "MobileNo", "ColumnName": "Mobile No" },
            { "ColumnId": "CustName", "ColumnName": "Customer Name" },
            { "ColumnId": "FirstTxnDate", "ColumnName": "First Txn Date" },
            { "ColumnId": "LastTxnDate", "ColumnName": "Last Txn Date" },
            { "ColumnId": "TotalTxnCount", "ColumnName": "No Of Txn" },
            { "ColumnId": "EnrolledDate", "ColumnName": "Enrolled Date" },
            { "ColumnId": "PointsBalance", "ColumnName": "Total Available Points" },
            { "ColumnId": "Spends", "ColumnName": "Total Spend" },
        ];
        myOptions1.forEach(function (e, i) {
            $('#ChooseLeft1').append($('<option></option>').val(e.ColumnId).text(e.ColumnName));
        });
    }

    function OnchangeMethods() {
        $("#chkTransacting").on('change', function () {
            EnableAllCheckboxes();
            if ($("#chkTxnOnlyOnce").is(":checked")) {
            }
            else
             ShowAll();
            $("#dvBaseFilters").show();
            $("#chkAll").prop("checked", true);
            $("#ddlOnlyOnce").val($("#ddlOnlyOnce option:first").val());
            $("#dvNonTxnFilters").hide();
            $("#dvNonTxnDLC").hide();
            $("#dvTxnFilters").show();
            $("#dvDLCReferalFilters").hide();
            $("#dvMemberAFilters").hide();
            $("#dvMemberAThirdFilters").hide();
            $("#dvMDLCSource").hide();
            $("#dvTransactingOutlet").show();
            $("#dvCumulative").hide();

            $("#hrDemography").show();
            $("#headingDemography").show();
            $("#dvGender").show();
            $("#dvCity").show();
            $("#dvAge").show();
            $("#dvBirthday").show();
            $("#dvAnniversary").show();
            $("#dvCountSpendDt").show();
            ResetTransactionFilters();
        });
        $("#chkNonTransacting").on('change', function () {
            EnableAllCheckboxes();
            HideAll();
            $("#dvBaseFilters").show();
            $("#dvTransactingOutlet").hide();
            $("#dvTxnFilters").hide();
            $("#TxnFilterText").hide();
            $("#dvTxnOnlyOnce").hide();
            $("#dvTxnInactive").hide();
            $("#dvCumulative").hide();
            $("#dvMemberAFilters").hide();
            $("#dvNonTxnFilters").show();
            $("#dvMemberAThirdFilters").hide();
            $("#dvMDLCSource").hide();
            $("#dvCumulative").hide();
            $("#hrDemography").show();
            $("#headingDemography").show();
            $("#dvGender").show();
            $("#dvCity").show();
            $("#dvAge").show();
            $("#dvBirthday").show();
            $("#dvAnniversary").show();
            $("#dvCountSpendDt").hide();
            $("#dvTxnAIsegment").hide();
            if ($("#chkNonTxnAll").is(":checked") || $("#chkNonTxnEnrolled").is(":checked") || $("#chkNonTxnBulkUpload").is(":checked") || $("#chkNonTxnReferal").is(":checked") || $("#chkNonTxnDLC").is(":checked")) {
                HideAll();
                $("#dvEnrolledRange").show();
                if ($("#chkNonTxnDLC").is(":checked")) {
                    $("#dvNonTxnDLC").show();
                }
                else {
                    $("#dvNonTxnDLC").hide();
                }
            }
            ResetTransactionFilters();
        });
        $("#chkMemberAcquition").on('change', function () {
            EnableAllCheckboxes();
            ShowAll();
            $("#dvBaseFilters").show();
            $("#dvTxnFilters").hide();
            $("#dvTxnOnlyOnce").hide();
            $("#dvTxnInactive").hide();
            $("#dvCumulative").hide();
            $("#dvNonTxnFilters").hide();
            $("#dvNonTxnDLC").hide();
            $("#dvMemberAFilters").show();
            $("#dvTransactingOutlet").show();
            $("#dvCumulative").hide();

            $("#hrDemography").show();
            $("#headingDemography").show();
            $("#dvGender").show();
            $("#dvCity").show();
            $("#dvAge").show();
            $("#dvBirthday").show();
            $("#dvAnniversary").show();
            $("#dvCountSpendDt").hide();
            $("#dvTxnAIsegment").hide();
            ResetTransactionFilters();
        });
        $("#chkPastTransTrendAnalysis").on('change', function () {
            EnableAllCheckboxes();
            HideAll();
            $("#dvBaseFilters").show();
            $("#dvCumulative").show();
            $("#dvTxnFilters").hide();
            $("#dvTxnOnlyOnce").hide();
            $("#dvTxnInactive").hide();
            $("#dvTransactingOutlet").hide();
            $("#dvNonTxnFilters").hide();
            $("#dvNonTxnDLC").hide();
            $("#dvMemberAFilters").hide();
            $("#dvTxnFilters").hide();
            $("#dvMemberAThirdFilters").hide();
            $("#dvMDLCSource").hide();

            $("#hrDemography").hide();
            $("#headingDemography").hide();
            $("#dvGender").hide();
            $("#dvCity").hide();
            $("#dvAge").hide();
            $("#dvBirthday").hide();
            $("#dvAnniversary").hide();
            $("#dvCountSpendDt").hide();
            $("#dvTxnAIsegment").hide();
            ResetTransactionFilters();
        });
        $("#chkAll").on('change', function () {
            /*$("#txnSection").show();*/
            $("#dvEnrolledRange").show();
            $("#dvTxnCount").show();
            $("#dvPointBalance").show();
            $("#dvRedeemed").show();
            $("#dvNeverPurchased").show();
            $("#headingProduct").show();
            $("#dvPurchased").show();
            $("#dvInactive").show();
            $("#dvSpend").show();
            $("#dvTxnOnlyOnce").hide();
            $("#dvTxnInactive").hide();
            $("#hrTxnFilter").show();
            $("#TxnFilterText").show();
            $("#dvTxnTier").hide();
            $("#dvTxnAIsegment").hide();
            $("#dvCountSpendDt").show();
            $("#dvInvoiceValue").show();
            $("#dvAvgTicket").show();
            ResetTransactionFilters();
        });
        $("#chkTxnAIsegment").on('change', function () {
            /*$("#txnSection").show();*/
            $("#dvEnrolledRange").show();
            $("#dvTxnCount").show();
            $("#dvPointBalance").show();
            $("#dvRedeemed").show();
            $("#dvNeverPurchased").show();
            $("#headingProduct").show();
            $("#dvPurchased").show();
            $("#dvInactive").show();
            $("#dvSpend").show();
            $("#dvTxnOnlyOnce").hide();
            $("#dvTxnInactive").hide();
            $("#hrTxnFilter").show();
            $("#TxnFilterText").show();
            $("#dvCountSpendDt").hide();
            ResetTransactionFilters();
        });
        $("#chkTxnTier").on('change', function () {
            $("#ddlAIsegment").val($("#ddlAIsegment option:first").val());
            $("#dvTxnAIsegment").show();
            /*$("#txnSection").show();*/
            $("#dvEnrolledRange").show();
            $("#dvTxnCount").show();
            $("#dvPointBalance").show();
            $("#dvRedeemed").show();
            $("#dvNeverPurchased").show();
            $("#headingProduct").show();
            $("#dvPurchased").show();
            $("#dvInactive").show();
            $("#dvSpend").show();
            $("#dvTxnOnlyOnce").hide();
            $("#dvTxnInactive").hide();
            $("#hrTxnFilter").show();
            $("#TxnFilterText").show();
            $("#dvCountSpendDt").hide();
            $("#dvTxnAIsegment").hide();
            $("#dvAvgTicket").show();
            ResetTransactionFilters();
        });
        $("#chkTxnOnlyOnce").on('change', function () {
            $("#ddlOnlyOnce").val($("#ddlOnlyOnce option:first").val());
            $("#dvTxnOnlyOnce").show();
            $("#dvTxnInactive").hide();
            HideAll();
            $("#headingProduct").show();
            $("#dvPurchased").show();
            $("#dvNeverPurchased").show();
            $("#hrProduct").show();
            $("#dvTxnTier").hide();
            $("#dvTxnAIsegment").hide();
            $("#dvCountSpendDt").hide();
            $("#dvTxnAIsegment").hide();
            ResetTransactionFilters();
        });
        $("#chkTxnInactive").on('change', function () {
            $("#hrTxnFilter").hide();
            $("#TxnFilterText").hide();
            if ($("#chkTxnInactive").is(":checked")) {
                $("#dvTxnInactive").show();
                $("#dvTxnOnlyOnce").hide();
                $("#ddlInactive").val($("#ddlInactive option:first").val());
            }
            else {
                $("#dvTxnInactive").hide();
            }

            HideAll();
            $("#headingProduct").show();
            $("#dvPurchased").show();
            $("#dvNeverPurchased").show();
            $("#hrProduct").show();
            $("#dvTxnTier").hide();
            $("#dvTxnAIsegment").hide();
            $("#dvCountSpendDt").hide();
            $("#dvTxnAIsegment").hide();
            ResetTransactionFilters();
        });
        $("#chkTxnAIsegment").on('change', function () {
            $("#ddlAIsegment").val($("#ddlAIsegment option:first").val());
            $("#dvTxnAIsegment").show();
            $("#dvTxnOnlyOnce").hide();
            $("#dvTxnInactive").hide();
            $("#dvTxnTier").hide();
            HideAll();
            $("#headingProduct").show();
            $("#dvPurchased").show();
            $("#dvNeverPurchased").show();
            $("#hrProduct").show();
            ResetTransactionFilters();
        });
        $("#chkTxnTier").on('change', function () {
            $("#ddlTier").val($("#ddlTier option:first").val());
            $("#dvTxnTier").show();
            $("#dvTxnOnlyOnce").hide();
            $("#dvTxnInactive").hide();
            $("#dvTxnAIsegment").hide();
            HideAll();
            $("#headingProduct").show();
            $("#dvPurchased").show();
            $("#dvNeverPurchased").show();
            $("#hrProduct").show();
            ResetTransactionFilters();
        });

        $("#chkNonTxnAll").on('change', function () {
            $("#dvNonTxnDLC").hide();
            ResetTransactionFilters();
        });
        $("#chkNonTxnEnrolled").on('change', function () {
            $("#dvNonTxnDLC").hide();
            ResetTransactionFilters();
        });
        $("#chkNonTxnBulkUpload").on('change', function () {
            $("#dvNonTxnDLC").hide();
            ResetTransactionFilters();
        });
        $("#chkNonTxnReferal").on('change', function () {
            $("#dvNonTxnDLC").hide();
            ResetTransactionFilters();
        });
        $("#chkNonTxnDLC").on('change', function () {
            $("#dvNonTxnDLC").show();
            ResetTransactionFilters();
        });
        $("#chkMReferal").on('change', function () {
            ResetTransactionFilters();
            $("#dvMemberAThirdFilters").show();
            $("#dvMDLCSource").hide();
        });
        $("#chkMDLC").on('change', function () {
            ResetTransactionFilters();
            $("#dvMemberAThirdFilters").show();
            $("#dvMDLCSource").show();
        });
        $("#rbtnCSpend").on('change', function () {
            $("#hrTxnFilter").show();
            $("#TxnFilterText").show();
            $("#dvSpend").show();
            $("#ddlTxnCumulative").val($("#ddlTxnCumulative option:first").val());
            $("#txtCTxnCount").val("");
            $("#txtCTxnMonths").val("");
            $("#ddlTxnCumulativeFrequency").val($("#ddlTxnCumulativeFrequency option:first").val());
            ResetTransactionFilters();
        });
        $("#rbtnCTxnCount").on('change', function () {
            $("#hrTxnFilter").hide();
            $("#TxnFilterText").hide();
            $("#dvSpend").hide();
            $("#ddlSpendCumulative").val($("#ddlSpendCumulative option:first").val());
            $("#txtCSpendCount").val("");
            $("#txtCSpendMonths").val("");
            $("#ddlSpendCumulativeFrequency").val($("#ddlSpendCumulativeFrequency option:first").val());
            ResetTransactionFilters();
        });

        $("#ddlNPCategory").change(function () {
            GetSubCategoryAndProduct($("#ddlNPCategory").val(), $("#ddlNPSubCategory"), $("#ddlNPProduct"));
        });
        $("#ddlNPSubCategory").change(function () {
            GetProductBySubCat($("#ddlNPSubCategory").val(), $("#ddlNPProduct"));
        });
        $("#ddlPCategory").change(function () {
            GetSubCategoryAndProduct($("#ddlPCategory").val(), $("#ddlPSubCategory"), $("#ddlPProduct"));
        });
        $("#ddlPSubCategory").change(function () {
            GetProductBySubCat($("#ddlPSubCategory").val(), $("#ddlPProduct"));
        });
    }

    function EnableDisableControls() {

        $("#chkAvgTicket").on('change', function () {
            if ($("#chkAvgTicket").is(":checked")) {
                $("#txtAvgTicketFrm").prop('disabled', false);
                $("#txtAvgTicketTo").prop('disabled', false);
            }
            else {
                $("#txtAvgTicketFrm").prop('disabled', true);
                $("#txtAvgTicketTo").prop('disabled', true);

                $('#txtAvgTicketFrm').val("");
                $('#txtAvgTicketTo').val("");

            }
        });

        $("#chkEnrolledRange").on('change', function () {
            if ($("#chkEnrolledRange").is(":checked")) {
                $("#txtEnrollfromdt").prop('disabled', false);
                $("#txtEnrolltodt").prop('disabled', false);
            }
            else {
                $("#txtEnrollfromdt").prop('disabled', true);
                $("#txtEnrolltodt").prop('disabled', true);
                $('#txtEnrollfromdt').val("");
                $('#txtEnrolltodt').val("");
            }
        });

        $("#chkInactiveSince").on('change', function () {
            if ($("#chkInactiveSince").is(":checked")) {
                $("#txtNonTransactedMax").prop('disabled', false);
            }
            else {
                $("#txtNonTransactedMax").prop('disabled', true);
                $('#txtNonTransactedMax').val("");
            }
        });

        $("#chkTxnCount").on('change', function () {
            if ($("#chkTxnCount").is(":checked")) {
                $("#txtTxnCountMin").prop('disabled', false);
                $("#txtTxnCountMax").prop('disabled', false);
                $("#txtTxnCountSpendfromdt").prop('disabled', false);
                $("#txtTxnCountSpendtodt").prop('disabled', false);
            }
            else {
                $("#txtTxnCountMin").prop('disabled', true);
                $("#txtTxnCountMax").prop('disabled', true);
                $('#txtTxnCountMin').val("");
                $('#txtTxnCountMax').val("");
                if (!$("#chkSpend").is(":checked")) {
                    $("#txtTxnCountSpendfromdt").prop('disabled', true);
                    $("#txtTxnCountSpendtodt").prop('disabled', true);
                    $('#txtTxnCountSpendfromdt').val("");
                    $('#txtTxnCountSpendtodt').val("");
                }
            }
        });

        $("#chkSpend").on('change', function () {
            if ($("#chkSpend").is(":checked")) {
                $("#txtSpendMin").prop('disabled', false);
                $("#txtSpendMax").prop('disabled', false);
                $("#txtTxnCountSpendfromdt").prop('disabled', false);
                $("#txtTxnCountSpendtodt").prop('disabled', false);
            }
            else {
                $("#txtSpendMin").prop('disabled', true);
                $("#txtSpendMax").prop('disabled', true);
                $('#txtSpendMin').val("");
                $('#txtSpendMax').val("");
                if (!$("#chkTxnCount").is(":checked")) {
                    $("#txtTxnCountSpendfromdt").prop('disabled', true);
                    $("#txtTxnCountSpendtodt").prop('disabled', true);
                    $('#txtTxnCountSpendfromdt').val("");
                    $('#txtTxnCountSpendtodt').val("");
                }
            }
        });

        $("#chkInvoiceValue").on('change', function () {
            if ($("#chkInvoiceValue").is(":checked")) {
                $("#txtInvoiceValueMin").prop('disabled', false);
                $("#txtInvoiceValueMax").prop('disabled', false);
            }
            else {
                $("#txtInvoiceValueMin").prop('disabled', true);
                $("#txtInvoiceValueMax").prop('disabled', true);
                $('#txtInvoiceValueMin').val("");
                $('#txtInvoiceValueMax').val("");
            }
        });

        $("#chkPointBalance").on('change', function () {
            if ($("#chkPointBalance").is(":checked")) {
                $("#txtPointsBalMin").prop('disabled', false);
                $("#txtPointsBalMax").prop('disabled', false);
            }
            else {
                $("#txtPointsBalMin").prop('disabled', true);
                $("#txtPointsBalMax").prop('disabled', true);
                $('#txtPointsBalMin').val("");
                $('#txtPointsBalMax').val("");
            }
        });

        $("#chkRedeemed").on('change', function () {
            if ($("#chkRedeemed").is(":checked")) {
                $("#rbtnRedeemedMultiple").prop('disabled', false);
                $("#rbtnRedeemedSingle").prop('disabled', false);
                $("#rbtnNonRedeemed").prop('disabled', false);
            }
            else {
                $("#rbtnRedeemedMultiple").prop('disabled', true);
                $("#rbtnRedeemedSingle").prop('disabled', true);
                $("#rbtnNonRedeemed").prop('disabled', true);
                $("#rbtnRedeemedMultiple").prop('checked', false);
                $("#rbtnRedeemedSingle").prop('checked', false);
                $("#rbtnNonRedeemed").prop('checked', false);

            }
        });

        $("#chkNeverPurchased").on('change', function () {
            if ($("#chkNeverPurchased").is(":checked")) {
                $("#ddlNPCategory").prop('disabled', false);
                $("#ddlNPSubCategory").prop('disabled', false);
                var GroupId = '@Model.GroupId';
                if (GroupId == "1341")
                    $("#ddlNPProduct").prop('disabled', true);
                else
                    $("#ddlNPProduct").prop('disabled', false);
            }
            else {
                $("#ddlNPCategory").prop('disabled', true);
                $("#ddlNPSubCategory").prop('disabled', true);
                $("#ddlNPProduct").prop('disabled', true);
                $("#ddlNPCategory").val($("#ddlNPCategory option:first").val());
                $("#ddlNPSubCategory").val($("#ddlNPSubCategory option:first").val());
                $("#ddlNPProduct").val($("#ddlNPProduct option:first").val());
            }
        });

        $("#chkPurchased").on('change', function () {
            if ($("#chkPurchased").is(":checked")) {
                $("#ddlPCategory").prop('disabled', false);
                $("#ddlPSubCategory").prop('disabled', false);
                var GroupId = '@Model.GroupId';
                if (GroupId == "1341")
                    $("#ddlPProduct").prop('disabled', true);
                else
                    $("#ddlPProduct").prop('disabled', false);
                //$("#ddlPProduct").prop('disabled', false);
            }
            else {
                $("#ddlPCategory").prop('disabled', true);
                $("#ddlPSubCategory").prop('disabled', true);
                $("#ddlPProduct").prop('disabled', true);
                $("#ddlPCategory").val($("#ddlPCategory option:first").val());
                $("#ddlPSubCategory").val($("#ddlPSubCategory option:first").val());
                $("#ddlPProduct").val($("#ddlPProduct option:first").val());
            }
        });

        $("#chkTier").on('change', function () {
            if ($("#chkTier").is(":checked")) {
                $("#ddlTier").prop('disabled', false);
            }
            else {
                $("#ddlTier").prop('disabled', true);
            }
        });

        $("#chkBrands").on('change', function () {
            if ($("#chkBrands").is(":checked")) {
                $("#ddlBrands").prop('disabled', false);
            }
            else {
                $("#ddlBrands").prop('disabled', true);
                $("#ddlBrands").val($("#ddlBrands option:first").val());
            }
        });

        $("#chkOutlet").on('change', function () {
            if ($("#chkOutlet").is(":checked")) {
                $("#lstBoxOutlet").prop("disabled", false);
            }
            else {
                $("#lstBoxOutlet").prop("disabled", true);
                $("#lstBoxOutlet")[0].selectedIndex = -1;
            }
        });

        $("#chkTOutlet").on('change', function () {
            if ($("#chkTOutlet").is(":checked")) {
                $("#lstBoxTOutlet").prop("disabled", false);
                $("#chkTOutletAnyOne").prop("disabled", false);
                $("#chkTOutletLast").prop("disabled", false);
            }
            else {
                $("#chkTOutletAnyOne").prop("disabled", true);
                $("#chkTOutletLast").prop("disabled", true);
                $("#lstBoxTOutlet").prop("disabled", true);
                
                $("#lstBoxTOutlet")[0].selectedIndex = -1;
            }
        });

        $("#chkGender").on('change', function () {
            if ($("#chkGender").is(":checked")) {
                $("#ddlGender").prop('disabled', false);
            }
            else {
                $("#ddlGender").prop('disabled', true);
                $("#ddlGender").val($("#ddlGender option:first").val());
            }
        });

        $("#chkCity").on('change', function () {
            if ($("#chkCity").is(":checked")) {
                $("#txtCity").prop('disabled', false);
            }
            else {
                $("#txtCity").prop('disabled', true);
                $("#txtCity").val("");
            }
        });

        $("#chkAge").on('change', function () {
            if ($("#chkAge").is(":checked")) {
                $("#txtAgefrom").prop('disabled', false);
                $("#txtAgeTo").prop('disabled', false);
            }
            else {
                $("#txtAgefrom").prop('disabled', true);
                $("#txtAgeTo").prop('disabled', true);
                $("#txtAgefrom").val("");
                $("#txtAgeTo").val("");
            }
        });

        $("#chkBirthday").on('change', function () {
            if ($("#chkBirthday").is(":checked")) {
                $("#ddlBirthday").prop('disabled', false);
            }
            else {
                $("#ddlBirthday").prop('disabled', true);
                $("#ddlBirthday").val($("#ddlBirthday option:first").val());
            }
        });

        $("#chkAnniversary").on('change', function () {
            if ($("#chkAnniversary").is(":checked")) {
                $("#ddlAnniversary").prop('disabled', false);
            }
            else {
                $("#ddlAnniversary").prop('disabled', true);
                $("#ddlAnniversary").val($("#ddlAnniversary option:first").val());
            }
        });

    }

    function ResetTransactionFilters() {
        $('#chkEnrolledRange').prop('checked', false);
        $('#txtEnrollfromdt').val("");
        $('#txtEnrolltodt').val("");
        $("#txtEnrollfromdt").prop('disabled', true);
        $("#txtEnrolltodt").prop('disabled', true);

        $('#chkInactiveSince').prop('checked', false);
        $('#txtNonTransactedMax').val("");
        $("#txtNonTransactedMax").prop('disabled', true);

        $('#chkPointBalance').prop('checked', false);
        $('#txtPointsBalMin').val("");
        $('#txtPointsBalMax').val("");
        $("#txtPointsBalMin").prop('disabled', true);
        $("#txtPointsBalMax").prop('disabled', true);

        $('#chkTxnCount').prop('checked', false);
        $('#txtTxnCountMin').val("");
        $('#txtTxnCountMax').val("");
        $("#txtTxnCountMin").prop('disabled', true);
        $("#txtTxnCountMax").prop('disabled', true);

        $('#chkSpend').prop('checked', false);
        $('#txtSpendMin').val("");
        $('#txtSpendMax').val("");
        $("#txtSpendMin").prop('disabled', true);
        $("#txtSpendMax").prop('disabled', true);

        $('#chkInvoiceValue').prop('checked', false);
        $('#txtInvoiceValueMin').val("");
        $('#txtInvoiceValueMax').val("");
        $('#txtInvoiceValuefromdt').val("");
        $('#txtInvoiceValuetodt').val("");
        $("#txtInvoiceValueMin").prop('disabled', true);
        $("#txtInvoiceValueMax").prop('disabled', true);
        $("#txtInvoiceValuefromdt").prop('disabled', true);
        $("#txtInvoiceValuetodt").prop('disabled', true);

        $('#chkAvgTicket').prop('checked', false);
        $('#txtAvgTicketFrm').val("");
        $('#txtAvgTicketTo').val("");
        $("#txtAvgTicketFrm").prop('disabled', true);
        $("#txtAvgTicketTo").prop('disabled', true);

        $('#chkRedeemed').prop('checked', false);
        $('#rbtnRedeemedMultiple').prop('checked', false);
        $('#rbtnRedeemedSingle').prop('checked', false);
        $('#rbtnNonRedeemed').prop('checked', false);

        $('#chkNeverPurchased').prop('checked', false);
        $("#ddlNPCategory").val($("#ddlNPCategory option:first").val());
        $("#ddlNPSubCategory").val($("#ddlNPSubCategory option:first").val());
        $("#ddlNPProduct").val($("#ddlNPProduct option:first").val());
        $("#ddlNPCategory").prop('disabled', true);
        $("#ddlNPSubCategory").prop('disabled', true);
        $("#ddlNPProduct").prop('disabled', true);

        $('#chkPurchased').prop('checked', false);
        $("#ddlPCategory").val($("#ddlPCategory option:first").val());
        $("#ddlPSubCategory").val($("#ddlPSubCategory option:first").val());
        $("#ddlPProduct").val($("#ddlPProduct option:first").val());
        $("#ddlPCategory").prop('disabled', true);
        $("#ddlPSubCategory").prop('disabled', true);
        $("#ddlPProduct").prop('disabled', true);

        $('#chkBrands').prop('checked', false);
        $("#ddlBrands").prop('disabled', true);
        $("#ddlBrands").val($("#ddlBrands option:first").val());

        $('#chkOutlet').prop('checked', false);
        $("#lstBoxOutlet").prop("disabled", true);
        $("#lstBoxOutlet")[0].selectedIndex = -1;

        $('#chkTOutlet').prop('checked', false);
        $("#chkTOutletAnyOne").prop("disabled", true);
        $("#chkTOutletLast").prop("disabled", true);
        $("#lstBoxTOutlet").prop("disabled", true);
        $("#lstBoxTOutlet")[0].selectedIndex = -1;

        $("#chkGender").prop('checked', false);
        $("#ddlGender").prop('disabled', true);
        $("#ddlGender").val($("#ddlGender option:first").val());

        $("#chkCity").prop('checked', false);
        $('#txtCity').val("");
        $("#txtCity").prop('disabled', true);

        $("#chkAge").prop('checked', false);
        $('#txtAgefrom').val("");
        $('#txtAgeTo').val("");
        $("#txtAgefrom").prop('disabled', true);
        $("#txtAgeTo").prop('disabled', true);

        $("#chkBirthday").prop('checked', false);
        $("#ddlBirthday").prop('disabled', true);
        $("#ddlBirthday").val($("#ddlBirthday option:first").val());

        $("#chkAnniversary").prop('checked', false);
        $("#ddlAnniversary").prop('disabled', true);
        $("#ddlAnniversary").val($("#ddlAnniversary option:first").val());
    }

    $("#ddlOnlyOnce").change(function () {
        if ($("#ddlOnlyOnce").val() != "") {
            if ($("#ddlOnlyOnce").val() != "Custom") {
                $("#dvEnrolledRange").hide();
                $("#dvInactive").hide();
                $("#dvSpend").hide();
                $("#dvPointBalance").hide();
                $("#dvTxnCount").hide();                
                $("#dvRedeemed").hide();
                $("#dvNeverPurchased").hide();
                $("#headingProduct").hide();
                $("#dvPurchased").hide();
                $("#dvAvgTicket").hide();
                $("#dvInvoiceValue").hide();
                $("#hrProduct").hide();
                $("#hrTxnFilter").hide();
                $("#TxnFilterText").hide();
            }
            else {              
                $("#dvEnrolledRange").show();
                $("#dvInactive").show();
                $("#dvSpend").show();
                $("#dvPointBalance").show();
                
                $("#dvTxnCount").hide();                
                $("#dvRedeemed").hide();
                $("#dvNeverPurchased").hide();
                $("#headingProduct").hide();
                $("#dvPurchased").hide();                
                $("#hrProduct").hide();
                $("#dvAvgTicket").hide();               
            }
        }
        else {
            ShowAll();
        }
    });

    $("#ddlInactive").change(function () {
        if ($("#ddlInactive").val() != "") {
            if ($("#ddlInactive").val() == "Custom") {
              
                $("#dvEnrolledRange").show();
                $("#dvInactive").show();
                $("#dvSpend").show();
                $("#dvPointBalance").show();
                
                $("#dvTxnCount").hide();
                $("#dvRedeemed").hide();
                $("#dvNeverPurchased").hide();
                $("#headingProduct").hide();
                $("#dvPurchased").hide();
                $("#hrProduct").hide();                
                $("#dvInvoiceValue").hide();
                $("#dvAvgTicket").hide();
                $("#txtTxnCountSpendfromdt").hide();
                $("#txtTxnCountSpendtodt").hide();               

            }
            else {
                $("#dvEnrolledRange").hide();
                $("#dvInactive").hide();
                $("#dvSpend").hide();
                $("#dvPointBalance").hide();
                $("#dvTxnCount").hide();
                $("#dvRedeemed").hide();
                $("#dvNeverPurchased").hide();
                $("#headingProduct").hide();
                $("#dvPurchased").hide();
                $("#dvAvgTicket").hide();
                $("#dvInvoiceValue").hide();
                $("#hrProduct").hide();
                $("#hrTxnFilter").hide();
                $("#TxnFilterText").hide();

                $("#dvAvgTicket").hide();
            }
        }
        else {
            ShowAll();
            $("#dvAvgTicket").hide();
        }
    });

    function ShowAll() {
        $("#dvAvgTicket").show();
        $("#dvEnrolledRange").show();
        $("#dvTxnCount").show();
        $("#dvPointBalance").show();
        $("#dvRedeemed").show();
        $("#dvNeverPurchased").show();
        $("#headingProduct").show();
        $("#dvPurchased").show();
        $("#dvInactive").show();
        $("#dvSpend").show();
        $("#hrProduct").show();
        $("#hrTxnFilter").show();
        $("#TxnFilterText").show();
        $("#dvInvoiceValue").show();
        $("#txtTxnCountSpendfromdt").show();
        $("#txtTxnCountSpendtodt").show();
    }

    function HideAll() {
        $("#dvAvgTicket").hide();
        $("#dvEnrolledRange").hide();
        $("#dvTxnCount").hide();
        $("#dvPointBalance").hide();
        $("#dvRedeemed").hide();
        $("#dvNeverPurchased").hide();
        $("#headingProduct").hide();
        $("#dvPurchased").hide();
        $("#dvInactive").hide();
        $("#dvSpend").hide();
        $("#hrProduct").hide();
        $("#dvInvoiceValue").hide();
        $("#hrTxnFilter").hide();
        $("#TxnFilterText").hide();
        $("#txtTxnCountSpendfromdt").hide();
        $("#txtTxnCountSpendtodt").hide();
    }

    $("#ddlSpend").change(function () {
        var selected = $("#ddlSpend option:selected").text();
        if (selected == 'Between') {
            $("#txtSpendMin").show();
            $("#txtSpendMax").show();
            $('#txtSpendMin').attr('placeholder', 'From Amount');
            $('#txtSpendMax').attr('placeholder', 'To Amount');
        }
        else if (selected == 'Less than') {
            $("#txtSpendMin").show();
            $("#txtSpendMax").hide();
            $('#txtSpendMin').attr('placeholder', 'Amount');
        }
        else if (selected == 'More than') {
            $("#txtSpendMin").hide();
            $("#txtSpendMax").show();
            $('#txtSpendMax').attr('placeholder', 'Amount');
        }
        else {
            $("#txtSpendMin").hide();
            $("#txtSpendMax").hide();
        }
    });

    $("#ddlTxnCount").change(function () {
        var selected = $("#ddlTxnCount option:selected").text();
        if (selected == 'Between') {
            $("#txtTxnCountMin").show();
            $("#txtTxnCountMax").show();
            $('#txtTxnCountMin').attr('placeholder', 'From Txn Count');
            $('#txtTxnCountMax').attr('placeholder', 'To Txn Count');
        }
        else if (selected == 'Less than') {
            $("#txtTxnCountMin").show();
            $("#txtTxnCountMax").hide();
            $('#txtTxnCountMin').attr('placeholder', 'Txn Count');
        }
        else if (selected == 'More than') {
            $("#txtTxnCountMax").show();
            $("#txtTxnCountMin").hide();
            $('#txtTxnCountMax').attr('placeholder', 'Txn Count');
        }
        else {
            $("#txtTxnCountMin").hide();
            $("#txtTxnCountMax").hide();
        }
    });

    $("#ddlPointsBalance").change(function () {
        var selected = $("#ddlPointsBalance option:selected").text();
        if (selected == 'Between') {
            $("#txtPointsBalMin").show();
            $("#txtPointsBalMax").show();
            $('#txtPointsBalMin').attr('placeholder', 'From Point Balance');
            $('#txtPointsBalMax').attr('placeholder', 'To Point Balance');
        }
        else if (selected == 'Less than') {
            $("#txtPointsBalMin").show();
            $("#txtPointsBalMax").hide();
            $('#txtPointsBalMin').attr('placeholder', 'Point Balance');
        }
        else if (selected == 'More than') {
            $("#txtPointsBalMax").show();
            $("#txtPointsBalMin").hide();
            $('#txtPointsBalMax').attr('placeholder', 'Point Balance');
        } else {
            $("#txtPointsBalMin").hide();
            $("#txtPointsBalMax").hide();
        }
    });

    $("#rbtnCTxnCount").on('change', function () {
        if ($("#rbtnCTxnCount").is(":checked")) {
            $("#ddlTxnCumulative").prop('disabled', false);
            $("#txtCTxnCount").prop('disabled', false);
            $("#txtCTxnMonths").prop('disabled', false);
            $("#ddlTxnCumulativeFrequency").prop('disabled', false);

            $("#ddlSpendCumulative").prop('disabled', true);
            $("#txtCSpendCount").prop('disabled', true);
            $("#txtCSpendMonths").prop('disabled', true);
            $("#ddlSpendCumulativeFrequency").prop('disabled', true);
        }
    })

    $("#rbtnCSpend").on('change', function () {
        if ($("#rbtnCSpend").is(":checked")) {
            $("#ddlTxnCumulative").prop('disabled', true);
            $("#txtCTxnCount").prop('disabled', true);
            $("#txtCTxnMonths").prop('disabled', true);
            $("#ddlTxnCumulativeFrequency").prop('disabled', true);

            $("#ddlSpendCumulative").prop('disabled', false);
            $("#txtCSpendCount").prop('disabled', false);
            $("#txtCSpendMonths").prop('disabled', false);
            $("#ddlSpendCumulativeFrequency").prop('disabled', false);
        }
    })

    function Validation() {

        var status = true;
        if (!$("#chkTransacting").is(":checked") && !$("#chkNonTransacting").is(":checked") && !$("#chkMemberAcquition").is(":checked") && !$("#chkPastTransTrendAnalysis").is(":checked")) {
            cuteAlert({
                type: "error",
                title: "OOPS...",
                message: "Please select criteria to filter",
                buttonText: "Okay"
            })
            status = false;
            return false;
        }
        if ($("#chkTransacting").is(":checked")) {
            if (!$("#chkAll").is(":checked") && !$("#chkTxnAIsegment").is(":checked") && !$("#chkTxnTier").is(":checked") && !$("#chkTxnOnlyOnce").is(":checked") && !$("#chkTxnInactive").is(":checked")) {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please select base filter",
                    buttonText: "Okay"
                })
                status = false;
                return false;
            }
            if ($("#chkTxnAIsegment").is(":checked")) {
                if ($("#ddlAIsegment").val() == null || $("#ddlAIsegment").val() == "") {
                    cuteAlert({
                        type: "error",
                        title: "OOPS...",
                        message: "Please select AI Segment",
                        buttonText: "Okay"
                    })
                    status = false;
                    return false;
                }
            }
            if ($("#chkTxnTier").is(":checked")) {
                if ($("#ddlTier").val() == null || $("#ddlTier").val() == "") {
                    cuteAlert({
                        type: "error",
                        title: "OOPS...",
                        message: "Please select Tier",
                        buttonText: "Okay"
                    })
                    status = false;
                    return false;
                }
            }
        }
        if ($("#chkNonTransacting").is(":checked")) {
            if (!$("#chkNonTxnAll").is(":checked") && !$("#chkNonTxnEnrolled").is(":checked") && !$("#chkNonTxnBulkUpload").is(":checked") && !$("#chkNonTxnReferal").is(":checked") && !$("#chkNonTxnDLC").is(":checked")) {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please select base filter",
                    buttonText: "Okay"
                })
                status = false;
                return false;
            }
            if ($("#chkNonTxnDLC").is(":checked")) {
                if ($("#ddlDLCSourceNT").val() == null || $("#ddlDLCSourceNT").val() == "") {
                    cuteAlert({
                        type: "error",
                        title: "OOPS...",
                        message: "Please select DLC Source",
                        buttonText: "Okay"
                    })
                    status = false;
                    return false;
                }
            }
        }
        if ($("#chkMemberAcquition").is(":checked")) {
            if (!$("#chkMReferal").is(":checked") && !$("#chkMDLC").is(":checked")) {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please select base filter",
                    buttonText: "Okay"
                })
                status = false;
                return false;
            }
            if ($("#chkMReferal").is(":checked")) {
                if (!$("#chkMAAll").is(":checked") && !$("#chkMATransacting").is(":checked") && !$("#chkMANonTransacting").is(":checked")) {
                    cuteAlert({
                        type: "error",
                        title: "OOPS...",
                        message: "Please select base filter",
                        buttonText: "Okay"
                    })
                    status = false;
                    return false;
                }
            }
            if ($("#chkMDLC").is(":checked")) {
                if (!$("#chkMAAll").is(":checked") && !$("#chkMATransacting").is(":checked") && !$("#chkMANonTransacting").is(":checked") && ($("#ddlDLCSource").val() == null || $("#ddlDLCSource").val() == "")) {
                    cuteAlert({
                        type: "error",
                        title: "OOPS...",
                        message: "Please select base filter",
                        buttonText: "Okay"
                    })
                    status = false;
                    return false;
                }
            }

        }

        if ($("#chkPastTransTrendAnalysis").is(":checked")) {
            if (!$("#rbtnCTxnCount").is(":checked") && !$("#rbtnCSpend").is(":checked")) {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please select base filter",
                    buttonText: "Okay"
                })
                status = false;
                return false;
            }
            if ($("#rbtnCTxnCount").is(":checked")) {
                if ($("#ddlTxnCumulative").val() == "" && $("#txtCTxnCount").val() == "" && $("#txtCTxnMonths").val() == "" && $("#ddlTxnCumulativeFrequency").val() == "") {
                    cuteAlert({
                        type: "error",
                        title: "OOPS...",
                        message: "Please select base filter",
                        buttonText: "Okay"
                    })
                    status = false;
                    return false;
                }
            }

            if ($("#rbtnCSpend").is(":checked")) {
                if ($("#ddlSpendCumulative").val() == "" && $("#txtCSpendCount").val() == "" && $("#txtCSpendMonths").val() == "" && $("#ddlSpendCumulativeFrequency").val() == "") {
                    cuteAlert({
                        type: "error",
                        title: "OOPS...",
                        message: "Please select base filter",
                        buttonText: "Okay"
                    })
                    status = false;
                    return false;
                }
            }

        }
        if ($("#chkEnrolledRange").is(":checked")) {
            if ($("#txtEnrollfromdt").val() == "" && $("#txtEnrolltodt").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please enter enrolled date",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#txtEnrollfromdt").focus();
                });
                status = false;
                return false;
            }
        }
        if ($("#chkInactiveSince").is(":checked")) {
            if ($("#txtNonTransactedMax").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please enter inactive since days",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#txtNonTransactedMax").focus();
                });
                status = false;
                return false;
            }
        }
        if ($("#chkPointBalance").is(":checked")) {
            if ($("#txtPointsBalMin").val() == "" && $("#txtPointsBalMax").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please enter point balance min or max",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#txtPointsBalMin").focus();
                });
                status = false;
                return false;
            }
        }
        if ($("#chkTxnCount").is(":checked")) {
            if ($("#txtTxnCountMin").val() == "" && $("#txtTxnCountMax").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please enter transaction count min or max",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#txtTxnCountMin").focus();
                });
                status = false;
                return false;
            }
        }
        if ($("#chkSpend").is(":checked")) {
            if ($("#txtSpendMin").val() == "" && $("#txtSpendMax").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please enter transaction count min or max",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#txtSpendMin").focus();
                });
                status = false;
                return false;
            }
        }
        if ($("#chkInvoiceValue").is(":checked")) {
            if ($("#txtInvoiceValueMin").val() == "" && $("#txtInvoiceValueMax").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please enter invoice value min or max",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#txtInvoiceValueMin").focus();
                });
                status = false;
                return false;
            }
        }
        if ($("#chkAvgTicket").is(":checked")) {
            if ($("#txtAvgTicketFrm").val() == "" && $("#txtAvgTicketTo").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please enter average ticket size min or max",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#txtAvgTicketFrm").focus();
                });
                status = false;
                return false;
            }
        }
        if ($("#chkRedeemed").is(":checked")) {
            if (!$("#rbtnRedeemedMultiple").is(":checked") && !$("#rbtnRedeemedSingle").is(":checked") && !$("#rbtnNonRedeemed").is(":checked")) {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please select Redeemed",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#rbtnRedeemedMultiple").focus();
                });
                status = false;
                return false;
            }
        }
        if ($("#chkNeverPurchased").is(":checked")) {
            if ($("#ddlNPCategory").val() == "" && $("#ddlNPSubCategory").val()=="") {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please select Never Purchased Category/Sub-Category/Product",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#ddlNPCategory").focus();
                });
                status = false;
                return false;
            }
        }
        if ($("#chkPurchased").is(":checked")) {
            if ($("#ddlPCategory").val() == "" && $("#ddlPSubCategory").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please select Purchased Category/Sub-Category/Product",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#ddlPCategory").focus();
                });
                status = false;
                return false;
            }
        }
        if ($("#chkBrands").is(":checked")) {
            if ($("#ddlBrands").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please select Zone",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#ddlBrands").focus();
                });
                status = false;
                return false;
            }
        }
        if ($("#chkOutlet").is(":checked")) {
            if ($("#lstBoxOutlet").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please select Enrolled Outlet",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#lstBoxOutlet").focus();
                });
                status = false;
                return false;
            }
        }
        if ($("#chkTOutlet").is(":checked")) {
            if ($("#lstBoxTOutlet").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please select Transacting Outlet",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#lstBoxTOutlet").focus();
                });
                status = false;
                return false;
            }
        }
        if ($("#chkGender").is(":checked")) {
            if ($("#ddlGender").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please select Gender",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#ddlGender").focus();
                });
                status = false;
                return false;
            }
        }
        if ($("#chkCity").is(":checked")) {
            if ($("#txtCity").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please enter City",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#txtCity").focus();
                });
                status = false;
                return false;
            }
        }
        if ($("#chkAge").is(":checked")) {
            if ($("#txtAgefrom").val() == "" && $("#txtAgeTo").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please enter Age",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#txtAgefrom").focus();
                });
                status = false;
                return false;
            }
        }
        if ($("#chkBirthday").is(":checked")) {
            if ($("#ddlBirthday").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please select Birthday",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#ddlBirthday").focus();
                });
                status = false;
                return false;
            }
        }
        if ($("#chkAnniversary").is(":checked")) {
            if ($("#ddlAnniversary").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Please select Anniversary",
                    buttonText: "Okay"
                }).then((e) => {
                    $("#ddlAnniversary").focus();
                });
                status = false;
                return false;
            }
        }


        return status;
    }

    function GetFilterCount() {
        $("#divLoader").show();
        var result = Validation();
        //result = false;
        /*alert("OK");*/
        if (result) {
            var objData = GetObject();

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetSSFilterCount", "Reports")',
                data: "{'jsonData': '" + JSON.stringify(objData) + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $("#spnFilterCount").text(addComma(response[0]));
                    $("#spnTotalCount").text(addComma(response[1]));
                    $("#tblFilterDetails").show();
                    $("#divLoader").hide();
                },
                failure: function (response) {
                    $("#divLoader").hide();
                },
                error: function (response) {
                    $('#dvMemberData').html(response.responseText);
                    $("#divLoader").hide();
                }
            });

            document.getElementById("btnGenerate").disabled = "";
            document.getElementById("btnSave").disabled = "";
        }
        else {
            $("#divLoader").hide();
        }
    }

    function SaveFilterCriteria() {
        if ($("#txtDSName").val() == "") {
            cuteAlert({
                type: "error",
                title: "OOPS..",
                message: "Please enter Dataset name",
                buttonText: "Okay"
            })
        }
        else {
            var objData = GetObject();
            var data = JSON.stringify(objData);

            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveDataset", "Reports")',
                data: "{'JsonData': '" + JSON.stringify(objData) + "','DSName': '" + $('#txtDSName').val() + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response == "Exist") {
                        cuteAlert({
                            type: "warning",
                            title: "Exist",
                            message: "Dataset Already Exist, Try with different name!!!",
                            buttonText: "Okay"
                        })
                    }
                    if (response == "true") {
                        cuteAlert({
                            type: "success",
                            title: "Saved",
                            message: "Dataset Saved Successfully!!!",
                            buttonText: "Okay"
                        }).then((e) => {
                            window.location.reload();
                        });
                    }
                    if (response == "false") {
                        cuteAlert({
                            type: "error",
                            title: "Saved",
                            message: "Problem with saving Dataset!!!",
                            buttonText: "Okay"
                        })
                    }

                    $("#divLoader").hide();
                },
                failure: function (response) {
                    $("#divLoader").hide();
                },
                error: function (response) {
                    alert(222)
                    $('#dvMemberData').html(response.responseText);
                    $("#divLoader").hide();
                }
            });

            document.getElementById("btnGenerate").disabled = "";
            document.getElementById("btnSave").disabled = "";
        }
    }

    function GetObject() {
        var AllData = [];
        item = {}
        if ($("#chkTransacting").is(":checked")) {
            item["FirstChk"] = "Transacting";
            if ($("#chkAll").is(":checked")) {
                item["SecondChk"] = "All";
            }
            if ($("#chkTxnOnlyOnce").is(":checked")) {
                item["SecondChk"] = "OnlyOnce";
                item["OnlyOnceSegment"] = $("#ddlOnlyOnce").val();
            }
            if ($("#chkTxnInactive").is(":checked")) {
                item["SecondChk"] = "Inactive";
                item["InactiveSegment"] = $("#ddlInactive").val();
                item["ExcludeOnlyOnce"] = $("#chkExcludeOnlyOnce").is(":checked");
            }
            if ($("#chkTxnAIsegment").is(":checked")) {
                item["SecondChk"] = "AIsegment";
                item["AIsegment"] = $("#ddlAIsegment").val();
            }
            if ($("#chkTxnTier").is(":checked")) {
                item["SecondChk"] = "Tier";
                item["Tier"] = $("#ddlTier").val();
            }
        }
        if ($("#chkNonTransacting").is(":checked")) {
            item["FirstChk"] = "NonTransacting";
            if ($("#chkNonTxnAll").is(":checked")) {
                item["SecondChk"] = "All";
            }
            if ($("#chkNonTxnEnrolled").is(":checked")) {
                item["SecondChk"] = "Enrolled";
            }
            if ($("#chkNonTxnBulkUpload").is(":checked")) {
                item["SecondChk"] = "BulkUpload";
            }
            if ($("#chkNonTxnReferal").is(":checked")) {
                item["SecondChk"] = "Referal";
            }
            if ($("#chkNonTxnDLC").is(":checked")) {
                item["SecondChk"] = "DLC";
                item["QRSource"] = $("#ddlDLCSourceNT").val();
            }
        }
        if ($("#chkMemberAcquition").is(":checked")) {
            item["FirstChk"] = "MemberAcquition";
            if ($("#chkMReferal").is(":checked")) {
                item["SecondChk"] = "Referal";
                if ($("#chkMAAll").is(":checked")) {
                    item["MAFinal"] = "All";
                }
                if ($("#chkMATransacting").is(":checked")) {
                    item["MAFinal"] = "Transacting";
                }
                if ($("#chkMANonTransacting").is(":checked")) {
                    item["MAFinal"] = "NonTransacting";
                }
            }
            if ($("#chkMDLC").is(":checked")) {
                item["SecondChk"] = "DLC";
                if ($("#chkMAAll").is(":checked")) {
                    item["MAFinal"] = "All";
                }
                if ($("#chkMATransacting").is(":checked")) {
                    item["MAFinal"] = "Transacting";
                }
                if ($("#chkMANonTransacting").is(":checked")) {
                    item["MAFinal"] = "NonTransacting";
                }
                item["QRSource"] = $("#ddlDLCSource").val();
            }
        }
        if ($("#chkPastTransTrendAnalysis").is(":checked")) {
            item["FirstChk"] = "Cumulative";
            if ($("#rbtnCTxnCount").is(":checked")) {
                item["SecondChk"] = "TxnCount";
                item["LSGT"] = $("#ddlTxnCumulative").val();
                item["TxnCount"] = $("#txtCTxnCount").val();
                item["Months"] = $("#txtCTxnMonths").val();
                item["Frequency"] = $("#ddlTxnCumulativeFrequency").val();
            }
            if ($("#rbtnCSpend").is(":checked")) {
                item["SecondChk"] = "CSpend";
                item["LSGT"] = $("#ddlSpendCumulative").val();
                item["TxnCount"] = $("#txtCSpendCount").val();
                item["Months"] = $("#txtCSpendMonths").val();
                item["Frequency"] = $("#ddlSpendCumulativeFrequency").val();
            }
        }

        AllData.push(item);

        //Transactional Filters
        item1 = {}
        item1["IsEnrolledRange"] = "No";
        item1["IsInactiveSince"] = "No";
        item1["IsPointBalance"] = "No";
        item1["IsTxnCount"] = "No";
        item1["IsSpend"] = "No";
        item1["IsInvoiceValue"] = "No";
        item1["IsAvgTicket"] = "No";
        item1["Redeemed"] = "";

        if ($("#chkEnrolledRange").is(":checked")) {
            item1["IsEnrolledRange"] = "Yes";
            item1["Enrollfromdt"] = $("#txtEnrollfromdt").val();
            item1["Enrolltodt"] = $("#txtEnrolltodt").val();
        }

        if ($("#chkInactiveSince").is(":checked")) {
            item1["IsInactiveSince"] = "Yes";
            item1["NonTransactedSince"] = $("#txtNonTransactedMax").val();
        }

        if ($("#chkPointBalance").is(":checked")) {
            item1["IsPointBalance"] = "Yes";
            item1["PointsBalMin"] = $("#txtPointsBalMin").val();
            item1["PointsBalMax"] = $("#txtPointsBalMax").val();
        }

        if ($("#chkTxnCount").is(":checked")) {
            item1["IsTxnCount"] = "Yes";
            item1["CountMin"] = $("#txtTxnCountMin").val();
            item1["CountMax"] = $("#txtTxnCountMax").val();
            item1["CountSpendDTFrm"] = $("#txtTxnCountSpendfromdt").val();
            item1["CountSpendDTTo"] = $("#txtTxnCountSpendtodt").val();
        }

        if ($("#chkSpend").is(":checked")) {
            item1["IsSpend"] = "Yes";
            item1["SpendMin"] = $("#txtSpendMin").val();
            item1["SpendMax"] = $("#txtSpendMax").val();
            item1["CountSpendDTFrm"] = $("#txtTxnCountSpendfromdt").val();
            item1["CountSpendDTTo"] = $("#txtTxnCountSpendtodt").val();
        }

        if ($("#chkInvoiceValue").is(":checked")) {
            item1["IsInvoiceValue"] = "Yes";
            item1["InvoiceValueFrm"] = $("#txtInvoiceValueMin").val();
            item1["InvoiceValueTo"] = $("#txtInvoiceValueMax").val();
        }

        if ($("#chkAvgTicket").is(":checked")) {
            item1["IsAvgTicket"] = "Yes";
            item1["AvgTicketFrm"] = $("#txtAvgTicketFrm").val();
            item1["AvgTicketTo"] = $("#txtAvgTicketTo").val();
        }

        if ($("#chkRedeemed").is(":checked")) {
            if ($("#rbtnRedeemedMultiple").is(":checked")) {
                item1["Redeemed"] = "Multiple";
            }
            if ($("#rbtnRedeemedSingle").is(":checked")) {
                item1["Redeemed"] = "Single";
            }
            if ($("#rbtnNonRedeemed").is(":checked")) {
                item1["Redeemed"] = "No";
            }
        }

        AllData.push(item1);

        //Product Filter
        item2 = {}
        item2["IsNeverPurchased"] = "No";
        item2["IsPurchased"] = "No";

        if ($("#chkNeverPurchased").is(":checked")) {
            item2["IsNeverPurchased"] = "Yes";
            item2["NPCategory"] = $("#ddlNPCategory").val();
            item2["NPSubCategory"] = $("#ddlNPSubCategory").val();
            item2["NPProduct"] = $("#ddlNPProduct").val();

            item2["NPCategoryName"] = $("#ddlNPCategory option:selected").text();
            item2["NPSubCategoryName"] = $("#ddlNPSubCategory option:selected").text();
            item2["NPProductName"] = $("#ddlNPProduct option:selected").text();
        }

        if ($("#chkPurchased").is(":checked")) {
            item2["IsPurchased"] = "Yes";
            item2["PCategory"] = $("#ddlPCategory").val();
            item2["PSubCategory"] = $("#ddlPSubCategory").val();
            item2["PProduct"] = $("#ddlPProduct").val();

            item2["PCategoryName"] = $("#ddlPCategory option:selected").text();
            item2["PSubCategoryName"] = $("#ddlPSubCategory option:selected").text();
            item2["PProductName"] = $("#ddlPProduct option:selected").text();
        }
        AllData.push(item2);

        //Product Filter
        item3 = {}
        item3["IsBrands"] = "No";
        item3["IsOutlet"] = "No";
        item3["IsTOutlet"] = "No";
        item3["TOutletsAnyLast"] = "No";

        if ($("#chkBrands").is(":checked")) {
            item3["IsBrands"] = "Yes";
            item3["Zone"] = $("#ddlBrands").val();
        }

        if ($("#chkOutlet").is(":checked")) {
            item3["IsOutlet"] = "Yes";
            console.log($("#lstBoxOutlet").val());
            var selectedVal = [];
            var selectedIds = [];
            $('#lstBoxOutlet :selected').each(function (i, selected) {
                selectedVal[i] = $(selected).text();
                selectedIds[i] = $(selected).val();
            });
            item3["Outlets"] = selectedVal;
            item3["OutletIds"] = selectedIds;
        }

        if ($("#chkTOutlet").is(":checked")) {
            item3["IsTOutlet"] = "Yes";
            var selectedVal = [];
            var selectedIds = [];
            $('#lstBoxTOutlet :selected').each(function (i, selected) {
                selectedVal[i] = $(selected).text();
                selectedIds[i] = $(selected).val();
            });
            item3["TransactingOutlets"] = selectedVal;
            item3["TransactingOutletIds"] = selectedIds;
        }

        if ($("#chkTOutletAnyOne").is(":checked")) {
            item3["TOutletsAnyLast"] = "Anyone";
        }

        if ($("#chkTOutletLast").is(":checked")) {
            item3["TOutletsAnyLast"] = "Last";
        }

        AllData.push(item3);

        //Demographic Filter
        item4 = {}
        /*item4["IsTier"] = "No";*/
        item4["IsGender"] = "No";
        item4["IsCity"] = "No";
        item4["IsAge"] = "No";
        item4["IsBirthday"] = "No";
        item4["IsAnniversary"] = "No";

        //if ($("#chkTier").is(":checked")) {
        //    item4["IsTier"] = "Yes";
        //    item4["Tier"] = $("#ddlTier").val();
        //}

        if ($("#chkGender").is(":checked")) {
            item4["IsGender"] = "Yes";
            item4["Gender"] = $("#ddlGender").val();
        }

        if ($("#chkCity").is(":checked")) {
            item4["IsCity"] = "Yes";
            item4["City"] = $("#txtCity").val();
        }

        if ($("#chkAge").is(":checked")) {
            item4["IsAge"] = "Yes";
            item4["AgeFrom"] = $("#txtAgefrom").val();
            item4["AgeTo"] = $("#txtAgeTo").val();
        }
        if ($("#chkBirthday").is(":checked")) {
            item4["IsBirthday"] = "Yes";
            item4["BirthdayMonth"] = $("#ddlBirthday").val();
            item4["BirthdayMonthName"] = $("#ddlBirthday option:selected").text();
        }

        if ($("#chkAnniversary").is(":checked")) {
            item4["IsAnniversary"] = "Yes";
            item4["AnniversaryMonth"] = $("#ddlAnniversary").val();
            item4["AnniversaryMonthName"] = $("#ddlAnniversary option:selected").text();
        }

        AllData.push(item4);

        return AllData;
    }

    function GetReport() {
        var returnStatus = true;
        var objData = GetObject();

        var selecteddata = JSON.stringify(objData);
            var Array = [];
            var ArrayColumnName = [];
        $('#ChooseRight > option').each(function (i, selected) {
                Array.push($(selected).val());
                ArrayColumnName.push($(selected).text());
            });
        if (ArrayColumnName.length >0) {

            if (returnStatus) {
                $("#divLoader").show();
                var FilterData = [];
                item = {};
                item["ColumnId"] = Array;
                item["columnnm"] = ArrayColumnName;
                FilterData.push(item);
                var data = JSON.stringify(FilterData);
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetSlicerReport", "Reports")',
                data: '{jsonData: ' + JSON.stringify(selecteddata) + ',columnslist: ' + JSON.stringify(data) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    if (response != null) {
                        $("#dvListing").html(response);
                        $("#dvListing").show();
                        $("#btnExport").show();
                        $("#divLoader").hide();
                    }
                },
                error: function (response) {
                    console.log(response.responseText);
                    $("#dvListing").html(response.responseText);
                    $("#dvListing").show();
                    $("#btnExport").show();
                    $("#divLoader").hide();
                }
            });
            }
        }
        else {
            cuteAlert({
                type: "error",
                title: "Oops..",
                message: "Please Select Column from List",
                buttonText: "Okay"
            })
            returnStatus = false;
        }
    }

    function GetReportDSCount(id) {
        $("#hdnDSID").val(id);
        FillColumns1();

        $("#divLoader").show();
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetDSQueryCount", "Reports")',
            data: "{'DSId': '" + id + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                $("#spnDSQueryCount").text(addComma(response[0]));
                $("#spnDSTotalCount").text(addComma(response[1]));
                $("#dvShowReport").slideDown("slow");
                $("#dvDataset").hide();
                $("#dvListing1").hide();
                $("#btnExport1").hide();
                $("#divLoader").hide();
            },
            failure: function (response) {
                $("#divLoader").hide();
            },
            error: function (response) {
                $('#dvMemberData').html(response.responseText);
                $("#divLoader").hide();
            }
        });
    }

    function CloseGenerateReport() {
        $("#hdnDSID").val("");
        $("#dvShowReport").hide();
        $("#dvDataset").slideDown("slow");
    }

    function GetReportDS() {
        var returnStatus = true;
        var Array = [];
        var ArrayColumnName = [];

        $('#ChooseRight1 > option').each(function (i, selected) {
                Array.push($(selected).val());
                ArrayColumnName.push($(selected).text());
            });
        if (ArrayColumnName.length >0) {
            console.log(Array);
            if (returnStatus) {
                $("#divLoader").show();
                var FilterData = [];
                item = {};
                item["ColumnId"] = Array;
                item["columnnm"] = ArrayColumnName;
                //item["reporttype"] = type;
                FilterData.push(item);
                var data = JSON.stringify(FilterData);
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetSlicerReportFromDS", "Reports")',
                data: '{DSId: ' + JSON.stringify($("#hdnDSID").val()) + ',columnslist: ' + JSON.stringify(data) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    if (response != null) {
                        $("#dvListing1").html(response);
                        $("#dvListing1").show();
                        $("#btnExport1").show();
                        $("#divLoader").hide();
                    }
                    else {

                    }
                },
                error: function (response) {
                    console.log(response.responseText);
                    $("#dvListing1").html(response.responseText);
                    $("#dvListing1").show();
                    $("#btnExport1").show();
                    $("#divLoader").hide();
                }
            });
            }
        }
        else {
            cuteAlert({
                type: "error",
                title: "Oops..",
                message: "Please Select Column from List",
                buttonText: "Okay"
            })
            returnStatus = false;
        }
    }

    function GetSubCategoryAndProduct(catCode, ddlS, ddlP) {
         $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetSubCategoryByCategoryCode", "Reports")',
                data: "{'CategoryCode': '" + catCode + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $(ddlS).html("");
                    var items = '<option>All SubCategory</option>';
                    $.each(response, function (i, item) {
                        items += "<option value='" + item.Value + "'>" + item.Text + "</option>";
                    });
                    $(ddlS).html(items);

                    $("#divLoader").show();
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetProductByCategoryCode", "Reports")',
                        data: "{'CategoryCode': '" + catCode + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            $(ddlP).html("");
                            var items1 = '<option>All Products</option>';
                            $.each(response, function (i, item1) {
                                items1 += "<option value='" + item1.Value + "'>" + item1.Text + "</option>";
                            });
                            $(ddlP).html(items1);

                            $("#divLoader").hide();
                        },
                        failure: function (response) {
                            $("#divLoader").hide();
                        },
                        error: function (response) {
                            console.log(response)
                            $("#divLoader").hide();
                        }
                    });

                    $("#divLoader").hide();
                },
                failure: function (response) {
                    $("#divLoader").hide();
                },
                error: function (response) {
                    console.log(response)
                    $("#divLoader").hide();
                }
            });
    }

    function GetProductBySubCat(subCatCode, ddlP) {
        $("#divLoader").show();
        $.ajax({
                type: "POST",
                url: '@Url.Action("GetProductBySubCategoryCode", "Reports")',
                data: "{'SubCategoryCode': '" + subCatCode + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $(ddlP).html("");
                    var items = '<option>All Products</option>';
                    $.each(response, function (i, item) {
                        items += "<option value='" + item.Value + "'>" + item.Text + "</option>";
                    });
                    $(ddlP).html(items);
                    $("#divLoader").hide();
                },
            failure: function (response) {
                    $("#divLoader").hide();
                },
            error: function (response) {
                    console.log(response)
                    $("#divLoader").hide();
                }
            });
    }

    function ExportDataExcel(type) {
        var returnStatus = true;
        var objData = [];
        var selecteddata = "";
        var DSId = "";
        if (type == 0) {
            objData = GetObject();
            selecteddata = JSON.stringify(objData);
        }
        if (type == 1) {
            DSId = $("#hdnDSID").val();
        }

            var Array = [];
            var ArrayColumnName = [];
            $('#ChooseRight > option').each(function (i, selected) {
                Array.push($(selected).val());
                ArrayColumnName.push($(selected).text());
            });
        if (ArrayColumnName.length > 0) {

            if (returnStatus) {
                $("#divLoader").show();
                var FilterData = [];
                item = {};
                item["ColumnId"] = Array;
                item["columnnm"] = ArrayColumnName;
                FilterData.push(item);
                var data = JSON.stringify(FilterData);

                $("#divLoader").show();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("ExportSlicerReport", "Reports")',
                    data: '{jsonData: ' + JSON.stringify(selecteddata) + ',columnslist: ' + JSON.stringify(data) + ',type:' + type + ',DSId:' + DSId + '}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        var BaseUrl = $("#baseURL").val();
                        console.log(result)
                    @*var docurl = "@baseURL/Temp/" + filename;*@
                        var docurl = '@baseURL' + result;
                        //alert(docurl)
                        //window.location.href =docurl;
                        window.open(docurl);
                        $("#divLoader").hide();
                    },
                    error: function (result) {
                        alert(111)
                        console.log(result.responseText)
                    }
                });
            }
        }
    }

    function DisableAllCheckboxes() {
        $("#chkEnrolledRange").prop('disabled', true);
        $("#chkInactiveSince").prop('disabled', true);
        $("#chkPointBalance").prop('disabled', true);
        $("#chkTxnCount").prop('disabled', true);
        $("#chkSpend").prop('disabled', true);
        $("#chkInvoiceValue").prop('disabled', true);
        $("#chkAvgTicket").prop('disabled', true);
        $("#chkRedeemed").prop('disabled', true);
        $("#chkNeverPurchased").prop('disabled', true);
        $("#chkPurchased").prop('disabled', true);
        $("#chkBrands").prop('disabled', true);
        $("#chkOutlet").prop('disabled', true);
        $("#chkTOutlet").prop('disabled', true);
        $("#chkGender").prop('disabled', true);
        $("#chkCity").prop('disabled', true);
        $("#chkAge").prop('disabled', true);
        $("#chkBirthday").prop('disabled', true);
        $("#chkAnniversary").prop('disabled', true);
    }

    function EnableAllCheckboxes() {
        $("#chkEnrolledRange").prop('disabled', false);
        $("#chkInactiveSince").prop('disabled', false);
        $("#chkPointBalance").prop('disabled', false);
        $("#chkTxnCount").prop('disabled', false);
        $("#chkSpend").prop('disabled', false);
        $("#chkInvoiceValue").prop('disabled', false);
        $("#chkAvgTicket").prop('disabled', false);
        $("#chkRedeemed").prop('disabled', false);
        $("#chkNeverPurchased").prop('disabled', false);
        $("#chkPurchased").prop('disabled', false);
        $("#chkBrands").prop('disabled', false);
        $("#chkOutlet").prop('disabled', false);
        $("#chkTOutlet").prop('disabled', false);
        $("#chkGender").prop('disabled', false);
        $("#chkCity").prop('disabled', false);
        $("#chkAge").prop('disabled', false);
        $("#chkBirthday").prop('disabled', false);
        $("#chkAnniversary").prop('disabled', false);
    }

</script>