@model List<BOTS_BL.Models.MemberList>
@{
    ViewBag.Title = "Member List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="app-main__inner">
    <div class="row mb-3 pt-3 pl-3 pr-3 card">

        <div class="col-sm-6">
            Select Outlet :
            @Html.DropDownListFor(x => Model.Count, new SelectList(ViewBag.OutletList, "Value", "Text"), "All", htmlAttributes: new { @class = "input100", @id = "OutletList" })

        </div>
        <br />
    </div>
    <div class="row mb-3 card">
        <div class="container-fluid pt-3 pl-3 pr-3">
            <div class="pt-3 pl-3 pr-3 col-md-12 col-lg-12">
                <div class="row">
                    <div class="col search-container">
                        <i class="fas fa-search"></i>
                        <input class="input100" type="text" id="txtSearch" placeholder="Search activity..." />
                    </div>
                </div>
                <div class="row mt-3" id="dvActivityData">
                    <div class="table-responsive">
                        <table class="table" id="activityTable">
                            <thead>
                                <tr>
                                    <th scope="col">Enrolled Outlet</th>
                                    <th scope="col">Enrolled Date</th>
                                    <th scope="col">Mobile Number</th>
                                    <th scope="col">Member Name</th>
                                    <th scope="col">Type</th>
                                    <th scope="col">Txn Count</th>
                                    <th scope="col">Total Spends</th>
                                    <th scope="col">Total Burn Txn</th>
                                    <th scope="col">Total Burn Points</th>
                                    <th scope="col">Avl Bal Points</th>
                                    <th scope="col">Last Txn Date</th>

                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/JavaScript" src=" https://MomentJS.com/downloads/moment.js"></script>
<script>
    var tableData = [];
    $(document).ready(function () {
        $.fn.dataTable.moment = function (format, locale) {
            var types = $.fn.dataTable.ext.type;

            // Add type detection
            types.detect.unshift(function (d) {
                return moment(d, format, locale, true).isValid() ?
                    'moment-' + format :
                    null;
            });

            // Add sorting method - use an integer for the sorting
            types.order['moment-' + format + '-pre'] = function (d) {
                return moment(d, format, locale, true).unix();
            };
        };

        $.fn.dataTable.moment('DD/MM/YYYY');
        LoadMemberData();
        $("#OutletList").on("change", function () {
            LoadMemberData();

        });
    });

    function LoadMemberData() {
        $("#divLoader").show();
        var searchData = [];
        var item = {}
        item["OutletId"] = $("#OutletList").val();
        searchData.push(item);

        var data = JSON.stringify(searchData);
        var SearchText = JSON.stringify($("#OutletList").val());
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetMemberDataResult", "Reports")',
            //url: "../Reports/GetMemberDataResult",
            data: '{jsonData: ' + JSON.stringify(data) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                tableData = [];
                //$('#dvMemberData').html(response);
                $.map(response, function (item) {
                    optionItem = {}
                    optionItem["EnrolledOutlet"] = item.EnrooledOutlet;
                    optionItem["MobileNumber"] = item.MaskedMobileNo;
                    optionItem["MobileNo"] = item.MobileNo;
                    optionItem["MemberName"] = item.MemberName;
                    optionItem["Type"] = item.Type;
                    optionItem["TxnCount"] = item.TxnCount;
                    optionItem["TotalSpends"] = item.TotalSpend;
                    optionItem["TotalBurnTxn"] = item.TotalBurnTxn;
                    optionItem["TotalBurnPoints"] = item.TotalBurnPoints;
                    optionItem["AvlBalPoints"] = item.AvlBalPoints;
                    optionItem["LastTxnDate"] = item.LastTxnDate;
                    optionItem["EnrolledDate"] = item.EnrolledDate;


                    tableData.push(optionItem);
                });
                DrawTable();
                $("#divLoader").hide();
            },
            failure: function (response) {
                $("#divLoader").hide();
            },
            error: function (response) {
                $('#dvMemberData').html(response.responseText);
                $("#divLoader").hide();
            }
        });
    }

    function DrawTable() {
        var table1 = $('#activityTable').DataTable();
        table1.destroy();

        var table = $('#activityTable').DataTable({
            "data": tableData,
            "paging": true,
            "ordering": true,
            "info": true,
            "bFilter": true,
            "pageLength": 25,
            "pagingType": "simple_numbers",
            "columns": [
                { data: "EnrolledOutlet" },
                {
                    "data": "EnrolledDate", "title": "Enrolled Date", "render": function (data, type) {
                        if (data != "" && data != null) {
                            var day = data.split('/')[0]
                            var month = data.split('/')[1]
                            var year = data.split('/')[2]
                            var date = month + "/" + day + "/" + year;
                            return date;
                        }
                        else {
                            return data;
                        }
                    }
                },

                {
                    "mData": "MobileNumber",
                    "mRender": function (data, type, row) {
                        var MobileNo = row.MobileNo;
                        return '<span class="login" title=' + MobileNo + '>' + data + '</span>';
                    }
                },
                { data: "MemberName" },
                { data: "Type" },
                {
                    "mData": "TxnCount",
                    "mRender": function (data, type, row) {
                        return '<span>' + addComma(data) + '</span>';
                    }
                },
                {
                    "mData": "TotalSpends",
                    "mRender": function (data, type, row) {
                        return '<span>' + addComma(data) + '</span>';
                    }
                },
                {
                    "mData": "TotalBurnTxn",
                    "mRender": function (data, type, row) {
                        return '<span>' + addComma(data) + '</span>';
                    }
                },
                {
                    "mData": "TotalBurnPoints",
                    "mRender": function (data, type, row) {
                        return '<span>' + addComma(data) + '</span>';
                    }
                },
                {
                    "mData": "AvlBalPoints",
                    "mRender": function (data, type, row) {
                        return '<span>' + addComma(data) + '</span>';
                    }
                },
                {
                    "data": "LastTxnDate", "title": "Last Txn Date", "render": function (data, type) {
                        if (data != "" && data != null) {
                            var day = data.split('/')[0]
                            var month = data.split('/')[1]
                            var year = data.split('/')[2]
                            var date = month + "/" + day + "/" + year;
                            return date;
                        }
                        else {
                            return data;
                        }
                    }
                }
                /*{ data: "LastTxnDate" }*/

            ],
            "columnDefs": [
                {
                    "targets": 4,
                    "className": "text-right"
                },
                {
                    "targets": 5,
                    "className": "text-right",
                },
                {
                    "targets": 6,
                    "className": "text-right"
                },
                {
                    "targets": 7,
                    "className": "text-right",
                },
                {
                    "targets": 8,
                    "className": "text-right"
                },
                {
                    "targets": 9,
                    "className": "text-right"
                }],
            aoColumnDefs: [
                {
                    bSortable: false,
                    aTargets: [-8, -9, -10]
                }
            ]
            //"aoColumnDefs": [{ "sClass": "hide_me", "aTargets": [3] }]
            //"rowReorder": {
            //    dataSrc: "index"
            //}
        });
        $('#activityTable_filter').hide();

        $('#txtSearch').on('keyup', function () {

            $.fn.dataTable.ext.search.push(function (settings, searchData) {
                var term = $('#txtSearch').val().toLowerCase()
                for (var i = 0; i < searchData.length; i++) {
                    if (searchData[i].toLowerCase().indexOf(term) >= 0) {
                        return true;
                    }
                }
                return false;
            });
            var table = $('#activityTable').DataTable();
            table.draw();
        });
    }

</script>


