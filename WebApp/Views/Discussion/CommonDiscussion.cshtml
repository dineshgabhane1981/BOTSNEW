@model WebApp.ViewModel.DiscussionViewModel
@using BOTS_BL.Models;

@{
    ViewBag.Title = "Common Discussion";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userDetails = (CustomerLoginDetail)Session["UserSession"];

}

<div class="app-main__inner">

    <div class="row mb-3 card">
        <div class="container-fluid pt-3 pl-3 pr-3 pb-3">
            <b>Common Discussions</b>
            <div class="row mt-2">
                <div class="col-md-4 col-xl-6">
                    Select Group

                    @Html.DropDownList("Group", new SelectList(ViewBag.lstgroupdetails, "Value", "Text"), htmlAttributes: new { @class = "input100", @id = "ddlGroupnm" })
                </div>
                <div class="col-md-4 col-xl-6 ">
                    Select Staus

                    @Html.DropDownList("Staus", new SelectList(ViewBag.lstcommonstatus, "Value", "Text"), htmlAttributes: new { @class = "input100", @id = "ddlstatus" })
                </div>

            </div>
            <div class="row mt-3 mb-4">
                <div class="col-md-4 col-xl-6">
                    Select Raise by
                    @if (userDetails.LoginType == "6")
                    {
                        @Html.DropDownList("RaisedBy", new SelectList(ViewBag.lstRMAssigned, "Value", "Text"), htmlAttributes: new { @class = "input100", @disabled="disabled", @id = "ddlRaisedBy" })
                    }
                    else
                    {
                        @Html.DropDownList("RaisedBy", new SelectList(ViewBag.lstRMAssigned, "Value", "Text"), htmlAttributes: new { @class = "input100", @id = "ddlRaisedBy" })
                    }
                </div>
                <div class="col-md-4 col-xl-6">
                    Select Call Type

                    @Html.DropDownList("calltype", new SelectList(ViewBag.lstCallTypes, "Value", "Text"), htmlAttributes: new { @class = "input100", @id = "ddlcalltype" })
                </div>
            </div>
            <div class="row mt-3 mb-4">

                <div class="col-md-4 col-xl-6">
                    <input type="radio" id="rdnnorange" checked name="cust_type" /> No Range &nbsp;&nbsp;&nbsp;&nbsp;
                    <input type="radio" id="rdndaterange" name="cust_type" /> Date Range <br /><br />
                    <input id="txtFromDate" placeholder="From Date" class="input50" />&nbsp;&nbsp;&nbsp;&nbsp;
                    <input id="txtToDate" placeholder="To Date" class="input50" />
                    <button type="button" id="btnFilter" style="margin-left:17px;margin-top:5px;" class="btn btn-primary"><b>FILTER</b></button>
                    <button type="button" id="btncancel" style="margin-left:17px;margin-top:5px;" class="btn btn-primary"><b>CANCEL</b></button>
                    <button class="btn btn-primary login-btn" onclick='ExportDataExcel("0");' type="button" id="btnExport">
                        <i class="fas fa-file-export"></i> Export
                    </button>
                </div>
            </div>

            <div id="dvListing">
                @Html.Partial("~/Views/Discussion/_CommonDiscussionList.cshtml", Model)
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script>
    var tableData = [];
    var today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());
    $("#txtFromDate").datepicker({
        dateFormat: "yy-mm-dd",
        maxDate: today,
    });
    $("#txtToDate").datepicker({
        dateFormat: "yy-mm-dd",
        maxDate: today,
    });
    $(document).ready(function () {
       // GetData();
        SetFilter();
        $("#rdnnorange").change(function () {
            SetFilter();
        });
        $("#rdndaterange").change(function () {
            SetFilter();
        });

        $("#btnFilter").click(function () {
            GetData();
        });
        $("#btncancel").click(function () {
            resetAll();
        });
    });

    function resetAll() {
        $("#rdnnorange").prop("checked", true);
        $("#txtFromDate").attr("disabled", "disabled");
        $("#txtToDate").attr("disabled", "disabled");
        $('#txtFromDate').val('');
        $('#txtToDate').val('');
        $('#ddlGroupnm').prop('selectedIndex', 0);
        $('#ddlstatus').prop('selectedIndex', 0);
        $('#ddlcalltype').prop('selectedIndex', 0);
        $('#ddlRaisedBy').prop('selectedIndex', 0);
        $("#dvListing").hide();

    }
    function SetFilter() {

        if ($("#rdnnorange").is(":checked")) {
            $("#txtFromDate").attr("disabled", "disabled");
            $("#txtToDate").attr("disabled", "disabled");
            $('#txtFromDate').val('');
            $('#txtToDate').val('');
        }

        if ($("#rdndaterange").is(":checked")) {
            $("#txtFromDate").removeAttr("disabled");
            $("#txtToDate").removeAttr("disabled");
        }
    }

    function GetData() {

        var FilterData = [];
        item = {};
        $("#divLoader").show();

        if ($("#rdndaterange").is(":checked")) {

            item["fromDate"] = $('#txtFromDate').val();
            item["toDate"] = $('#txtToDate').val();
        }
        if ($("#rdnnorange").is(":checked")) {

            item["fromDate"] = null;
            item["toDate"] = null;
        }
        if ($("#ddlGroupnm").prop('selectedIndex') !== 0) {
            item["selectedgrp"] = $("#ddlGroupnm option:selected").val();

        }
        else {
            item["selectedgrp"] = null;
        }
        if ($("#ddlcalltype").prop('selectedIndex') !== 0) {

            item["selectedcall"]= $("#ddlcalltype option:selected").val();
        }
        else {
            item["selectedcall"] = null;
        }
        if ($("#ddlstatus").prop('selectedIndex') !== 0) {

            item["selectedstatus"]= $("#ddlstatus option:selected").val();
        }
        else {
            item["selectedstatus"] = null;
        }
        if ($("#ddlRaisedBy").prop('selectedIndex') !== 0) {

            item["selectedRaisedBy"] = $("#ddlRaisedBy option:selected").val();
        }
        else {
            item["selectedRaisedBy"] = null;
        }
        FilterData.push(item);
        var data = JSON.stringify(FilterData);
        $.ajax({
            async: true,
            type: "POST",
            url: '@Url.Action("GetCommonFilteredDiscussion", "Discussion")',
            data: '{jsonData: ' + JSON.stringify(data) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                console.log(response)
                if (response != null) {
                    $("#dvDiscussionData").html(response);
                    $("#divLoader").hide();
                }

            },
            failure: function (response) {
                $("#divLoader").hide();
            },
            error: function (response) {
               // console.log(response)
                $("#dvListing").html(response.responseText);
                $("#divLoader").hide();

            }
        });
    }

    function ExportDataExcel(Id) {
        var emailid = '';
        var fromdt = '';
        var Todt = '';
        var groupnm = '';
        var calltype = 0;
        var status = '';
        var raisedby = '';
        console.log(Id);

        if ($("#rdndaterange").is(":checked")) {

            fromdt = $('#txtFromDate').val();
            Todt = $('#txtToDate').val();
        }
        if ($("#rdnnorange").is(":checked")) {

            fromdt = '';
            Todt = '';
        }
        if ($("#ddlGroupnm").prop('selectedIndex') !== 0) {
            groupnm = $("#ddlGroupnm option:selected").val();

        }
        else {
            groupnm = '';
        }
        if ($("#ddlcalltype").prop('selectedIndex') !== 0) {

            calltype = $("#ddlcalltype option:selected").val();
        }
        else {
            calltype = 0;
        }
        if ($("#ddlstatus").prop('selectedIndex') !== 0) {

            status = $("#ddlstatus option:selected").val();
        }
        else {
            status = '';
        }
        if ($("#ddlRaisedBy").prop('selectedIndex') !== 0) {

            raisedby = $("#ddlRaisedBy option:selected").val();
        }
        else {
            raisedby = '';
        }

        var urlLink = "@Url.Action("ExportToExcelCommonFilteredDiscussion", "Discussion")";
        urlLink = urlLink + "?fromdt=" + fromdt + "&Todt=" + Todt + "&Groupnm=" + groupnm + "&calltype=" + calltype + "&status=" + status + "&raised=" + raisedby +"&ReportName=DiscussionReport";
        console.log(urlLink);
        window.location.href = urlLink;
        $("#divLoader").hide();

    }
    function ShowActivities(id) {
      //  var pType = "Distributors";
        if ($("#dvDiscussionData" + id).is(":visible")) {
            $("#dvDiscussionData" + id).hide(1000);
            $("#trActivities" + id).hide(1000);

            $("#imgExpand" + id).attr("src", "/Content/assets/images/details_open.png");
        }
        else {
            $("#divLoader").show();
            $.ajax({
                type: "POST",
                 url: '@Url.Action("GetSubDiscussionList")',
                data: '{Id:' + JSON.stringify(id) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    BindActivities(id,response);
                    $("#divLoader").hide();
                },
                failure: function (response) {

                    $("#divLoader").hide();
                }
            });
        }
    }

    function BindActivities(id,data) {
        if (data != "") {
            var htmlStr = "<table border=\"2\" style=\"background-color:gray;margin-left: 11px;width: 98%;\" class=\"table\">";
            htmlStr += "<tr style=\"text-align: center;\">"
            htmlStr += "<th scope=\"col\">Updated Date</th>";
            htmlStr += "<th scope=\"col\">Updated By</th>";
            htmlStr += "<th scope=\"col\">Description</th>";
            htmlStr += "<th scope=\"col\">Status</th>";
            htmlStr += "</tr>";

            $.map(data, function (item) {
                var d = new Date();
                d = item.FollowupDate;
                console.log(d);
                htmlStr += "<tr style=\"text-align: center;\">"
                htmlStr += "<td>" + item.UpdatedDate + "</td>";
                htmlStr += "<td>" + item.UpdatedBy + "</td>";
                htmlStr += "<td style=\"width: 600px;\">" + item.Description + "</td>";
                htmlStr += "<td style=\"width: 100px;\">" + item.Status + "</td>";
                htmlStr += "</tr>"
            });

            htmlStr += "</table>";
            $("#dvDiscussionData" + id).html(htmlStr);
            console.log(htmlStr);
            //$('tr[id^="trActivities"]').hide(1000);
            //$('div[id^="dvDiscussionData"]').hide(1000);
            $('[id^="imgExpand"]').attr("src", "../Content/assets/images/details_open.png");

            $("#trActivities" + id).show(1000);

            $("#dvDiscussionData" + id).show(1000);
            $("#imgExpand" + id).attr("src", "../Content/assets/images/details_close.png");
        }
        else {
            cuteAlert({
                type: "warning",
                title: "Oops..",
                message: "No tracking available",
                buttonText: "Okay"
            })
        }

    }

    function ShowFollowUpActivities(id) {      
        if ($("#dvFollowupData" + id).is(":visible")) {
            $("#dvFollowupData" + id).hide(1000);
            $("#trFollowUpActivities" + id).hide(1000);

            $("#imgExpandFollowup" + id).attr("src", "/Content/assets/images/details_open.png");
        }
        else {
            $("#divLoader").show();
            $.ajax({
                type: "POST",
                 url: '@Url.Action("GetSubDiscussionList")',
                data: '{Id:' + JSON.stringify(id) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    BindFollowupActivities(id,response);
                    $("#divLoader").hide();
                },
                failure: function (response) {

                    $("#divLoader").hide();
                }
            });
        }
    }

    function BindFollowupActivities(id,data) {
        if (data != "") {
            var htmlStr = "<table border=\"2\" style=\"background-color:gray;margin-left: 11px;width: 98%;\" class=\"table\">";
            htmlStr += "<tr style=\"text-align: center;\">"
            htmlStr += "<th scope=\"col\">Updated Date</th>";
            htmlStr += "<th scope=\"col\">Updated By</th>";
            htmlStr += "<th scope=\"col\">Description</th>";
            htmlStr += "<th scope=\"col\">Status</th>";
            htmlStr += "</tr>";

            $.map(data, function (item) {
                var d = new Date();
                d = item.FollowupDate;
                console.log(d);
                htmlStr += "<tr style=\"text-align: center;\">"
                htmlStr += "<td>" + item.UpdatedDate + "</td>";
                htmlStr += "<td>" + item.UpdatedBy + "</td>";
                htmlStr += "<td style=\"width: 600px;\">" + item.Description + "</td>";
                htmlStr += "<td style=\"width: 100px;\">" + item.Status + "</td>";
                htmlStr += "</tr>"
            });

            htmlStr += "</table>";
            $("#dvFollowupData" + id).html(htmlStr);
            
            $('[id^="imgExpandFollowup"]').attr("src", "../Content/assets/images/details_open.png");
            $("#trFollowUpActivities" + id).show(1000);

            $("#dvFollowupData" + id).show(1000);
            $("#imgExpandFollowup" + id).attr("src", "../Content/assets/images/details_close.png");
        }
        else {
            cuteAlert({
                type: "warning",
                title: "Oops..",
                message: "No tracking available",
                buttonText: "Okay"
            })
        }

    }





</script>

