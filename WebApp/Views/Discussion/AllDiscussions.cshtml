@model WebApp.ViewModel.DiscussionViewModel
@{
    ViewBag.Title = "Discussions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>

    /* The Modal (background) */
    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 0 !important; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 120px;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    /* Modal Content */
    .modal-content {
        background-color: #fefefe;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 70%;
        border-radius: 25px;
    }

    The Close Button
    .close {
        color: #aaaaaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close:hover,
    .close:focus {
        color: #000;
        text-decoration: none;
        cursor: pointer;
    }

    input:read-only {
        background-color: lightgray;
    }

    .chkClass {
        width: 20px;
        height: 20px;
        cursor: pointer;
    }
</style>
<div class="app-main__inner">
    <input type="hidden" id="DoneDocBase64" />
    <input type="hidden" id="DoneFileName" />
    <div class="row mb-3 card">
        <div class="container-fluid pt-3 pl-3 pr-3 pb-3">
            @using (Html.BeginForm("AddDiscussion", "Discussion", FormMethod.Post, new { id = "frmadddiscussion", enctype = "multipart/form-data" }))
            {
                @Html.HiddenFor(model => model.File, new { @id = "uploadDocBase64" })
                @Html.HiddenFor(model => model.FileName, new { @id = "uploadFileName" })
                @Html.HiddenFor(model => model.objDiscussion.GroupId, new { @id = "hdnGroupID" })

                <div class="card" style="margin-bottom: 20px;">
                    <div class="row" style="margin: 10px;align-self:center;font-size:22px;">
                        Customer Name -  @Model.objDiscussion.GroupName
                    </div>
                </div>
                <div id="dvAddDiscussion" class="card" style="display:none;padding:20px;margin-bottom:10px;">
                    <div>
                        <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                            Discussion Type
                        </div>
                        <div class="col-sm-4" style="float:left;margin-top:10px;">
                            @Html.RadioButtonFor(model => model.objDiscussion.DiscussionType, "Query", new { @id = "rbtnQuery", @checked = "checked", @class = "chkClass" }) Query
                            @Html.RadioButtonFor(model => model.objDiscussion.DiscussionType, "Request", new { @id = "rbtnRequest", @class = "chkClass" }) Request
                            @Html.RadioButtonFor(model => model.objDiscussion.DiscussionType, "Complaint", new { @id = "rbtnComplaint", @class = "chkClass" }) Complaint
                            @*@Html.RadioButtonFor(model => model.objDiscussion.DiscussionType, "OTP", new { @id = "rbtnOTP", @class = "chkClass" }) OTP*@
                        </div>
                    </div>
                    <div class="row" style="margin: 0;">
                        <div style="float:left;text-align:right;width:100px;margin-top:10px;">
                            Spoken To
                        </div>
                        <div class="col-sm-4" style="float:left;margin-top:10px;">
                            @Html.TextBoxFor(model => model.objDiscussion.SpokenTo, new { @class = "input100", @id = "txtSpokenTo" })
                        </div>
                        <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                            Contact No
                        </div>
                        <div class="col-sm-4" style="float:left;margin-top:10px;">
                            @Html.TextBoxFor(model => model.objDiscussion.ContactNo, new { @class = "input100", @type = "number", @id = "txtContactNo" })
                        </div>
                    </div>
                    <div class="row" style="margin: 0;">

                        <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                            Customer Type
                        </div>
                        <div class="col-sm-4" style="float:left;margin-top:10px;">
                            @Html.DropDownListFor(model => model.objDiscussion.CustomerType, new SelectList(Model.CustomerType(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlCustomerType" })

                        </div>
                        <div style="float: left; text-align: right; width: 115px; margin-top: 20px;">
                            Call Mode
                        </div>

                        <div class="col-sm-4" style="float:left;margin-top:20px;">
                            @Html.RadioButtonFor(model => model.objDiscussion.CallMode, "Phone", new { @id = "rbtnPhone", @checked = "checked", @class = "chkClass" }) <span>Phone</span>
                            @Html.RadioButtonFor(model => model.objDiscussion.CallMode, "Anydesk", new { @id = "rbtnAnydesk", @class = "chkClass" }) Anydesk
                            @Html.RadioButtonFor(model => model.objDiscussion.CallMode, "Physical", new { @id = "rbtnPhysical", @class = "chkClass" }) Physical

                        </div>
                    </div>

                    <div class="row" style="margin: 0;">
                        <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                            Call Type
                        </div>
                        <div class="col-sm-4" style="float:left;margin-top:10px;">
                            @Html.DropDownListFor(model => model.objDiscussion.CallType, new SelectList(Model.lstCallTypes, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlCallType" })
                        </div>
                        <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                            Call Sub Type
                        </div>
                        <div class="col-sm-4" style="float:left;margin-top:10px;">
                            @Html.DropDownListFor(model => model.objDiscussion.SubCallType, new SelectList(Model.lstCallSubTypes, "Value", "Text"), htmlAttributes: new { @class = "input100", @id = "ddlSubCallType" })
                        </div>
                        <div id="dvDoneNotDone" style="float:left;margin-top:10px;display:none;">
                            @Html.DropDownListFor(model => model.objDiscussion.DiscussionDoneNotDone, new SelectList(Model.DiscussionDoneNotDone(), "Value", "Text"), htmlAttributes: new { @class = "input20", @id = "ddlDiscussionStatus" })
                        </div>

                    </div>

                    <div id="dvDepartMembers" class="row" style="margin: 0;display:none;">
                        <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                            Department
                        </div>
                        <div class="col-sm-4" style="float:left;margin-top:10px;">
                            @Html.DropDownListFor(model => model.objDiscussion.Department, new SelectList(Model.Departments(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlDepartment" })
                        </div>
                        <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                            Assign To
                        </div>
                        <div class="col-sm-4" style="float:left;margin-top:10px;">
                            @Html.DropDownListFor(model => model.objDiscussion.AssignedMember, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddMembers" })

                        </div>
                    </div>

                    <div class="row" style="margin: 0;display:none;" id="dvTaskCount">

                        <div style="float: left; text-align: right; width: 115px; margin-top: 10px; padding-right:15px;">
                            No. Of Tasks
                        </div>
                        <div class="col-sm-4" style="float:left;margin-top:10px;padding-left:0px;" id="TaskCount">
                            
                        </div>
                    </div>

                    <div class="row" style="margin: 0;">
                        <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                            Status
                        </div>
                        <div class="col-sm-4" style="float:left;margin-top:10px;">
                            @Html.RadioButtonFor(model => model.objDiscussion.Status, "WIP", new { @id = "rbtnWIP", @checked = "checked", @class = "chkClass" }) WIP
                            @Html.RadioButtonFor(model => model.objDiscussion.Status, "Completed", new { @id = "rbtnCompleted", @class = "chkClass" }) Completed

                        </div>

                        <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                            FollowUp Date
                        </div>
                        <div class="col-sm-4" style="float:left;margin-top:10px;">
                            @Html.TextBoxFor(model => model.objDiscussion.FollowupDate, new { @class = "input100", @id = "txtFollowupDate" })
                        </div>
                    </div>
                    <div class="row" style="margin: 0;">
                        <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                            Description
                        </div>
                        <div class="col-sm-4" style="float:left;margin-top:10px;">
                            @Html.TextAreaFor(model => model.objDiscussion.Description, new { @class = "input100", @id = "txtDescription" })
                        </div>
                        <div id="dvPriority" style="display:none;">
                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                Priority
                            </div>
                            <div style="float:left;margin-top:10px;margin-left:30px;">
                                @Html.DropDownListFor(model => model.objDiscussion.Priority, new SelectList(Model.Priority(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlPriority" })
                            </div>
                        </div>
                    </div>
                    <div class="row" style="margin: 0;">
                        <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                            Upload
                        </div>
                        <div class="col-sm-4" style="float:left;margin-top:10px;">
                            <input type="file" id="uploadfile" />
                            @*@Html.TextBoxFor(model => model.File, new { type = "file", @id = "FileUpload" })*@
                        </div>

                    </div>

                    <div class="container-fluid pt-3 pl-3 pr-3 pb-3">
                        <button type="button" id="btnCancel" class="btn btn-primary pull-right" style="margin-right:10px;">Cancel</button>
                        <button type="button" id="btnDiscussionSave" class="btn btn-primary pull-right" onclick="return CheckValidation();" style="margin-right:10px;">Save</button>
                    </div>

                </div>
            }
            <div class="row">
                <div class="col search-container">
                    <input type="hidden" id="hdnId" name="hdnId" />
                </div>
                <div style="text-align:right;">
                    <a href="#" onclick="ShowAddDiscussion();" title="Add New Discussion">  <img src="~/Content/assets/images/AddCustomer.png" /></a>
                </div>
            </div>

            <div id="dvDiscussionList">
                @Html.Partial("~/Views/Discussion/_DiscussionList.cshtml", Model.lstDiscussions)
            </div>
        </div>
    </div>
</div>
<div id="myModal" class="modal">
    <div class="modal-content">
        <div class="row" style="margin: 0;">
            <div style="float:left;text-align:right;width:100px;margin-top:10px;">
                Description
            </div>
            <div class="col-sm-4" style="float:left;margin-top:10px;">
                <textarea id="txtDesc" rows="5" cols="45" style="border-radius:10px;"></textarea>
            </div>
            <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                ReAssign -
            </div>
            <div class="col-sm-4" style="float:left;margin-top:10px;">
                @*<select id="ddReassign" class="input100"><option value="S">Please Select</option></select>*@
                @Html.DropDownListFor(model => model.objDiscussion.ReassignMember, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddReassignMember" })
            </div>
        </div>
        <div class="row" style="margin: 0;">
            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                Status
            </div>
            <div class="col-sm-4" style="float:left;margin-top:10px;">
                <select id="ddlPopupStatus" class="input100">
                    <option value="WIP">WIP</option>
                    <option value="Completed">Completed</option>
                </select>
            </div>
            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                Upload File
            </div>
            <div class="col-sm-4" style="float:left;margin-top:10px;">
                <input type="file" id="idFileDone" />
            </div>
        </div>
        <div class="row" style="margin: 0;">
            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                Followup Date
            </div>
            <div class="col-sm-4" style="float:left;margin-top:10px;">
                <input type="text" id="txtFollowupDateNew1" class="input50" />

            </div>
        </div>
        <div class="row" style="margin: 0;">
            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                Request Type
            </div>
            <div class="col-sm-4" style="float:left;margin-top:10px;">
                <select id="ddlRequestType" class="input100">
                    <option>Valid</option>
                    <option>Invalid</option>
                </select>
            </div>
        </div>

        <div class="row justify-content-end pr-4" style="margin-top:20px;margin-right:465px;">
            <button type="button" id="btnUpdateStatus" class="btn btn-primary" style="margin-right:10px;"> Update</button>
            <button type="button" id="btnPopupClose" class="btn btn-outline-primary cancel-btn"> Close</button>
        </div>

    </div>
</div>
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script>
    var today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());
    $("#txtFollowupDate").datepicker({
        dateFormat: "yy-mm-dd",
        minDate: today,
    });
    $("#txtFollowupDateNew1").datepicker({
        dateFormat: "yy-mm-dd",
        minDate: today,
    });
    var availableTags = [];
    $(document).ready(function () {
        availableTags = @Html.Raw(Json.Encode(ViewBag.CustNames1));
        $("#txtSpokenTo").autocomplete({
            source: availableTags
        });

        $("#txtSpokenTo").focusout(function () {
            GetMobileNo($("#txtSpokenTo").val());
        });

        document.getElementById("uploadfile").addEventListener('change', handleFileSelect, false);
        document.getElementById("idFileDone").addEventListener('change', handleDoneFile, false);

        $('#ddlStatus').change(function () {
            if ($('#ddlStatus').val() == "Completed") {
                $('#txtFollowupDate').attr("disabled", "disabled");
            }
            else {
                $('#txtFollowupDate').removeAttr("disabled");
            }
        });
        RemoveRequiredBorder();
        $('#ddlCallType').change(function () {
            if ($("#ddlCallType option:selected").text() != "Please Select") {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetSubCallTypes", "Discussion")',
                    //url: "/Discussion/GetSubCallTypes",
                    data: '{callId: ' + JSON.stringify($("#ddlCallType").val()) + '}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        $("#ddlSubCallType").empty();
                        $("#ddlSubCallType").append("<option>Please Select</option>");
                        $.each(result, function () {
                            $("#ddlSubCallType").append($("<option />").val(this.Value).text(this.Text));
                        });
                    },
                    error: function (result) {
                        console.log(result.responseText);
                    }
                });
            }
            else {
                $("#ddlSubCallType").empty();
                $("#ddlSubCallType").append($("<option />").val(0).text("Please Select"));
            }
        });

        $("#btnCancel").on("click", function () {
            $("#dvAddDiscussion").hide(1000);
        });
        $('#btnPopupClose').on("click", function () {
            $("#myModal").hide(1000);
        });
        $('#btnUpdateStatus').on("click", function () {
            UpdateStatus();
        });
        $("#rbtnWIP").change(function () {
            ShowHideFollowUpDate();
        });
        $("#rbtnCompleted").change(function () {
            ShowHideFollowUpDate();
        });
        $("#rbtnRequest").on("click", function () {
            $("#dvPriority").show();
            $("#dvDepartMembers").show();
            $("#dvTaskCount").hide();            
        });
        $("#rbtnComplaint").on("click", function () {
            $("#dvPriority").show();
            $("#dvDepartMembers").show();
            $("#dvTaskCount").hide();            
        });
        $("#rbtnQuery").on("click", function () {
            $("#dvPriority").hide();
            $("#dvDepartMembers").hide();
            $("#dvTaskCount").hide();
        });

    });

    function GetMobileNo(SpokenToName) {
        $.ajax({
                type: "POST",
                url: '@Url.Action("GetDiscussionCustMobileNo", "Discussion")',
            data: '{CustName: ' + JSON.stringify(SpokenToName) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#txtContactNo").val(result);
                    $("#divLoader").hide();
                },
                error: function (result) {
                    //alert(111)
                    console.log(result.responseText)
                }
            });
    }

    function ShowHideFollowUpDate() {
        if ($("#rbtnWIP").is(":checked")){
            $('#txtFollowupDate').removeAttr("disabled");
        }
        if ($("#rbtnCompleted").is(":checked")) {
            $('#txtFollowupDate').attr("disabled", "disabled");
        }
    }
    function handleFileSelect(evt) {

        var id = evt.currentTarget.id;

        var f = evt.target.files[0];
        var Name = evt.target.files[0].name;
        var reader = new FileReader();
        reader.onload = (function (theFile) {
            return function (e) {
                var binaryData = e.target.result;
                var base64String = window.btoa(binaryData);
                $("#uploadDocBase64").val(base64String);
                $("#uploadFileName").val(Name);
            };
        })(f);
        reader.readAsBinaryString(f);
    }

    function handleDoneFile(evt) {

        var id = evt.currentTarget.id;

        var f = evt.target.files[0];
        var Name = evt.target.files[0].name;
        var reader = new FileReader();
        reader.onload = (function (theFile) {
            return function (e) {
                var binaryData = e.target.result;
                var base64String = window.btoa(binaryData);
                $("#DoneDocBase64").val(base64String);
                $("#DoneFileName").val(Name);


            };
        })(f);
        reader.readAsBinaryString(f);
    }

    function ShowAddDiscussion() {
        alert(111)
        $('#rbtnQuery').prop("checked", true);
        $('#rbtnWIP').prop("checked", true);
        $('#rbtnPhone').prop("checked", true);        
        $('#txtSpokenTo').val('');
        $('#txtContactNo').val('');        
        $("#ddlCustomerType").prop("selectedIndex", 0);
        $("#ddlCallType").prop("selectedIndex", 0);
        $("#ddlSubCallType").prop("selectedIndex", 0);
        $("#ddlDiscussionStatus").prop("selectedIndex", 0);
        $("#ddlDepartment").prop("selectedIndex", 0);
        $("#ddMembers").prop("selectedIndex", 0);
        $("#ddlPriority").prop("selectedIndex", 0);
        $('#txtFollowupDate').val('');
        $('#txtDescription').val('');
        $("#dvDepartMembers").hide();
        $("#dvTaskCount").hide();
        $("#ddlSubCallType").empty();
        $("#ddlSubCallType").append("<option>Please Select</option>");
        $("#ddMembers").empty();
        $("#ddMembers").append("<option>Please Select</option>");
        $("#uploadfile").val(null);

        $("#dvAddDiscussion").show(1000);
    }
    function RemoveRequiredBorder() {
        $("#txtSpokenTo").focusout(function () {
            if ($("#txtSpokenTo").val() != "") {
                $('#txtSpokenTo').css('border-color', '');
            }
            else {
                $('#txtSpokenTo').css('border-color', 'red');
            }
        });
        $("#txtContactNo").focusout(function () {
            if ($("#txtContactNo").val() != "") {
                $('#txtContactNo').css('border-color', '');
            }
            else {
                $('#txtContactNo').css('border-color', 'red');
            }
        });
        $("#txtDescription").focusout(function () {
            if ($("#txtDescription").val() != "") {
                $('#txtDescription').css('border-color', '');
            }
            else {
                $('#txtDescription').css('border-color', 'red');
            }
        });
        $("#txtFollowupDate").focusout(function () {
            if ($("#txtFollowupDate").val() != "") {
                $('#txtFollowupDate').css('border-color', '');
            }
            else {
                $('#txtFollowupDate').css('border-color', 'red');
            }
        });

        $('#ddlCallMode').change(function () {
            if ($("#ddlCallMode option:selected").text() == "Please Select") {
                $('#ddlCallMode').css('border-color', 'red');
            }
            else {
                $('#ddlCallMode').css('border-color', '');
            }
        });
        $('#ddlCallType').change(function () {
            if ($("#ddlCallType option:selected").text() == "Please Select") {
                $('#ddlCallType').css('border-color', 'red');
            }
            else {
                $('#ddlCallType').css('border-color', '');
            }
            if ($("#ddlCallType").val() != "2") {
                $("#dvDoneNotDone").hide();
            }
        });
        $('#ddlSubCallType').change(function () {
            if ($("#ddlCallType option:selected").text() == "Issue") {
                if ($("#ddlSubCallType option:selected").text() == "Please Select") {
                    $('#ddlSubCallType').css('border-color', 'red');
                }
                else {
                    $('#ddlSubCallType').css('border-color', '');
                }
            }
            else {
                $('#ddlCallType').css('border-color', '');
            }
            if ($("#ddlSubCallType").val() == "25" || $("#ddlSubCallType").val() == "26" || $("#ddlSubCallType").val() == "27") {
                $("#dvDoneNotDone").show();
            }
            else {
                $("#dvDoneNotDone").hide();
            }
        });

        $("#txtDesc").focusout(function () {
            if ($("#txtDesc").val() != "") {
                $('#txtDesc').css('border-color', '');
            }
            else {
                $('#txtDesc').css('border-color', 'red');
            }
        });
    }
    function CheckValidation() {
        var returnStatus = true;
        if ($("#txtSpokenTo").val() == "") {
            $('#txtSpokenTo').css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#txtContactNo").val() == "") {
            $('#txtContactNo').css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#ddlCallMode option:selected").text() == "Please Select") {
            $('#ddlCallMode').css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#ddlCallType option:selected").text() == "Please Select") {
            $('#ddlCallType').css('border-color', 'red');
            returnStatus = false;

        }
        if ($("#ddlCustomerType option:selected").text() == "Please Select") {
            $('#ddlCustomerType').css('border-color', 'red');
            returnStatus = false;

        }
        if ($("#ddlCallType option:selected").text() == "Please Select") {
            if ($("#ddlSubCallType option:selected").text() == "Please Select") {
                $('#ddlSubCallType').css('border-color', 'red');
                returnStatus = false;
            }
        }
        if ($("#ddlStatus option:selected").text() == "WIP") {
            if ($("#txtFollowupDate").val() == "") {
                $('#txtFollowupDate').css('border-color', 'red');
                returnStatus = false;
            }
        }
        if ($("#txtDescription").val() == "") {
            $('#txtDescription').css('border-color', 'red');
            returnStatus = false;
        }

        if (returnStatus) {

            var Status;
            var File = $("#uploadDocBase64").val();
            if (document.getElementById("rbtnWIP").checked) {
                Status = "WIP"
            }
            else {
                Status = "Completed"
            }
            $("#hdnStatus").val(Status);


            var CallMode;
            var File = $("#uploadDocBase64").val();

            if (document.getElementById("rbtnPhone")) {
                CallMode = "Phone"
            }
            else if (document.getElementById("rbtnAnydesk")) {
                CallMode = "Anydesk"
            }
            else {
                CallMode = "Physical"
            }

            $("#hdnCallMode").val(CallMode);

            //var data = $('#frmadddiscussion').serialize() + '&Member=' + Member + '&File=' + File + '&FileName=' + UploadFileName; //'&FileUpload=' + UploadFile +

            var data = $('#frmadddiscussion').serialize();
            var id = $("#hdnGroupID").val();
            $("#divLoader").show();
            $.ajax({
                url: $('#frmadddiscussion').attr('action'),
                type: 'post',
                dataType: "html",
                data: data,
                success: function (response) {
                    console.log(response)
                    if (response) {
                        cuteAlert({
                            type: "success",
                            title: "Saved",
                            message: "Discussion Details saved Successfully !!!",
                            buttonText: "Okay"
                        })
                        BindListing();
                        $("#dvAddDiscussion").hide(1000);
                        $("#divLoader").hide();
                    }
                    else {
                        $("#divLoader").hide();
                        cuteAlert({
                            type: "error",
                            title: "Oops..",
                            message: "Problem occured in saving Discussion Details",
                            buttonText: "Okay"
                        })
                    }
                }
            });
        }
        else {
            cuteAlert({
                type: "error",
                title: "Oops..",
                message: "Please enter Required fields",
                buttonText: "Okay"
            })
            return false;
        }
    }

    function BindListing() {
        var id = $("#hdnGroupID").val();
         $.ajax({
            type: "POST",
            url: '@Url.Action("GetDiscussionList", "Discussion")',
            data: '{groupId: ' + JSON.stringify(id) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (responce) {
                $("#dvDiscussionList").html(responce);
                $("#divLoader").hide();
            },
            error: function (responce) {
                $("#dvDiscussionList").html(responce.responseText);
                $("#divLoader").hide();

            }
        });
    }
    function OpenStatusPopup(id, AddedBy) {
        $("#ddReassignMember").empty()
        $("#ddReassignMember").append("<option>Please Select</option>");
        $("#ddReassignMember").append("<option>" + AddedBy + "</option>");

        var FilterData = [];
        item = {};
        item["id"] = id;
        FilterData.push(item);
        var data = JSON.stringify(FilterData);
        $("#divLoader").show();
        $.ajax({
                type: "POST",
                url: '@Url.Action("GetReAssignMember", "Discussion")',
                data: '{jsonData: ' + JSON.stringify(data) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log(result)
                    for (item in result) {
                        if (result[item].Selected)
                            $("#ddReassignMember").append("<option selected>" + result[item].Text + "</option>");
                        else
                            $("#ddReassignMember").append("<option>" + result[item].Text + "</option>");
                    }

                    $("#divLoader").hide();
                },
                error: function (result) {
                    //alert(111)
                    console.log(result.responseText)
                }
        });

        $("#myModal").show(1000);
        $("#hdnId").val(id);

    }
    function UpdateStatus() {

        var id = $("#hdnId").val();
        var Desc = $("#txtDesc").val();
        var Status = $("#ddlPopupStatus").val();
        var Reassign = $("#ddReassignMember").val();
        var FileDone = $("#DoneDocBase64").val();
        var DoneFileName = $("#DoneFileName").val();
        var FollowupDate = $("#txtFollowupDateNew1").val();
        var RequestType = $("#ddlRequestType").val();

        var fileData = new FormData();
        fileData.append("dId", id);
        fileData.append("Desc", Desc);
        fileData.append("Status", Status);
        fileData.append("FollowupDate", FollowupDate);
        fileData.append("Reassign", Reassign);
        fileData.append("FileName", DoneFileName);
        fileData.append("File", FileDone);
        fileData.append("RequestType", RequestType);

        if (Desc != "") {
            $.ajax({
                type: "POST",
                url: '@Url.Action("UpdateStatusAndDiscussion", "Discussion")',
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                data: fileData,
                //data: '{dId: ' + JSON.stringify(id) + ',Desc: ' + JSON.stringify(Desc) + ',Status: ' + JSON.stringify(Status) + ',FollowupDate: ' + JSON.stringify(FollowupDate) + ',Reassign: ' + JSON.stringify(Reassign) + ',FileName: ' + JSON.stringify(DoneFileName) + ',File: ' + JSON.stringify(FileDone) + ',RequestType: ' + JSON.stringify(RequestType) + '}',
                //contentType: "application/json; charset=utf-8",
                //dataType: "json",

                success: function (result) {
                    $("#myModal").hide(1000);
                },
                error: function (result) {
                    if (result.responseText == "True") {
                        cuteAlert({
                            type: "success",
                            title: "Saved",
                            message: "Status updated Successfully !!!",
                            buttonText: "Okay"
                        })
                        BindListing();
                        $("#myModal").hide(1000);
                    }
                }
            });
        }
        else {
            cuteAlert({
                type: "error",
                title: "Oops..",
                message: "Please enter Required fields",
                buttonText: "Okay"
            })
            $('#txtDesc').css('border-color', 'red');
        }
    }
    function ShowActivities(id) {

        if ($("#dvDiscussionData" + id).is(":visible")) {
            $("#dvDiscussionData" + id).hide(1000);
            $("#trActivities" + id).hide(1000);

            $("#imgExpand" + id).attr("src", "/Content/assets/images/details_open.png");
        }
        else {
            $("#divLoader").show();
            $.ajax({
                type: "POST",
                 url: '@Url.Action("GetSubDiscussionList")',
                data: '{Id:' + JSON.stringify(id) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    BindActivities(id,response);
                    $("#divLoader").hide();
                },
                failure: function (response) {

                    $("#divLoader").hide();
                }
            });
        }
    }

    function BindActivities(id,data) {
        if (data != "") {
            var htmlStr = "<table border=\"2\" style=\"background-color:gray;margin-left: 11px;width: 98%;\" class=\"table\">";
            htmlStr += "<tr style=\"text-align: center;\">"
            htmlStr += "<th scope=\"col\">Updated Date</th>";
            htmlStr += "<th scope=\"col\">Updated By</th>";
            htmlStr += "<th scope=\"col\">Description</th>";
            htmlStr += "<th scope=\"col\">Followup Date</th>";
            htmlStr += "<th scope=\"col\">Uploaded File</th>";
            htmlStr += "<th scope=\"col\">Assigned To</th>";
            htmlStr += "<th scope=\"col\">Status</th>";
            htmlStr += "</tr>";

            $.map(data, function (item) {
                var d = new Date();
                d = item.FollowupDate;
                console.log(item.UpdatedDate);
                htmlStr += "<tr style=\"text-align: center;\">"
                htmlStr += "<td>" + item.UpdatedDate + "</td>";
                htmlStr += "<td>" + item.UpdatedBy + "</td>";
                htmlStr += "<td style=\"width: 600px;\">" + item.Description + "</td>";
                htmlStr += "<td style=\"width: 100px;\">" + item.FollowupDate + "</td>";
                if (item.FileName == null || item.FileName == "") {
                    htmlStr += "<td style=\"width: 100px;\">--</td>";
                }
                else {
                    htmlStr += "<td style=\"width: 100px;\"><a href='" + item.AttachedFile + "' target=_blank>" + item.FileName + "</a></td>";
                }

                if (item.AssignedTo == null || item.AssignedTo == "Please Select") {
                    htmlStr += "<td style=\"width: 100px;\"> -- </td>";
                }
                else {
                    htmlStr += "<td style=\"width: 100px;\">" + item.AssignedTo + "</td>";
                }

                htmlStr += "<td style=\"width: 100px;\">" + item.Status + "</td>";
                htmlStr += "</tr>"
            });

            htmlStr += "</table>";
            $("#dvDiscussionData" + id).html(htmlStr);
            console.log(htmlStr);
            //$('tr[id^="trActivities"]').hide(1000);
            //$('div[id^="dvDiscussionData"]').hide(1000);
            $('[id^="imgExpand"]').attr("src", "../Content/assets/images/details_open.png");

            $("#trActivities" + id).show(1000);

            $("#dvDiscussionData" + id).show(1000);
            $("#imgExpand" + id).attr("src", "../Content/assets/images/details_close.png");

        }
        else {
            cuteAlert({
                type: "warning",
                title: "Oops..",
                message: "No tracking available",
                buttonText: "Okay"
            })
        }
    }

    $("#ddlDepartment").change(function () {
        var Department = $("#ddlDepartment").val();
        
        if ($("#ddlDepartment option:selected").text() == "Please Select") {
            $("#dvTaskCount").hide();
        }
        else {
            var FilterData = [];
            item = {};
            item["Department"] = Department;
            FilterData.push(item);
            var data = JSON.stringify(FilterData);
            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetDepartmentMember", "Discussion")',
                data: '{jsonData: ' + JSON.stringify(data) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log(result)

                    $("#ddMembers").empty()
                    $("#ddMembers").append("<option>Please Select</option>");
                    for (item in result) {
                        $("#ddMembers").append("<option>" + result[item].Members + "</option>");
                    }                   
                },
                error: function (result) {
                    //alert(111)
                    console.log(result.responseText)
                }
            });

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetTaskCounts", "Discussion")',
                data: '{Department: ' + JSON.stringify(Department) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var htmlStr = "<table border=\"2\" style=\"font-size:14px; margin-left: 0px;width: 100%;\" class=\"table\">";
                    htmlStr += "<tr style=\"text-align: center;\">"
                    htmlStr += "<th  scope=\"col\">Member Name</th>";
                    $.map(result, function (item) {
                        htmlStr += "<td>" + item.Name + "</td>";
                    });
                    htmlStr += "</tr>";

                    htmlStr += "<th scope=\"col\">Count</th>";
                    $.map(result, function (item) {
                        htmlStr += "<td>" + item.TotalCount + "</td>";
                    });
                    htmlStr += "</tr>";
                    htmlStr += "</table>";
                    $("#dvTaskCount").show();
                    $("#TaskCount").html(htmlStr);
                    $("#divLoader").hide();
                },
                error: function (result) {alert(111)
                    console.log(result.responseText);
                    $("#divLoader").hide();
                }
            });
        }
        });
    
</script>
