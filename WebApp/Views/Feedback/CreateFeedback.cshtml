@model  WebApp.ViewModel.FeedbackAuthorViewModel
@{
    ViewBag.Title = "Create Feedback";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="app-main__inner">

    <div class="mb-3 pr-3 pt-3 pl-3" style="padding-bottom:20px; background-color:white;display:flex;">
        <div class="col-md-8 col-xl-8" style="width: 70% !important; float: left;">
            <div class="col-md-12 col-xl-12 pl-3 pr-3 pb-3" style="border:2px solid grey; border-radius:10px;">
                <div class="row">
                    <div class="col-md-6 col-xl-6" style="margin-left:20px; margin-top:20px;">
                        <h4> Home Section </h4>
                    </div>
                </div>
                @Html.HiddenFor(model => model.GroupId)
                @Html.HiddenFor(model => model.lstOutletDetail.Count, new { @id = "hdnOutletCount" })


                @if (Model.lstFeedbackData != null)
                {
                    foreach (var item in Model.lstFeedbackData)
                    {
                        if (item.Section == "Home")
                        {

                            <div class="row">
                                <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                                    @Html.CheckBoxFor(model => item.IsDisplay, new { @id = "chkIsDisplayHome" + item.Id })
                                    @Html.TextBoxFor(model => item.Text, new { @class = "input150", @id = "txtHomeHeadingText" + item.Id })
                                </div>
                            </div>

                        }

                    }
                    if (Model.PointsAndMessages != null)
                    {
                        <div class="row">
                            <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                                @Html.CheckBoxFor(model => model.PointsAndMessages.IsAddRepresentative, new { @id = "chkSalesRep" }) Add Sales Representative(Enter with comma(,) separated)
                                <div id="dvSalesRep" style="display:none;">
                                    @Html.TextBoxFor(model => model.PointsAndMessages.RepresentativesList, new { @class = "input150", @id = "txtHomeRepresentative" })
                                </div>
                            </div>
                        </div>
                    }
                }

            </div>

            <div class="col-md-12 col-xl-12  pl-3 pr-3 pb-3 mt-2" style="border:2px solid grey; border-radius:10px;">
                <div class="row">
                    <div class="col-md-6 col-xl-6" style="margin-left:20px; margin-top:20px;">
                        <h4> Question Section </h4>
                    </div>
                </div>
                @if (Model.lstFeedbackData != null)
                {
                    foreach (var item in Model.lstFeedbackData)
                    {
                        if (item.Section == "FeedbackQuestions")
                        {
                            <div class="row">
                                <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                                    @Html.HiddenFor(model => item.Type, new { @id = "hdnQuestionType" + item.Id })
                                    @Html.CheckBoxFor(model => item.IsDisplay, new { @id = "chkIsDisplayQuestion" + item.Id })
                                    @Html.TextBoxFor(model => item.Text, new { @class = "input100", @id = "txtQuestionHeadingText" + item.Id })
                                    @if (item.Type == "Question")
                                    {
                                        @Html.DropDownListFor(model => item.IsMandatory, new SelectList(Model.MandatoryOrNot(), "Value", "Text", @item.IsMandatory), htmlAttributes: new { @class = "input50", @id = "ddlIsMandatoryQuestion" + item.Id })

                                    }
                                </div>
                            </div>
                        }
                    }
                }
            </div>

            <div class="col-md-12 col-xl-12   pl-3 pr-3 pb-3 mt-2" style="border:2px solid grey; border-radius:10px;">
                <div class="row">
                    <div class="col-md-6 col-xl-6" style="margin-left:20px; margin-top:20px;">
                        <h4> Other information </h4>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                        @Html.CheckBoxFor(model => model.PointsAndMessages.IsOtherInfoShow, new { @id = "chkIsOtherInfoShow" }) Do you want this page, where you can collect more information of your customer?
                    </div>
                </div>
                <div id="dvShowOtherInfo">
                    @if (Model.lstFeedbackData != null)
                    {

                        foreach (var item in Model.lstFeedbackData)
                        {

                            if (item.Section == "OtherInformation")
                            {
                                <div class="row">
                                    <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                                        @Html.HiddenFor(model => item.Type, new { @id = "hdnOtherInfoType" + item.Id })
                                        @Html.CheckBoxFor(model => item.IsDisplay, new { @id = "chkIsDisplayOther" + item.Id })
                                        @Html.TextBoxFor(model => item.Text, new { @class = "input100", @id = "txtOtherHeadingText" + item.Id })
                                        @if (item.Type == "Question")
                                        {

                                            @Html.DropDownListFor(model => item.IsMandatory, new SelectList(Model.MandatoryOrNotNew(), "Value", "Text", @item.IsMandatory), htmlAttributes: new { @class = "input50", @id = "ddlIsMandatoryOther" + item.Id })

                                        }
                                    </div>
                                </div>
                            }
                        }
                    }
                </div>

            </div>

            <div class="col-md-12 col-xl-12   pl-3 pr-3 pb-3 mt-2" style="border:2px solid grey; border-radius:10px;">
                <div class="row">
                    <div class="col-md-6 col-xl-6" style="margin-left:20px; margin-top:20px;">
                        <h4> Bonus Points </h4>
                    </div>
                    <div class="row col-md-12 col-xl-12">
                        <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                            @Html.CheckBoxFor(model => model.PointsAndMessages.IsFeedbackPoints, new { @id = "chkIsFeedbackPoints" }) Do you want to give any bonus points for submitting the feedback?
                        </div>
                    </div>
                    <div class="row" id="dvAwardPoints" style="display: none; margin-left: 20px; ">
                        <div class="col-md-6 col-xl-6" style="margin-top:20px;">
                            How many points? @Html.TextBoxFor(model => model.PointsAndMessages.AwardFeedbackPoints, new { @class = "input100", @id = "txtAwardFeedbackPoints" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-12 col-xl-12   pl-3 pr-3 pb-3 mt-2" style="border:2px solid grey; border-radius:10px;">
                <div class="row">
                    <div class="col-md-6 col-xl-6" style="margin-left:20px; margin-top:20px;">
                        <h4> Message Scripts </h4>
                    </div>
                    <div class="row col-md-12 col-xl-12">
                        <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                            Thank You Message to Customer (will be sent through your whatsapp account) @Html.TextAreaFor(model => model.PointsAndMessages.MsgToCustomer, new { @class = "input100", rows = "3", @style = "width:100% !important;", @id = "txtMsgToCustomer" })
                        </div>
                    </div>

                    <div class="row col-md-12 col-xl-12">
                        <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                            Negative Feedback real-time to some numbers (will be sent from blue ocktopus sender id) @Html.TextAreaFor(model => model.PointsAndMessages.MsgNegativeFeedback, new { @class = "input100", rows = "3", @style = "width:100% !important;", @id = "txtMsgNegativeFeedback" })
                        </div>
                    </div>
                    @if (Model.lstOutletDetail != null)
                    {
                        <div class="row col-md-12 col-xl-12">
                            <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                                <table border="1" cellpadding="10" cellspacing="10">
                                    <tr>
                                        <td style="font-weight:bold;">Outlet Name</td>
                                        <td style="font-weight:bold;">Mobile Numbers (separate with a comma (,))</td>
                                    </tr>

                                    @foreach (var item in Model.lstOutletData)
                                    {
                                        var id = "txtOutlet" + item.outletId;
                                        <tr>
                                            <td>@item.outletName</td>
                                            <td>
                                                @Html.TextBoxFor(model => item.mobileNos, new { @class = "input100", @id = "txtOutlet" + item.outletId })
                                            </td>
                                        </tr>
                                    }
                                </table>
                            </div>
                        </div>
                    }
                    <div class="row col-md-12 col-xl-12">
                        <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                            <b>All members who have transacted but not given feedback, can be approached the next day through an SMS / message <br /></b>
                            @Html.CheckBoxFor(model => model.PointsAndMessages.IsMsgMissedFeedback, new { @id = "chkMissedMessage" })  Do you want to send a message

                        </div>
                    </div>

                    <div class="row col-md-12 col-xl-12" id="dvMsgMissedFeedback" style="display:none;">
                        <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                            @Html.TextAreaFor(model => model.PointsAndMessages.MsgMissedFeedback, new { @class = "input100", @id = "txtMsgMissedFeedback", rows = "3", @style = "width:100% !important;" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-12 col-xl-12 pt-3 pl-3 pr-3 pb-3">
                <button type="button" id="btnFeedbackSave" class="btn btn-primary pull-right" onclick="return CheckValidationAndSubmit();" style="margin-right:10px;">Submit</button>
            </div>

            <div class="col-md-12 col-xl-12   pl-3 pr-3 pb-3 mt-5" style="border:2px solid grey; border-radius:10px;">
                <div class="row">
                    <div class="col-md-6 col-xl-6" style="margin-left:20px; margin-top:20px;">
                        <h3> Feedback Links </h3>
                    </div>
                    @if (Model.lstOutletDetail != null)
                    {
                        <div class="row col-md-12 col-xl-12">
                            <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                                <table border="1" cellpadding="10" cellspacing="10">
                                    <tr>
                                        <td style="font-weight:bold;">Outlet Name</td>
                                        <td style="font-weight:bold;">Feedback Links to be used at Respective Outlets</td>
                                    </tr>

                                    @foreach (var item in Model.lstOutletDetail)
                                    {
                                        var id = "http://localhost:57265/Feedback/GetFeedBack/Id?" + item.Value;
                                        <tr>
                                            <td>@item.Text</td>
                                            <td><a href="@id" target="_blank">@id</a></td>
                                        </tr>
                                    }
                                </table>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-4 col-xl-4" style="border: 2px solid grey; border-radius: 10px; width: 30% !important;float:left;background-color:seashell;">
            <div class="col-md-12 col-xl-12" style="text-align:center;"><h4>Preview</h4></div>
            <div style="border: 2px solid lightgray; border-radius: 10px; margin-top:10px;margin-bottom:10px;">
                @if (Model.lstFeedbackData != null)
                {
                    foreach (var item in Model.lstFeedbackData)
                    {
                        if (item.Section == "Home")
                        {
                            var Id = "spnHome" + item.Id;
                            if (item.Type == "Footer")
                            {
                                <div class="row">
                                    <div class="col-md-12 col-xl-12" style="margin-top:20px;text-align:center;">
                                        <input type="number" class="input50" /> <button class="btn btn-primary">Go</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-xl-12  mb-5" style="margin-top:20px;text-align:center;">
                                        <span id="@Id">@item.Text</span>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="row">
                                    <div class="col-md-12 col-xl-12 mb-2" style="margin-top:20px;text-align:center;">
                                        <span id="@Id">@item.Text</span>
                                    </div>
                                </div>
                            }
                        }
                    }
                }
            </div>

            <div style="border: 2px solid lightgray; border-radius: 10px; margin-top:10px;margin-bottom:10px;padding-bottom:20px;">
                @if (Model.lstFeedbackData != null)
                {
                    foreach (var item in Model.lstFeedbackData)
                    {
                        if (item.Section == "FeedbackQuestions")
                        {
                            var Id = "spnFeedbackQuestions" + item.Id;
                            var dvId = "dvFeedbackQuestions" + item.Id;
                            var spnMandatory = "spnMandatory" + item.Id;
                            if (item.Type == "Question")
                            {

                                <div class="row">
                                    <div class="col-md-12 col-xl-12" style="margin-top:20px;text-align:center;" id="@dvId">
                                        <span id="@Id">@item.Text</span><br />
                                        <span><b>Rating Images</b></span>
                                        @if (item.IsMandatory == "Mandatory")
                                        {
                                            <span style="color:red;" id="@spnMandatory">*</span>
                                        }
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="row">
                                    <div class="col-md-12 col-xl-12 mb-2" style="margin-top:20px;text-align:center;">
                                        <span id="@Id">@item.Text</span>
                                    </div>
                                </div>
                            }
                        }
                    }
                }
            </div>

            <div style="border: 2px solid lightgray; border-radius: 10px; margin-top:10px;margin-bottom:10px;padding-bottom:20px;">
                @if (Model.lstFeedbackData != null)
                {
                    foreach (var item in Model.lstFeedbackData)
                    {
                        if (item.Section == "OtherInformation")
                        {
                            var Id = "spnOtherInformation" + item.Id;
                            var dvId = "dvOtherInformation" + item.Id;
                            var spnMandatory = "spnMandatoryOther" + item.Id;
                            if (item.Type == "Question")
                            {

                                <div class="row">
                                    <div class="col-md-12 col-xl-12" style="margin-top:20px;text-align:center;" id="@dvId">
                                        <span id="@Id">@item.Text</span><br />
                                        @if (item.TypeId == 2 || item.TypeId == 3)
                                        {
                                            <input type="date" class="input50" />
                                        }
                                        else
                                        {
                                            if (item.TypeId == 1)
                                            {
                                                @Html.DropDownList("abc", new SelectList(Model.Gender(), "Value", "Text"), htmlAttributes: new { @class = "input50" })
                                            }
                                            if (item.TypeId == 4)
                                            {
                                                @Html.DropDownList("abc", new SelectList(Model.Gender(), "Value", "Text"), htmlAttributes: new { @class = "input50" })
                                            }
                                        }
                                        @if (item.IsMandatory == "Mandatory")
                                        {
                                            <span style="color:red;" id="@spnMandatory">*</span>
                                        }
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="row">
                                    <div class="col-md-12 col-xl-12 mb-2" style="margin-top:20px;text-align:center;">
                                        <span id="@Id">@item.Text</span>
                                    </div>
                                </div>
                            }
                        }
                    }
                }
            </div>

        </div>
    </div>
</div>



<script>
    $(document).ready(function () {
        $('#chkSalesRep').click(function () {
            if ($(this).is(':checked')) {
                $("#dvSalesRep").show();
            }
            else {
                $("#dvSalesRep").hide();

            }
        });

        $('#chkIsFeedbackPoints').click(function () {
            if ($(this).is(':checked')) {
                $("#dvAwardPoints").show();
            }
            else {
                $("#dvAwardPoints").hide();

            }
        });

        $('#chkMissedMessage').click(function () {
            if ($(this).is(':checked')) {
                $("#dvMsgMissedFeedback").show();
            }
            else {
                $("#dvMsgMissedFeedback").hide();

            }
        });

        if ($("#chkSalesRep").is(":checked")) {
            $("#dvSalesRep").show();
        }
        if ($("#chkIsFeedbackPoints").is(":checked")) {
            $("#dvAwardPoints").show();
        }
        if ($("#chkMissedMessage").is(":checked")) {
            $("#dvMsgMissedFeedback").show();
        }

        LoadPreview();
        ChangePreview();
    });

    function CheckValidationAndSubmit() {
        var HomeData = [];
        $('[id^=chkIsDisplayHome]').each(function (i, item) {
            var id = item.id.substr(16);
            itemHome = {}
            itemHome["Id"] = id;
            itemHome["Text"] = $("#txtHomeHeadingText" + id).val();
            itemHome["IsDisplay"] = $("#chkIsDisplayHome" + id).is(":checked");

            HomeData.push(itemHome);
        });

        var QuestionData = [];
        $('[id^=chkIsDisplayQuestion]').each(function (i, item) {
            var id = item.id.substr(20);
            itemQuestion = {}
            itemQuestion["Id"] = id;
            itemQuestion["Text"] = $("#txtQuestionHeadingText" + id).val();
            itemQuestion["IsDisplay"] = $("#chkIsDisplayQuestion" + id).is(":checked");
            if ($("#hdnQuestionType" + id).val() == "Question") {
                itemQuestion["IsMandatory"] = $("#ddlIsMandatoryQuestion" + id).val();
            }

            QuestionData.push(itemQuestion);
        });

        var OtherInfoData = [];
        $('[id^=chkIsDisplayOther]').each(function (i, item) {
            var id = item.id.substr(17);
            itemOtherInfo = {}
            itemOtherInfo["Id"] = id;
            itemOtherInfo["Text"] = $("#txtOtherHeadingText" + id).val();
            itemOtherInfo["IsDisplay"] = $("#chkIsDisplayOther" + id).is(":checked");
            if ($("#hdnOtherInfoType" + id).val() == "Question") {
                itemOtherInfo["IsMandatory"] = $("#ddlIsMandatoryOther" + id).val();
            }

            OtherInfoData.push(itemOtherInfo);
        });

        var OtherConfigData = [];
        itemOtherConfig = {}
        itemOtherConfig["IsRepresentative"] = $("#chkSalesRep").is(":checked");
        itemOtherConfig["RepresentativeList"] = $("#txtHomeRepresentative").val();
        itemOtherConfig["IsFeedbackPoints"] = $("#chkIsFeedbackPoints").is(":checked");
        itemOtherConfig["AwardFeedbackPoints"] = $("#txtAwardFeedbackPoints").val();
        itemOtherConfig["MsgToCustomer"] = $("#txtMsgToCustomer").val();
        itemOtherConfig["MsgNegativeFeedback"] = $("#txtMsgNegativeFeedback").val();
        itemOtherConfig["IsMsgMissedFeedback"] = $("#chkMissedMessage").is(":checked");
        itemOtherConfig["MsgMissedFeedback"] = $("#txtMsgMissedFeedback").val();
        itemOtherConfig["IsOtherInfoShow"] = $("#chkIsOtherInfoShow").is(":checked");
        OtherConfigData.push(itemOtherConfig);

        var OutletMobileNos = [];
        $('[id^=txtOutlet]').each(function (i, item) {
            itemOutlet = {}
            itemOutlet["OutletId"] = item.id.substr(9);
            itemOutlet["Numbers"] = $(item).val();
            OutletMobileNos.push(itemOutlet);
        });

        console.log(HomeData);
        console.log(QuestionData);
        console.log(OtherInfoData);
        console.log(OtherConfigData);
        console.log(OutletMobileNos);
        $("#divLoader").show();
        $.ajax({
            type: "POST",
            url: '@Url.Action("UpdateFeedbackDetails", "Feedback")',
            data: '{HomeData: ' + JSON.stringify(JSON.stringify(HomeData)) + ',QuestionData: ' + JSON.stringify(JSON.stringify(QuestionData)) + ',OtherInfoData: ' + JSON.stringify(JSON.stringify(OtherInfoData)) + ',OtherConfigData: ' + JSON.stringify(JSON.stringify(OtherConfigData)) + ',OutletMobileNos: ' + JSON.stringify(JSON.stringify(OutletMobileNos)) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result) {
                    setTimeout(cuteAlert({
                        type: "success",
                        title: "Save",
                        message: "Record Save Successfully!",
                        buttonText: "Okay"
                    }), 10000);
                }
                else {
                    setTimeout(cuteAlert({
                        type: "error",
                        title: "OOPS",
                        message: "Some Problem encountered. Please contact Administrator!",
                        buttonText: "Okay"
                    }), 10000);
                }
                $("#divLoader").hide();
            },
            error: function (result) {
                console.log(result.responseText)
                $("#divLoader").hide();
            }
        });
    }

    function LoadPreview() {
        $('[id^=chkIsDisplayHome]').each(function (i, item) {
                if (this.checked) {
                    var id = item.id.substr(16);
                    $("#spnHome" + id).text($("#txtHomeHeadingText" + id).val());
                }
                else {
                    var id = item.id.substr(16);
                    $("#spnHome" + id).text("");
                }
        });

        $('[id^=chkIsDisplayQuestion]').each(function (i, item) {
            if (this.checked) {
                var id = item.id.substr(20);
                if ($("#hdnQuestionType" + id).val() == "Question") {

                    $("#spnFeedbackQuestions" + id).text($("#txtQuestionHeadingText" + id).val());
                    $("#dvFeedbackQuestions" + id).show();
                }
                else {
                    $("#spnFeedbackQuestions" + id).text($("#txtQuestionHeadingText" + id).val());
                }
            }
            else {
                var id = item.id.substr(20);
                if ($("#hdnQuestionType" + id).val() == "Question") {
                    $("#spnFeedbackQuestions" + id).text("");
                    $("#dvFeedbackQuestions" + id).hide();
                }
                else {
                    $("#spnFeedbackQuestions" + id).text("");
                }
            }
        });

        $('[id^=chkIsDisplayOther]').each(function (i, item) {
            if (this.checked) {

                var id = item.id.substr(17);
                if ($("#hdnOtherInfoType" + id).val() == "Question") {

                    $("#spnOtherInformation" + id).text($("#txtQuestionHeadingText" + id).val());
                    $("#dvOtherInformation" + id).show();
                }
                else {
                    $("#spnOtherInformation" + id).text($("#txtQuestionHeadingText" + id).val());
                }
            }
            else {

                var id = item.id.substr(17);
                if ($("#hdnOtherInfoType" + id).val() == "Question") {
                    $("#spnOtherInformation" + id).text("");
                    $("#dvOtherInformation" + id).hide();
                }
                else {
                    $("#spnOtherInformation" + id).text("");
                }
            }
        });
        if ($("#chkIsOtherInfoShow").is(":checked")) {
            $("#dvShowOtherInfo").show();
        }
        else {
            $("#dvShowOtherInfo").hide();
        }       

    }

    function ChangePreview() {
        $('[id^=chkIsDisplayHome]').each(function (i, item) {
            $("#" + item.id).change(function () {
                if (this.checked) {
                    var id = item.id.substr(16);
                    $("#spnHome" + id).text($("#txtHomeHeadingText" + id).val());
                }
                else {
                    var id = item.id.substr(16);
                    $("#spnHome" + id).text("");
                }
            });
        });

        $('[id^=txtHomeHeadingText]').each(function (i, item) {
            $("#" + item.id).focusout(function () {
                var id = item.id.substr(18);
                $("#spnHome" + id).text($("#" + item.id).val());
            });
        });

        $('[id^=chkIsDisplayQuestion]').each(function (i, item) {
            $("#" + item.id).change(function () {
                if (this.checked) {
                    var id = item.id.substr(20);
                    if ($("#hdnQuestionType" + id).val() == "Question") {

                        $("#spnFeedbackQuestions" + id).text($("#txtQuestionHeadingText" + id).val());
                        $("#dvFeedbackQuestions" + id).show();
                    }
                    else {
                        $("#spnFeedbackQuestions" + id).text($("#txtQuestionHeadingText" + id).val());
                    }
                }
                else {
                    var id = item.id.substr(20);
                    if ($("#hdnQuestionType" + id).val() == "Question") {
                        $("#spnFeedbackQuestions" + id).text("");
                        $("#dvFeedbackQuestions" + id).hide();
                    }
                    else {
                        $("#spnFeedbackQuestions" + id).text("");
                    }
                }
            });
        });

        $('[id^=txtQuestionHeadingText]').each(function (i, item) {
            $("#" + item.id).focusout(function () {
                var id = item.id.substr(22);
                $("#spnFeedbackQuestions" + id).text($("#" + item.id).val());
            });
        });

        $('[id^=chkIsDisplayOther]').each(function (i, item) {
            $("#" + item.id).change(function () {

                if (this.checked) {

                    var id = item.id.substr(17);
                if ($("#hdnOtherInfoType" + id).val() == "Question") {
                    $("#spnOtherInformation" + id).text($("#txtOtherHeadingText" + id).val());
                    $("#dvOtherInformation" + id).show();
                }
                else {
                    $("#spnOtherInformation" + id).text($("#txtOtherHeadingText" + id).val());
                }
            }
                else {

                var id = item.id.substr(17);
                if ($("#hdnOtherInfoType" + id).val() == "Question") {
                    $("#spnOtherInformation" + id).text("");
                    $("#dvOtherInformation" + id).hide();
                }
                else {
                    $("#spnOtherInformation" + id).text("");
                }
            }
            });
        });

        $('[id^=txtOtherHeadingText]').each(function (i, item) {
            $("#" + item.id).focusout(function () {
                var id = item.id.substr(19);
                $("#spnOtherInformation" + id).text($("#" + item.id).val());
            });
        });

        $("#chkIsOtherInfoShow").change(function () {
            if (this.checked) {
                $("#dvShowOtherInfo").show();
            }
            else {
                $("#dvShowOtherInfo").hide();
            }
        });
    }


</script>
