@model  WebApp.ViewModel.FeedbackAuthorViewModel
@{
    ViewBag.Title = "Create Feedback";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="app-main__inner">
    
    <div class="mb-3 pr-3 pt-3 pl-3 card" style="padding-bottom:20px; display:flex !important;">
        <div class="col-md-8 col-xl-8">
            <div class="col-md-12 col-xl-12 pl-3 pr-3 pb-3" style="border:2px solid grey; border-radius:10px;">
                <div class="row">
                    <div class="col-md-6 col-xl-6" style="margin-left:20px; margin-top:20px;">
                        <h4> Home Section </h4>
                    </div>
                </div>
                @Html.HiddenFor(model => model.GroupId)
                @Html.HiddenFor(model => model.lstOutletDetail.Count, new { @id = "hdnOutletCount" })


                @if (Model.lstFeedbackData != null)
                {
                    int count = 0;
                    foreach (var item in Model.lstFeedbackData)
                    {
                        count++;
                        if (item.Section == "Home")
                        {

                            <div class="row">
                                <div class="col-md-8 col-xl-8" style="margin-left:20px; margin-top:20px;">
                                    @Html.CheckBoxFor(model => item.IsDisplay, new { @id = "chkIsDisplayHome" + count })
                                    @Html.TextBoxFor(model => item.Text, new { @class = "input100", @id = "txtHomeHeadingText" + count })
                                    @*@Html.DropDownListFor(model => item.IsMandatory.Value, new SelectList(Model.MandatoryOrNot(), "Value", "Text"), htmlAttributes: new { @class = "input50", @id = "ddlIsMandatoryHome" + count })*@

                                </div>
                            </div>

                        }

                    }
                    if (Model.PointsAndMessages != null)
                    {
                        <div class="row">
                            <div class="col-md-6 col-xl-6" style="margin-left:20px; margin-top:20px;">
                                @Html.CheckBoxFor(model => model.PointsAndMessages.IsAddRepresentative, new { @id = "chkSalesRep" }) Add Sales Representative
                                <div id="dvSalesRep" style="display:none;">
                                    @Html.TextBoxFor(model => model.PointsAndMessages.RepresentativesList, new { @class = "input100", @id = "txtHomeRepresentative", @placeholder = "Enter with comma separated" })
                                </div>
                            </div>
                        </div>
                    }
                }

            </div>

            <div class="col-md-12 col-xl-12  pl-3 pr-3 pb-3 mt-2" style="border:2px solid grey; border-radius:10px;">
                <div class="row">
                    <div class="col-md-6 col-xl-6" style="margin-left:20px; margin-top:20px;">
                        <h4> Question Section </h4>
                    </div>
                </div>
                @if (Model.lstFeedbackData != null)
                {
                    int count = 0;
                    foreach (var item in Model.lstFeedbackData)
                    {
                        count++;
                        if (item.Section == "FeedbackQuestions")
                        {
                            <div class="row">
                                <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                                    @Html.CheckBoxFor(model => item.IsDisplay, new { @id = "chkIsDisplayQuestion" + count })
                                    @Html.TextBoxFor(model => item.Text, new { @class = "input100", @id = "txtQuestionHeadingText" + count })
                                    @if (item.Type == "Question")
                                    {
                                        @Html.DropDownListFor(model => item.IsMandatory.Value, new SelectList(Model.MandatoryOrNot(), "Value", "Text"), htmlAttributes: new { @class = "input50", @id = "ddlIsMandatoryQuestion" + count })

                                    }
                                </div>
                            </div>
                        }
                    }
                }
            </div>

            <div class="col-md-12 col-xl-12   pl-3 pr-3 pb-3 mt-2" style="border:2px solid grey; border-radius:10px;">
                <div class="row">
                    <div class="col-md-6 col-xl-6" style="margin-left:20px; margin-top:20px;">
                        <h4> Other information </h4>
                    </div>
                </div>
                @if (Model.lstFeedbackData != null)
                {
                    int count = 0;
                    foreach (var item in Model.lstFeedbackData)
                    {
                        count++;
                        if (item.Section == "OtherInformation")
                        {
                            <div class="row">
                                <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                                    @Html.CheckBoxFor(model => item.IsDisplay, new { @id = "chkIsDisplayOther" + count })
                                    @Html.TextBoxFor(model => item.Text, new { @class = "input100", @id = "txtOtherHeadingText" + count })
                                    @if (item.Type == "Question")
                                    {
                                        @Html.DropDownListFor(model => item.IsMandatory.Value, new SelectList(Model.MandatoryOrNot(), "Value", "Text"), htmlAttributes: new { @class = "input50", @id = "ddlIsMandatoryOther" + count })
                                    }
                                </div>
                            </div>
                        }
                    }
                }

            </div>

            <div class="col-md-12 col-xl-12   pl-3 pr-3 pb-3 mt-2" style="border:2px solid grey; border-radius:10px;">
                <div class="row">
                    <div class="col-md-6 col-xl-6" style="margin-left:20px; margin-top:20px;">
                        <h4> Bonus Points </h4>
                    </div>
                    <div class="row col-md-12 col-xl-12">
                        <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                            @Html.CheckBoxFor(model => model.PointsAndMessages.IsFeedbackPoints, new { @id = "chkIsFeedbackPoints" }) Do you want to give any bonus points for submitting the feedback?
                        </div>
                    </div>
                    <div class="row" id="dvAwardPoints" style="display: none; margin-left: 20px; ">
                        <div class="col-md-6 col-xl-6" style="margin-top:20px;">
                            How many points? @Html.TextBoxFor(model => model.PointsAndMessages.AwardFeedbackPoints, new { @class = "input100", @id = "txtAwardFeedbackPoints" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-12 col-xl-12   pl-3 pr-3 pb-3 mt-2" style="border:2px solid grey; border-radius:10px;">
                <div class="row">
                    <div class="col-md-6 col-xl-6" style="margin-left:20px; margin-top:20px;">
                        <h4> Message Scripts </h4>
                    </div>
                    <div class="row col-md-12 col-xl-12">
                        <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                            Thank You Message to Customer (will be sent through your whatsapp account) @Html.TextAreaFor(model => model.PointsAndMessages.MsgToCustomer, new { @class = "input100", rows = "3", @style = "width:100% !important;", @id = "txtMsgToCustomer" })
                        </div>
                    </div>

                    <div class="row col-md-12 col-xl-12">
                        <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                            Negative Feedback real-time to some numbers (will be sent from blue ocktopus sender id) @Html.TextAreaFor(model => model.PointsAndMessages.MsgNegativeFeedback, new { @class = "input100", rows = "3", @style = "width:100% !important;", @id = "txtMsgNegativeFeedback" })
                        </div>
                    </div>
                    @if (Model.lstOutletDetail != null)
                    {
                        int count = 0;
                        <div class="row col-md-12 col-xl-12">
                            <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                                <table border="1" cellpadding="10" cellspacing="10">
                                    <tr>
                                        <td style="font-weight:bold;">Outlet Name</td>
                                        <td style="font-weight:bold;">Mobile Numbers (separate with a comma (,))</td>
                                    </tr>

                                    @foreach (var item in Model.lstOutletData)
                                    {
                                        var id = "txtOutlet" + item.outletId;
                                        <tr>
                                            <td>@item.outletName</td>
                                            <td>
                                                @Html.TextBoxFor(model => item.mobileNos, new { @class = "input100", @id = "txtOutlet" + item.outletId })
                                            </td>
                                        </tr>
                                    }
                                </table>
                            </div>
                        </div>
                    }
                    <div class="row col-md-12 col-xl-12">
                        <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                            <b>All members who have transacted but not given feedback, can be approached the next day through an SMS / message <br /></b>
                            @Html.CheckBoxFor(model => model.PointsAndMessages.IsMsgMissedFeedback, new { @id = "chkMissedMessage" })  Do you want to send a message

                        </div>
                    </div>

                    <div class="row col-md-12 col-xl-12" id="dvMsgMissedFeedback" style="display:none;">
                        <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                            @Html.TextAreaFor(model => model.PointsAndMessages.MsgMissedFeedback, new { @class = "input100", @id = "txtMsgMissedFeedback", rows = "3", @style = "width:100% !important;" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-12 col-xl-12 pt-3 pl-3 pr-3 pb-3">
                <button type="button" id="btnFeedbackSave" class="btn btn-primary pull-right" onclick="return CheckValidationAndSubmit();" style="margin-right:10px;">Submit</button>
            </div>

            <div class="col-md-12 col-xl-12   pl-3 pr-3 pb-3 mt-5" style="border:2px solid grey; border-radius:10px;">
                <div class="row">
                    <div class="col-md-6 col-xl-6" style="margin-left:20px; margin-top:20px;">
                        <h3> Feedback Links </h3>
                    </div>
                    @if (Model.lstOutletDetail != null)
                    {
                        <div class="row col-md-12 col-xl-12">
                            <div class="col-md-12 col-xl-12" style="margin-left:20px; margin-top:20px;">
                                <table border="1" cellpadding="10" cellspacing="10">
                                    <tr>
                                        <td style="font-weight:bold;">Outlet Name</td>
                                        <td style="font-weight:bold;">Feedback Links to be used at Respective Outlets</td>
                                    </tr>

                                    @foreach (var item in Model.lstOutletDetail)
                                    {
                                        var id = "http://localhost:57265/Feedback/GetFeedBack/Id?" + item.Value;
                                        <tr>
                                            <td>@item.Text</td>
                                            <td><a href="@id" target="_blank">@id</a></td>
                                        </tr>
                                    }
                                </table>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>


        <div class="col-md-2 col-xl-2" style="border:2px solid grey; border-radius:10px;">asdasd</div>

    </div>
   
</div>



    <script>
    $(document).ready(function () {
        $('#chkSalesRep').click(function () {
            if ($(this).is(':checked')) {
                $("#dvSalesRep").show();
            }
            else {                
                $("#dvSalesRep").hide();

            }
        });

        $('#chkIsFeedbackPoints').click(function () {
            if ($(this).is(':checked')) {
                $("#dvAwardPoints").show();
            }
            else {                
                $("#dvAwardPoints").hide();

            }
        });

        $('#chkMissedMessage').click(function () {
            if ($(this).is(':checked')) {
                $("#dvMsgMissedFeedback").show();
            }
            else {               
                $("#dvMsgMissedFeedback").hide();

            }
        });

        if ($("#chkSalesRep").is(":checked")) {
            $("#dvSalesRep").show();
        }
        if ($("#chkIsFeedbackPoints").is(":checked")) {
            $("#dvAwardPoints").show();
        }
        if ($("#chkMissedMessage").is(":checked")) {
            $("#dvMsgMissedFeedback").show();
        }


    });

    function CheckValidationAndSubmit() {
        var HomeData = [];
        var countHome = 3;
        for (var i = 1; i <= countHome; i++) {
            itemHome = {}
            itemHome["Id"] = i;
            itemHome["Text"] = $("#txtHomeHeadingText" + i).val();
            itemHome["IsDisplay"] = $("#chkIsDisplayHome" + i).is(":checked");
            /*itemHome["IsMandatory"] = $("#ddlIsMandatoryHome" + i).val();*/
            HomeData.push(itemHome);
        }

        var QuestionData = [];
        var countQue = 9;
        for (var i = 4; i <= countQue; i++) {
            itemQuestion = {}
            itemQuestion["Id"] = i;
            itemQuestion["Text"] = $("#txtQuestionHeadingText" + i).val();
            itemQuestion["IsDisplay"] = $("#chkIsDisplayQuestion" + i).is(":checked");
            if (i > 5) {
                itemQuestion["IsMandatory"] = $("#ddlIsMandatoryQuestion" + i).val();
            }
            QuestionData.push(itemQuestion);
        }

        var OtherInfoData = [];
        var countOtherInfo = 15;
        for (var i = 10; i <= countOtherInfo; i++) {
            itemOtherInfo = {}
            itemOtherInfo["Id"] = i;
            itemOtherInfo["Text"] = $("#txtOtherHeadingText" + i).val();
            itemOtherInfo["IsDisplay"] = $("#chkIsDisplayOther" + i).is(":checked");
            if (i > 11) {
                itemOtherInfo["IsMandatory"] = $("#ddlIsMandatoryOther" + i).val();
            }
            OtherInfoData.push(itemOtherInfo);
        }

        var OtherConfigData = [];
        itemOtherConfig = {}
        itemOtherConfig["IsRepresentative"] = $("#chkSalesRep").is(":checked");
        itemOtherConfig["RepresentativeList"] = $("#txtHomeRepresentative").val();
        itemOtherConfig["IsFeedbackPoints"] = $("#chkIsFeedbackPoints").is(":checked");
        itemOtherConfig["AwardFeedbackPoints"] = $("#txtAwardFeedbackPoints").val();
        itemOtherConfig["MsgToCustomer"] = $("#txtMsgToCustomer").val();
        itemOtherConfig["MsgNegativeFeedback"] = $("#txtMsgNegativeFeedback").val();
        itemOtherConfig["IsMsgMissedFeedback"] = $("#chkMissedMessage").is(":checked");
        itemOtherConfig["MsgMissedFeedback"] = $("#txtMsgMissedFeedback").val();
        OtherConfigData.push(itemOtherConfig);

        var OutletMobileNos = [];
        $('[id^=txtOutlet]').each(function (i, item) {
            itemOutlet = {}
            itemOutlet["OutletId"] = item.id.substr(9);

            itemOutlet["Numbers"] = $(item).val();

            OutletMobileNos.push(itemOutlet);
        });

        //var AllData = [];
        //item = {}
        //item["Home"] = HomeData;
        //item["Question"] = QuestionData;
        //item["OtherInfo"] = OtherInfoData;
        //item["OtherConfig"] = OtherConfigData;
        //item["OutletMobileNos"] = OutletMobileNos;
        //AllData.push(item);

        //var data = JSON.stringify(AllData);

        $.ajax({
            type: "POST",
            url: '@Url.Action("UpdateFeedbackDetails", "Feedback")',
            data: '{HomeData: ' + JSON.stringify(JSON.stringify(HomeData)) + ',QuestionData: ' + JSON.stringify(JSON.stringify(QuestionData)) + ',OtherInfoData: ' + JSON.stringify(JSON.stringify(OtherInfoData)) + ',OtherConfigData: ' + JSON.stringify(JSON.stringify(OtherConfigData)) + ',OutletMobileNos: ' + JSON.stringify(JSON.stringify(OutletMobileNos)) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result) {
                    setTimeout(cuteAlert({
                        type: "success",
                        title: "Save",
                        message: "Record Save Successfully!",
                        buttonText: "Okay"
                    }), 10000);
                }
                else {
                    setTimeout(cuteAlert({
                        type: "error",
                        title: "OOPS",
                        message: "Some Problem encountered. Please contact Administrator!",
                        buttonText: "Okay"
                    }), 10000);
                }
                $("#divLoader").hide();
            },
            error: function (result) {
                console.log(result.responseText)
                $("#divLoader").hide();
            }
        });


        return false;
    }

    </script>
