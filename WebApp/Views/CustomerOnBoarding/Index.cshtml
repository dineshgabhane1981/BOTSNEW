@model WebApp.ViewModel.OnBoardingSalesViewModel
@using System.Configuration;
@using BOTS_BL.Models;
@using BOTS_BL;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_OnBoardingLayout.cshtml";

    var docURL = ConfigurationManager.AppSettings["CustomerDocumentsURL"].ToString();
    var GSTURL = "#";
    var PANURL = "#";
    if (Model.bots_TblGroupMaster != null)
    {
        if (!string.IsNullOrEmpty(Model.bots_TblGroupMaster.GSTDocument))
        {
            GSTURL = docURL + "/" + Model.bots_TblGroupMaster.GroupId + "/" + Model.bots_TblGroupMaster.GSTDocument;
        }

        if (!string.IsNullOrEmpty(Model.bots_TblGroupMaster.PANDocument))
        {
            PANURL = docURL + "/" + Model.bots_TblGroupMaster.GroupId + "/" + Model.bots_TblGroupMaster.PANDocument;
        }
    }
    var userDetails = (CustomerLoginDetail)Session["UserSession"];
    var roleId = userDetails.LoginType;
}
<style>
    .row {
        margin-top: 40px;
        padding: 0 10px;
    }

    .clickable {
        cursor: pointer;
    }

    .panel-heading span {
        margin-top: -20px;
        font-size: 15px;
    }

    .section-heading {
        cursor: pointer;
        text-align: left;
        /*background-color: #022C48;*/
        color: white;
        font-weight: bold;
        padding: 10px;
        border-radius: 5px;
        background-color: #000000 !important;
        background-image: linear-gradient(147deg, #000000 0%, #04619f 74%) !important;
        font-size: 16px;
    }

    .borderClass {
        border: 1px solid red;
    }
    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 5000 !important; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 120px;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    /* Modal Content */
    .modal-content {
        background-color: #fefefe;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 70%;
        border-radius: 25px;
    }

    /* The Close Button */
    .close {
        color: #aaaaaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }

    input:read-only {
        background-color: lightgray;
    }

    .tab1 {
        cursor: pointer;
        padding: 10px 08px;
        margin: 0px 2px;
        background-color: #2f4353 !important;
        display: inline-block;
        color: #fff;
        border-radius: 3px 3px 0px 0px;
        box-shadow: 0 0.5rem 0.8rem #00000080;
        background-color: #000000 !important;
        background-image: linear-gradient(147deg, #000000 0%, #04619f 74%) !important;
    }

    .tabs1 {
        padding-left: 00px;
    }

    .panels1 {
        background: #ffffff;
        box-shadow: 0 1rem 1rem #00000010;
        width: 100%;
        border-radius: 3px;
        overflow: hidden;
    }

    .panel1 {
        display: none;
        animation: fadein .8s;
    }

    .panel-title1 {
        font-size: 1.5em;
        font-weight: bold
    }

    .radio1 {
        display: none;
    }

    #one1:checked ~ .panels1 #one-panel1,
    #two1:checked ~ .panels1 #two-panel1,
    #three1:checked ~ .panels1 #three-panel1,
    #four1:checked ~ .panels1 #four-panel1,
    #five1:checked ~ .panels1 #five-panel1,
    #six1:checked ~ .panels1 #six-panel1,
    #seven1:checked ~ .panels1 #seven-panel1 {
        display: block
    }

    #one1:checked ~ .tabs1 #one-tab1,
    #two1:checked ~ .tabs1 #two-tab1,
    #three1:checked ~ .tabs1 #three-tab1,
    #four1:checked ~ .tabs1 #four-tab1,
    #five1:checked ~ .tabs1 #five-tab1,
    #six1:checked ~ .tabs1 #six-tab1,
    #seven1:checked ~ .tabs1 #seven-tab1 {
        background: #fff !important;
        color: #000;
        border-top: 3px solid #fff;
        border-left: 3px solid #fff;
        border-right: 3px solid #fff;
        font-weight: bold;
        border-top-left-radius: 7px;
        border-top-right-radius: 7px;
    }
</style>
@using (Html.BeginForm("AddCustomer", "CustomerOnBoarding", FormMethod.Post, new { id = "frmaddcustomer", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.LeadId)
    @Html.HiddenFor(model => model.bots_TblGroupMaster.SINo)
    @Html.HiddenFor(model => model.bots_TblGroupMaster.CreatedBy)
    @Html.HiddenFor(model => model.bots_TblDealDetails.SINo)
    @Html.HiddenFor(model => model.bots_TblPaymentDetails.SINo)
    @Html.HiddenFor(model => model.bots_TblGroupMaster.ReferredName, new { @id = "hdnReferredName" })

    @Html.HiddenFor(model => model.bots_TblGroupMaster.GroupId, new { @id = "hdnGroupID" })
    @Html.HiddenFor(model => model.bots_TblGroupMaster.CategoryData, new { @id = "hdnCategoryData" })
    @Html.HiddenFor(model => model.bots_TblGroupMaster.PaymentScheduleData, new { @id = "hdnPaymentScheduleData" })
    @Html.HiddenFor(model => model.bots_TblGroupMaster.OutletData, new { @id = "hdnOutletData" })
    @Html.HiddenFor(model => model.bots_TblGroupMaster.CustomerStatus, new { @id = "hdnCustomerStatus" })
    @Html.HiddenFor(model => model.lstOutlets.Count, new { @id = "hdnOutletCount" })
    <input type="hidden" id="hdnOutletSubmit" value="0" />
    <div class="app-main__inner">

        @if (!string.IsNullOrEmpty(Convert.ToString(TempData["status"])))
        {
            <script>
                    cuteAlert({
                        type: "success",
                        title: "Saved",
                        message: "Data Saved Successfully!",
                        buttonText: "Okay"
                    }).then(() => {
                        @*window.location.href = '@Url.Action("Index", "CustomerManagement")'*@
                    })
            </script>
        }
        @if (!string.IsNullOrEmpty(Convert.ToString(TempData["error"])))
        {
            <script>
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "There is problem in saving Data!",
                    buttonText: "Okay"
                })
            </script>
        }
        @if (Model.bots_TblGroupMaster != null)
        {
            <div class="mb-1 card" style="padding:10px;">
                <div style="float:left;">
                    @if (Model.bots_TblGroupMaster.CustomerStatus == "CS" || Model.bots_TblGroupMaster.CustomerStatus == "CSUpdate")
                    {
                        <div> Current Status -<b> Configuration Inprogress </b></div>
                    }
                    else if (Model.bots_TblGroupMaster.CustomerStatus == "Rejected")
                    {
                        <div> Current Status -<b style="padding-right:50px;"> @Model.bots_TblGroupMaster.CustomerStatus  </b> Reason - <b>@Model.bots_TblGroupMaster.RejectReason</b></div>
                    }
                    else
                    {
                        <div> Current Status -<b> @Model.bots_TblGroupMaster.CustomerStatus </b></div>
                    }

                    @if (Model.bots_TblGroupMaster.UpdatedDate.HasValue)
                    {
                        <div>Last Updated -<b> @Model.bots_TblGroupMaster.UpdatedDate </b></div>
                    }
                    else
                    {
                        <div>Last Updated -<b> @Model.bots_TblGroupMaster.CreatedDate </b></div>
                    }
                </div>

            </div>
        }
        <div class="mb-3 card">
            @if (Model.bots_TblGroupMaster != null)
            {
                if (Model.bots_TblGroupMaster.CustomerStatus == "CS" || Model.bots_TblGroupMaster.CustomerStatus == "CSUpdate" || Model.bots_TblGroupMaster.CustomerStatus == "Rejected" || Model.bots_TblGroupMaster.CustomerStatus == "Approved" || Model.bots_TblGroupMaster.CustomerStatus == "Rejected By Customer")
                {
                    <div class="container-fluid pt-3 pl-3 pr-3 pb-3" id="dvCustomerDetailSection">
                        <div class="col-md-12 section-heading" data-toggle="collapse" data-target="#customerdetailsreadonly">Customer Details</div>
                        <div id="customerdetailsreadonly" class="collapse">
                            @Html.Partial("~/Views/CustomerOnBoarding/_CustomerDetails.cshtml", Model)
                        </div>
                    </div>
                    var Id = 1;
                    <div class="container-fluid pt-3 pl-3 pr-3 pb-3" id="dvOutletSection">
                        <div class="col-md-12 section-heading" data-toggle="collapse" data-target="#outletdetails">Configurations</div>
                        <div id="outletdetails" class="collapse">

                            <input class="radio1" id="one1" name="group" type="radio" checked>
                            <input class="radio1" id="two1" name="group" type="radio">
                            <input class="radio1" id="three1" name="group" type="radio">
                            <input class="radio1" id="four1" name="group" type="radio">
                            @if (Model.bots_TblGroupMaster.IsMWP.HasValue)
                            {
                                if (Model.bots_TblGroupMaster.IsMWP.Value)
                                {
                                    <input class="radio1" id="five1" name="group" type="radio">
                                }
                            }
                            <input class="radio1" id="six1" name="group" type="radio">
                            <input class="radio1" id="seven1" name="group" type="radio">

                            <div class="tabs1">
                                <label class="tab1" id="one-tab1" for="one1"> Outlet Details</label>
                                <label class="tab1" id="two-tab1" for="two1"> Points Rule</label>
                                <label class="tab1" id="three-tab1" for="three1"> Communication</label>
                                <label class="tab1" id="four-tab1" for="four1"> Perpetual Campaigns</label>
                                @if (Model.bots_TblGroupMaster.IsMWP.HasValue)
                                {
                                    if (Model.bots_TblGroupMaster.IsMWP.Value)
                                    {
                                        <label class="tab1" id="five-tab1" for="five1"> Digital Loyalty Card</label>
                                    }
                                }
                                <label class="tab1" id="six-tab1" for="six1"> Velocity Checks</label>
                                <label class="tab1" id="seven-tab1" for="seven1"> Bullk Upload</label>
                            </div>

                            <div class="panels1">
                                <div class="multisteps-form__panel m-3 list-box bg-white panel1" id="one-panel1">
                                    @foreach (var item in Model.lstOutlets)
                                    {

                                        Model.bots_TblOutletMaster = item;
                                        <div>
                                            <b>Brand -  @item.BrandName </b>
                                        </div>

                                        @Html.HiddenFor(model => item.Id, new { @id = "hdnID" + Id })
                                        @Html.HiddenFor(model => item.BrandId, new { @id = "hdnBrandID" + Id })
                                        @Html.HiddenFor(model => item.OutletId, new { @id = "hdnOutletID" + Id })
                                        <div class="row" style="margin: 0;">
                                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                                Outlet Name
                                            </div>
                                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                                @Html.TextBoxFor(model => item.OutletName, new { @class = "input100", @id = "txtOutletName" + Id })
                                            </div>
                                            <div style="float: left; text-align: right; width: 130px; margin-top: 10px;">
                                                Area Name
                                            </div>
                                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                                @Html.TextBoxFor(model => item.AreaName, new { @class = "input100", @id = "txtAreaName" + Id })
                                            </div>
                                        </div>

                                        <div class="row" style="margin: 0;">
                                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                                Authorised Person
                                            </div>
                                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                                @Html.TextBoxFor(model => item.AuthorisedPerson, new { @class = "input100", @id = "txtAuthorisedPerson" + Id })
                                            </div>
                                            <div style="float: left; text-align: right; width: 130px; margin-top: 10px;">
                                                Registered Mobile No
                                            </div>
                                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                                @Html.TextBoxFor(model => item.RegisterMobileNo, new { @class = "input100", @id = "txtRegisterMobileNo" + Id })
                                            </div>
                                        </div>

                                        <div class="row" style="margin: 0;">
                                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                                Registered Email
                                            </div>
                                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                                @Html.TextBoxFor(model => item.RegisterEmail, new { @class = "input100", @id = "txtRegisterEmail" + Id })
                                            </div>
                                            <div style="float: left; text-align: right; width: 130px; margin-top: 10px;">
                                                Address
                                            </div>
                                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                                @Html.TextBoxFor(model => item.Address, new { @class = "input100", @id = "txtAddress" + Id })
                                            </div>
                                        </div>

                                        <div class="row" style="margin: 0;">
                                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                                Geo Latitude
                                            </div>
                                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                                @Html.TextBoxFor(model => item.Latitude, new { @class = "input100", @id = "txtLatitude" + Id })
                                            </div>
                                            <div style="float: left; text-align: right; width: 130px; margin-top: 10px;">
                                                Geo Longitude
                                            </div>
                                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                                @Html.TextBoxFor(model => item.Longitude, new { @class = "input100", @id = "txtLongitude" + Id })
                                            </div>
                                        </div>
                                        <div class="row" style="margin: 0;">
                                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                                State
                                            </div>
                                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                                @Html.DropDownListFor(model => model.bots_TblOutletMaster.State, new SelectList(Model.lstStates, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlState" + Id })
                                            </div>
                                            <div style="float: left; text-align: right; width: 130px; margin-top: 10px;">
                                                City
                                            </div>
                                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                                @Html.DropDownListFor(model => model.bots_TblOutletMaster.City, new SelectList(Model.lstCity, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlCity" + Id })

                                            </div>
                                        </div>
                                        <div class="row" style="margin: 0;">
                                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                                Pincode
                                            </div>
                                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                                @Html.TextBoxFor(model => item.PinCode, new { @class = "input100", @id = "txtPinCode" + Id })
                                            </div>
                                        </div>

                                        <hr />

                                        Id++;
                                    }

                                    <button type="button" id="btnCustomerSubmit" class="btn btn-primary pull-right m-3" onclick="return CheckOutletData('CSUpdate');" style="margin-right:10px;">Save</button>

                                    @Html.Partial("~/Views/CustomerOnBoarding/_OutletDetails.cshtml", Model)
                                </div>

                                <div class="multisteps-form__panel m-3 list-box bg-white panel1" id="two-panel1">
                                    @Html.Partial("~/Views/CustomerOnBoarding/_PointsRuleNew.cshtml", Model)
                                </div>
                                <div class="multisteps-form__panel m-3 list-box bg-white panel1" id="three-panel1">
                                    @Html.Partial("~/Views/CustomerOnBoarding/_Communications.cshtml")
                                </div>
                                <div class="multisteps-form__panel m-3 list-box bg-white panel1" id="four-panel1">
                                    @Html.Partial("~/Views/CustomerOnBoarding/_PerpetualCampaigns.cshtml", Model)
                                </div>
                                @if (Model.bots_TblGroupMaster.IsMWP.HasValue)
                                {
                                    if (Model.bots_TblGroupMaster.IsMWP.Value)
                                    {
                                        <div class="multisteps-form__panel m-3 list-box bg-white panel1" id="five-panel1">
                                            @Html.Partial("~/Views/CustomerOnBoarding/_DLCLink.cshtml")
                                        </div>
                                    }
                                }
                                <div class="multisteps-form__panel m-3 list-box bg-white panel1" id="six-panel1">
                                    @Html.Partial("~/Views/CustomerOnBoarding/_VelocityChecks.cshtml")
                                </div>
                                <div class="multisteps-form__panel m-3 list-box bg-white panel1" id="seven-panel1">
                                    @Html.Partial("~/Views/CustomerOnBoarding/_BulkUpload.cshtml")
                                </div>

                            </div>
                        </div>
                    </div>
                }
                else
                {

                }
            }
            @if (Model.bots_TblGroupMaster == null || (Model.bots_TblGroupMaster != null && Model.bots_TblGroupMaster.CustomerStatus == "Draft"))
            {
                <div class="container-fluid pt-3 pl-3 pr-3 pb-3">
                    <div class="col-md-12 section-heading" data-toggle="collapse" data-target="#custdetails">Customer Detail</div>
                    <div id="custdetails" class="collapse show">
                        <div class="row" style="margin: 0; padding-top:10px;">
                            <div style="float:left;text-align:right;width:100px;">
                                Legal Name
                            </div>
                            <div class="col-sm-4" style="float:left;">
                                @Html.TextBoxFor(model => model.bots_TblGroupMaster.GroupName, new { @class = "input100", @id = "txtGroupName", tabindex = 1 })
                            </div>
                            <div style="float:left;text-align:right;width:115px;">
                                Owner’s Name
                            </div>
                            <div class="col-sm-4" style="float:left;">
                                @Html.TextBoxFor(model => model.bots_TblGroupMaster.OwnerName, new { @class = "input100", @id = "txtOwnerName", tabindex = 2 })
                            </div>
                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float:left;text-align:right;width:100px;">
                                Owner’s Mobile
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblGroupMaster.OwnerMobileNo, new { @class = "input100", @type = "number", @id = "txtOwnerMobileNo", tabindex = 3 })
                            </div>
                            <div style="float:left;text-align:right;width:115px;">
                                Owner’s Email
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblGroupMaster.OwnerEmailId, new { @class = "input100", @id = "txtOwnerEmailId", tabindex = 4 })
                            </div>
                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float:left;text-align:right;width:100px;">
                                Upload GST
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblGroupMaster.GSTDocumentFile, new { type = "file", @id = "fileGSTDocumentFile", tabindex = "5" })
                                <br />
                                @Html.HiddenFor(model => model.bots_TblGroupMaster.GSTDocument)
                                @if (GSTURL != "#")
                                {
                                    <a href="@GSTURL" target="_blank">GST Document</a>
                                }
                            </div>
                            <div style="float:left;text-align:right;width:115px;">
                                Upload PAN
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblGroupMaster.PANDocumentFile, new { type = "file", @id = "filePANDocumentFile", tabindex = "6" })
                                <br />
                                @Html.HiddenFor(model => model.bots_TblGroupMaster.PANDocument)
                                @if (PANURL != "#")
                                {
                                    <a href="@PANURL" target="_blank">PAN Document</a>
                                }
                            </div>
                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float:left;text-align:right;width:100px;">
                                City
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.DropDownListFor(model => model.bots_TblGroupMaster.City, new SelectList(Model.lstCity, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlCity", tabindex = 10 })
                            </div>
                            <div style="float:left;text-align:right;width:115px;">
                                Other Person Name
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblGroupMaster.AnyOtherName, new { @class = "input100", tabindex = 8 })
                            </div>
                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float:left;text-align:right;width:100px;">
                                Mobile No
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblGroupMaster.AlternateMobileNo, new { @class = "input100", tabindex = 9 })
                            </div>
                            <div style="float:left;text-align:right;width:115px;">
                                Email
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblGroupMaster.AlternateEmailId, new { @class = "input100", tabindex = 10 })
                            </div>
                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float:left;text-align:right;width:100px;">
                                No of Brands
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblGroupMaster.NoOfRetailCategory, new { @class = "input100", @id = "txtNoOfRetailCategory", tabindex = 11 })
                            </div>
                            <div style="float:left;text-align:right;width:115px;margin-top:10px;">
                                Key Account
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;" id="dvIsKeyAccount">
                                @Html.RadioButtonFor(model => model.bots_TblGroupMaster.IsKeyAccount, "1", new { @id = "IsKeyAccount1" }) A
                                @Html.RadioButtonFor(model => model.bots_TblGroupMaster.IsKeyAccount, "2", new { @id = "IsKeyAccount2" }) B
                                @Html.RadioButtonFor(model => model.bots_TblGroupMaster.IsKeyAccount, "3", new { @id = "IsKeyAccount3" }) C
                            </div>
                        </div>

                        <div class="row" style="margin: 0;margin-top:20px;display:none;border:1px solid grey;border-radius:5px;" id="dvRetailCategory">
                            <div class="col-sm-3" style="float:left;">
                                <br /><br /><span>Retail Category</span><br /><br />
                                <span>Retail / Brand Name</span><br /><br />
                                <span>Total Outlets</span><br /><br />
                                <span>Enrolled Outlets</span><br /><br />
                                <span>BO Product </span><br /><br />
                                <span>Billing Partner</span><br /><br />
                                <span>Billing Product </span><br /><br />
                            </div>
                            <div class="col-sm-2" style="float:left;margin-top:10px;" id="dvCategory1">
                                <span style="padding-left:10px;font-weight:bold;">Brand 1</span>
                                <br />
                                @Html.DropDownListFor(model => model.bots_TblRetailMaster.CategoryId, new SelectList(Model.lstRetailCategory, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @id = "ddlCategory1" })
                                @Html.TextBoxFor(model => model.bots_TblRetailMaster.BrandName, new { @class = "input40", @id = "txtBrandName1" })
                                @Html.TextBoxFor(model => model.bots_TblRetailMaster.NoOfOutlets, new { @class = "input40", @id = "txtNoOfOutlets1" })
                                @Html.TextBoxFor(model => model.bots_TblRetailMaster.NoOfEnrolled, new { @class = "input40", @id = "txtNoOfEnrolled1" })
                                @Html.DropDownListFor(model => model.bots_TblRetailMaster.BOProduct, new SelectList(Model.BOProducts(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @id = "ddlBOProduct1" })
                                @Html.DropDownListFor(model => model.bots_TblRetailMaster.BillingPartner, new SelectList(Model.lstBillingPartner, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @id = "ddlBillingPartner1" })

                                @Html.DropDownListFor(model => model.bots_TblRetailMaster.BOProduct, new SelectList(Model.lstAllGroups, "Value", "Text"), htmlAttributes: new { @class = "input40", @id = "ddlBPProduct1" })
                            </div>
                            <div class="col-sm-2" style="float:left;margin-top:10px;" id="dvCategory2">
                                <span style="padding-left: 10px; font-weight: bold;">Brand 2</span>
                                <br />
                                @Html.DropDownListFor(model => model.bots_TblRetailMaster.CategoryId, new SelectList(Model.lstRetailCategory, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @id = "ddlCategory2" })
                                @Html.TextBoxFor(model => model.bots_TblRetailMaster.BrandName, new { @class = "input40", @id = "txtBrandName2" })
                                @Html.TextBoxFor(model => model.bots_TblRetailMaster.NoOfOutlets, new { @class = "input40", @id = "txtNoOfOutlets2" })
                                @Html.TextBoxFor(model => model.bots_TblRetailMaster.NoOfEnrolled, new { @class = "input40", @id = "txtNoOfEnrolled2" })
                                @Html.DropDownListFor(model => model.bots_TblRetailMaster.BOProduct, new SelectList(Model.BOProducts(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @id = "ddlBOProduct2" })
                                @Html.DropDownListFor(model => model.bots_TblRetailMaster.BillingPartner, new SelectList(Model.lstBillingPartner, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @id = "ddlBillingPartner2" })
                                @Html.DropDownListFor(model => model.bots_TblRetailMaster.BOProduct, new SelectList(Model.lstAllGroups, "Value", "Text"), htmlAttributes: new { @class = "input40", @id = "ddlBPProduct2" })
                            </div>
                            <div class="col-sm-2" style="float:left;margin-top:10px;" id="dvCategory3">
                                <span style="padding-left: 10px; font-weight: bold;">Brand 3</span>
                                <br />
                                @Html.DropDownListFor(model => model.bots_TblRetailMaster.CategoryId, new SelectList(Model.lstRetailCategory, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @id = "ddlCategory3" })
                                @Html.TextBoxFor(model => model.bots_TblRetailMaster.BrandName, new { @class = "input40", @id = "txtBrandName3" })
                                @Html.TextBoxFor(model => model.bots_TblRetailMaster.NoOfOutlets, new { @class = "input40", @id = "txtNoOfOutlets3" })
                                @Html.TextBoxFor(model => model.bots_TblRetailMaster.NoOfEnrolled, new { @class = "input40", @id = "txtNoOfEnrolled3" })
                                @Html.DropDownListFor(model => model.bots_TblRetailMaster.BOProduct, new SelectList(Model.BOProducts(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @id = "ddlBOProduct3" })
                                @Html.DropDownListFor(model => model.bots_TblRetailMaster.BillingPartner, new SelectList(Model.lstBillingPartner, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @id = "ddlBillingPartner3" })
                                @Html.DropDownListFor(model => model.bots_TblRetailMaster.BOProduct, new SelectList(Model.lstAllGroups, "Value", "Text"), htmlAttributes: new { @class = "input40", @id = "ddlBPProduct3" })
                            </div>
                            <div class="col-sm-2" style="float:left;margin-top:10px;" id="dvCategory4">
                                <span style="padding-left: 10px; font-weight: bold;">Brand 4</span>
                                <br />
                                @Html.DropDownListFor(model => model.bots_TblRetailMaster.CategoryId, new SelectList(Model.lstRetailCategory, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @id = "ddlCategory4" })
                                @Html.TextBoxFor(model => model.bots_TblRetailMaster.BrandName, new { @class = "input40", @id = "txtBrandName4" })
                                @Html.TextBoxFor(model => model.bots_TblRetailMaster.NoOfOutlets, new { @class = "input40", @id = "txtNoOfOutlets4" })
                                @Html.TextBoxFor(model => model.bots_TblRetailMaster.NoOfEnrolled, new { @class = "input40", @id = "txtNoOfEnrolled4" })
                                @Html.DropDownListFor(model => model.bots_TblRetailMaster.BOProduct, new SelectList(Model.BOProducts(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @id = "ddlBOProduct4" })
                                @Html.DropDownListFor(model => model.bots_TblRetailMaster.BillingPartner, new SelectList(Model.lstBillingPartner, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @id = "ddlBillingPartner4" })
                                @Html.DropDownListFor(model => model.bots_TblRetailMaster.BOProduct, new SelectList(Model.lstAllGroups, "Value", "Text"), htmlAttributes: new { @class = "input40", @id = "ddlBPProduct4" })
                            </div>
                        </div>

                        <div class="row" style="margin: 0;">
                            <div style="float:left;text-align:right;width:100px;margin-top:10px;">
                                DLC
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;" id="dvIsMWP">
                                @Html.RadioButtonFor(model => model.bots_TblGroupMaster.IsMWP, true, new { @id = "IsMWPYes" }) Yes
                                @Html.RadioButtonFor(model => model.bots_TblGroupMaster.IsMWP, false, new { @id = "IsMWPNo" }) No
                            </div>
                            <div style="float:left;text-align:right;width:100px;margin-top:10px;">
                                Expected Transaction
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;" id="dvIsWhatsApp">
                                @Html.TextBoxFor(model => model.bots_TblGroupMaster.ExpectedTransaction, new { @class = "input100", @id = "txtNoOfExpectedTransaction" })
                            </div>
                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float:left;text-align:right;width:100px;margin-top:10px;">
                                Whataspp Int
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;" id="dvIsWhatsApp">
                                @Html.RadioButtonFor(model => model.bots_TblGroupMaster.IsWhatsApp, true, new { @id = "IsWhatsAppYes" }) Yes
                                @Html.RadioButtonFor(model => model.bots_TblGroupMaster.IsWhatsApp, false, new { @id = "IsWhatsAppNo" }) No
                            </div>
                            <div style="float:left;text-align:right;width:100px;margin-top:10px;">
                                Existing Loyalty
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;" id="dvIsWhatsApp">
                                @Html.CheckBoxFor(model => model.bots_TblGroupMaster.IsExistingLoyalty)

                            </div>

                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                WA Free Msgs
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblGroupMaster.NoOfFreeWhatsAppMsg, new { @class = "input100", @readonly = "readonly", @id = "txtNoOfFreeWhatsAppMsg" })
                            </div>
                            <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                                WA Paid Msgs
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblGroupMaster.NoOfPaidWhatsAppMsg, new { @class = "input100", @readonly = "readonly", @id = "txtNoOfPaidWhatsAppMsg" })
                            </div>
                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                SMS Free Msgs
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblGroupMaster.NoOfFreeSMS, new { @class = "input100", @id = "txtNoOfFreeSMS" })
                            </div>
                            <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                                SMS Paid Msgs
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblGroupMaster.NoOfPaidSMS, new { @class = "input100", @id = "txtNoOfPaidSMS" })
                            </div>
                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                Mobile App
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.DropDownListFor(model => model.bots_TblGroupMaster.IsMobileApp, new SelectList(Model.YesNo(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlIsMobileApp" })
                            </div>
                            <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                                Mobile App Description
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblGroupMaster.MobileAppDescription, new { @class = "input100", @readonly = "readonly", @id = "txtMobileAppDescription" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="container-fluid pt-3 pl-3 pr-3 pb-3">
                    <div class="col-md-12 section-heading" data-toggle="collapse" data-target="#assignmentdetails">Assignment Details</div>
                    <div id="assignmentdetails" class="collapse">
                        <div class="row" style="margin: 0;">
                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                Sourced By
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.DropDownListFor(model => model.bots_TblGroupMaster.SourcedBy, new SelectList(Model.lstSourcedBy, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlSourcedBy" })
                            </div>
                            <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                                Assigned CS
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.DropDownListFor(model => model.bots_TblGroupMaster.AssignedCS, new SelectList(Model.lstRMAssigned, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlAssignedCS" })
                            </div>
                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                Source Type
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.DropDownListFor(model => model.bots_TblGroupMaster.Referredby, new SelectList(Model.lstRefferedCategory, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlReferredby" })
                            </div>
                            <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                                Referred Name
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.DropDownListFor(model => model.bots_TblGroupMaster.ReferredName, new SelectList(Model.lstAllGroups, "Value", "Text"), htmlAttributes: new { @class = "input100", @id = "ddlReferredName" })
                                @Html.TextBoxFor(model => model.bots_TblGroupMaster.ReferredNameNew, new { @class = "input100", style = "display: none;", @id = "txtReferredName" })
                            </div>
                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                Comments
                            </div>
                            <div class="col-sm-8" style="float:left;margin-top:10px;">
                                @Html.TextAreaFor(model => model.bots_TblGroupMaster.Comments, new { @class = "input100", @id = "txtComments" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="container-fluid pt-3 pl-3 pr-3 pb-3">
                    <div class="col-md-12 section-heading" data-toggle="collapse" data-target="#dealdetails">Deal Details</div>
                    <div id="dealdetails" class="collapse">
                        <div class="row" style="margin: 0;">
                            <div style="float: left; text-align: left; width: 100px; margin-top: 10px;">
                                Sales Model Type
                            </div>
                            <div class="col-sm-10" style="float:left;margin-top:10px;" id="dvSalesModelType">
                                @Html.RadioButtonFor(model => model.bots_TblGroupMaster.SalesModelType, "Old Model", new { @id = "OldModel", Checked = "checked" }) Old Model
                                @Html.RadioButtonFor(model => model.bots_TblGroupMaster.SalesModelType, "New Model", new { @id = "NewModel" }) New Model
                            </div>
                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                Loyalty Fees
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblDealDetails.LoyaltyFees, new { @class = "input100", @id = "txtLoyaltyFees" })
                            </div>
                            <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                                ASF
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblDealDetails.ASF, new { @class = "input100", @id = "txtASF", @readonly = "readonly" })
                            </div>

                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                ASF Percentage
                            </div>
                            <div class="col-sm-4" style="float:right;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblDealDetails.ASFPercentage, new { @class = "input100", @id = "txtASFPercentage", @readonly = "readonly" })
                            </div>
                            <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                                WA Paid Pack Fees
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblDealDetails.WAPaidPackFees, new { @class = "input100", @id = "txtWAPaidPackFees" })
                            </div>
                        </div>


                        <div class="row" style="margin: 0;">
                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                SMS Paid Pack Fees
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblDealDetails.SMSPaidPackFees, new { @class = "input100", @id = "txtSMSPaidPackFees" })
                            </div>
                            <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                                Ecomm Integration
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblDealDetails.EcommIntegration, new { @class = "input100", @readonly = "readonly", @id = "txtEcommIntegration" })
                            </div>
                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                Any Other Fees
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblDealDetails.AnyOtherFees, new { @class = "input100", @id = "txtAnyOtherFees" })
                            </div>
                            <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                                Description
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblDealDetails.AnyOtherFeesDesc, new { @class = "input100", @id = "txtAnyOtherFeesDesc" })
                            </div>
                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;font-weight:bold;">
                                Total Fees (A)
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblDealDetails.TotalFeesA, new { @class = "input100", @readonly = "readonly", @id = "txtTotalFeesA" })
                            </div>
                            <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                                Payment Frequency
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.DropDownListFor(model => model.bots_TblDealDetails.PaymentFrequency, new SelectList(Model.PaymentFrequency(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlPaymentFrequency" })
                            </div>

                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                GST
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;" id="dvIsGST">
                                @Html.RadioButtonFor(model => model.bots_TblDealDetails.GST, "1", new { @id = "IsCGST" }) CGST/SGST
                                @Html.RadioButtonFor(model => model.bots_TblDealDetails.GST, "2", new { @id = "IsIGST" }) IGST
                                @Html.RadioButtonFor(model => model.bots_TblDealDetails.GST, "0", new { @id = "IsGSTNo" }) No
                                @Html.TextBoxFor(model => model.bots_TblDealDetails.GSTRate, new { @class = "input40", @id = "txtGSTRate", style = "display: none;" })
                            </div>
                            <div style="float: left; text-align: right; width: 115px; margin-top: 10px; font-weight: bold;">
                                Total Fees (B)
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblDealDetails.TotalFeesB, new { @class = "input100", @readonly = "readonly", @id = "txtTotalFeesB" })
                            </div>
                        </div>
                        <div class="row" style="margin: 0;display:none;" id="dvAdvanceAmount">
                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                Advance Amount
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblDealDetails.AdvanceAmount, new { @class = "input100", @id = "txtAdvanceAmount" })
                            </div>

                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                Payment Mode
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.DropDownListFor(model => model.bots_TblDealDetails.PaymentMode, new SelectList(Model.PaymentType(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlPaymentMode" })
                            </div>
                            <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                                Payment Status
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.DropDownListFor(model => model.bots_TblDealDetails.PaymentStatus, new SelectList(Model.PaymentStatus(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlPaymentStatus" })
                            </div>
                        </div>
                        <div class="row" style="margin: 0;">
                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                Amount Received
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblDealDetails.AmountReceived, new { @class = "input100", @id = "txtAmountReceived" })
                            </div>
                            <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                                TDS Deducted
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblDealDetails.TDSDeducted, new { @class = "input100", @readonly = "readonly", @id = "txtTDSDeducted" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="container-fluid pt-3 pl-3 pr-3 pb-3" id="dvPaymentSection" style="display:none;">
                    <div class="col-md-12 section-heading" data-toggle="collapse" data-target="#paymentmodule">Payment Schedule</div>
                    <div id="paymentmodule" class="collapse">

                        <div class="row" style="margin: 0;">
                            <div style="float: left; text-align: right; width: 100px; margin-top: 10px;">
                                Amount Balance
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblPaymentDetails.AmountBalance, new { @class = "input100", @readonly = "readonly", @id = "txtAmountBalance" })
                            </div>
                            <div style="float: left; text-align: right; width: 115px; margin-top: 10px;">
                                No of Installments
                            </div>
                            <div class="col-sm-4" style="float:left;margin-top:10px;">
                                @Html.TextBoxFor(model => model.bots_TblPaymentDetails.NoOfInstallments, new { @class = "input100", @id = "txtNoOfInstallments" })
                            </div>
                        </div>

                        <div class="row" style="margin: 0;margin-top:20px;display:none;border:1px solid grey;border-radius:5px;" id="dvInstallmentsDetails">
                            <div class="col-sm-3" style="float:left;">
                                <br /><br /><span>Subsequent Payment Date </span><br /><br />
                                <span>Subsequent Payment (Rs.)</span><br /><br />
                            </div>
                            <div class="col-sm-2" style="float:left;margin-top:10px;" id="dvInstallment1">
                                <span style="padding-left:10px;font-weight:bold;">Installment 1</span>
                                <br />
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.PaymentDate, new { @class = "input40", @id = "txtPaymentDate1" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.PaymentAmount, new { @class = "input40", @id = "txtPaymentAmount1" })
                            </div>
                            <div class="col-sm-2" style="float:left;margin-top:10px;" id="dvInstallment2">
                                <span style="padding-left: 10px; font-weight: bold;">Installment 2</span>
                                <br />
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.PaymentDate, new { @class = "input40", @id = "txtPaymentDate2" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.PaymentAmount, new { @class = "input40", @id = "txtPaymentAmount2" })
                            </div>
                            <div class="col-sm-2" style="float:left;margin-top:10px;" id="dvInstallment3">
                                <span style="padding-left: 10px; font-weight: bold;">Installment 3</span>
                                <br />
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.PaymentDate, new { @class = "input40", @id = "txtPaymentDate3" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.PaymentAmount, new { @class = "input40", @id = "txtPaymentAmount3" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="container-fluid pt-3 pl-3 pr-3 pb-3" id="dvPaymentDetailsSection" style="display:none;">
                    <div class="col-md-12 section-heading" data-toggle="collapse" data-target="#updatepaymentdetails">Update Payment Details</div>
                    <div id="updatepaymentdetails" class="collapse">
                        <div class="row" style="margin: 0;margin-top:20px;display:block;border:1px solid grey;border-radius:5px;" id="dvUpdatePaymentDetails">
                            <div class="col-sm-3" style="float:left;">
                                <br /><br /><span>Balance Fees Pending </span><br /><br />
                                <span>Installments </span><br /><br />
                                <span>Subsequent Payment Date </span><br /><br />
                                <span>Subsequent Payment Rs.  </span><br /><br />
                                <span>Paid Amount (Rs.)  </span><br /><br />
                                <span>Payment Type  </span><br /><br />
                                <span>Cheque No  </span><br /><br />
                                <span>Bank  </span><br /><br />
                            </div>
                            <div class="col-sm-2" style="float:left;margin-top:10px;" id="dvInstallment1">
                                <span style="padding-left:10px;font-weight:bold;">Payment 1</span>
                                <br />
                                <span id="spnBalanceFeePending1"></span><br /><br />
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.Installment, new { @class = "input40", @id = "txtInstallment1" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.PaymentDate, new { @class = "input40", @id = "txtIPaymentDate1" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.PaymentAmount, new { @class = "input40", @id = "txtIPaymentAmount1" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.PaidAmount, new { @class = "input40", @id = "txtIPaidAmount1" })
                                @Html.DropDownListFor(model => model.bots_TblInstallmentDetails.PaymentType, new SelectList(Model.PaymentType(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @id = "ddlIPaymentType1" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.ChequeNo, new { @class = "input40", @id = "txtIChequeNo1" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.Bank, new { @class = "input40", @id = "txtIBank1" })
                            </div>
                            <div class="col-sm-2" style="float:left;margin-top:10px;" id="dvInstallment2">
                                <span style="padding-left: 10px; font-weight: bold;">Payment 2</span>
                                <br />
                                <span id="spnBalanceFeePending2"></span><br /><br />
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.Installment, new { @class = "input40", @id = "txtInstallment2" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.PaymentDate, new { @class = "input40", @id = "txtIPaymentDate2" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.PaymentAmount, new { @class = "input40", @id = "txtIPaymentAmount2" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.PaidAmount, new { @class = "input40", @id = "txtIPaidAmount2" })
                                @Html.DropDownListFor(model => model.bots_TblInstallmentDetails.PaymentType, new SelectList(Model.PaymentType(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @id = "ddlIPaymentType2" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.ChequeNo, new { @class = "input40", @id = "txtIChequeNo2" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.Bank, new { @class = "input40", @id = "txtIBank2" })
                            </div>
                            <div class="col-sm-2" style="float:left;margin-top:10px;" id="dvInstallment3">
                                <span style="padding-left: 10px; font-weight: bold;">Payment 3</span>
                                <br />
                                <span id="spnBalanceFeePending3"></span><br /><br />
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.Installment, new { @class = "input40", @id = "txtInstallment2" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.PaymentDate, new { @class = "input40", @id = "txtIPaymentDate2" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.PaymentAmount, new { @class = "input40", @id = "txtIPaymentAmount2" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.PaidAmount, new { @class = "input40", @id = "txtIPaidAmount2" })
                                @Html.DropDownListFor(model => model.bots_TblInstallmentDetails.PaymentType, new SelectList(Model.PaymentType(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @id = "ddlIPaymentType2" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.ChequeNo, new { @class = "input40", @id = "txtIChequeNo2" })
                                @Html.TextBoxFor(model => model.bots_TblInstallmentDetails.Bank, new { @class = "input40", @id = "txtIBank2" })
                            </div>
                        </div>
                    </div>
                </div>
            }

            <div class="container-fluid pt-3 pl-3 pr-3 pb-3">

                @if (Model.bots_TblGroupMaster == null)
                {
                    <button type="button" id="btnCustomerSubmit" class="btn btn-primary pull-right" onclick="return CheckValidationAndSubmit('CS');" style="margin-right:10px;">Submit</button>
                    <button type="submit" id="btnCustomerSave" class="btn btn-primary pull-right" onclick="return CheckValidationAndSubmit();" style="margin-right:10px;">Save</button>

                }
                @if (Model.bots_TblGroupMaster != null)
                {
                    if (Model.bots_TblGroupMaster.CustomerStatus != "CS" && Model.bots_TblGroupMaster.CustomerStatus != "CSUpdate" && Model.bots_TblGroupMaster.CustomerStatus != "Rejected" && Model.bots_TblGroupMaster.CustomerStatus != "Rejected By Customer")
                    {
                        <button type="button" id="btnCustomerSubmit" class="btn btn-primary pull-right" onclick="return CheckValidationAndSubmit('CS');" style="margin-right:10px;">Submit</button>
                        <button type="submit" id="btnCustomerSave" class="btn btn-primary pull-right" onclick="return CheckValidationAndSubmit();" style="margin-right:10px;">Save</button>
                    }
                    else
                    {
                        <button type="submit" id="btnCustomerSave" class="btn btn-primary pull-right" onclick="return CheckOutletData('CSUpdate');" style="margin-right:10px;display:none;">Save</button>
                        if (Model.bots_TblGroupMaster.CustomerStatus != "Submit For Approval")
                        {
                            if (roleId == "1" || roleId == "7" || roleId == "6")
                            {
                                <button type="button" id="btnSendForApproval" class="btn btn-primary pull-right" onclick="return SendForApproval();" style="margin-right:10px;font-weight:bold;">Send For Approval</button>
                            }
                        }
                    }
                }
            </div>
        </div>
    </div>

}
<script>
    $(document).ready(function () {
        var today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());
        $("#txtPaymentDate1").datepicker({
            dateFormat: "yy-mm-dd",
            minDate: today,
        });
        $("#txtPaymentDate2").datepicker({
            dateFormat: "yy-mm-dd",
            minDate: today,
        });
        $("#txtPaymentDate3").datepicker({
            dateFormat: "yy-mm-dd",
            minDate: today,
        });
        $("#txtNoOfRetailCategory").focusout(function () {
            ShowRetailCategory();
        });

        $("#txtNoOfInstallments").focusout(function () {
            ShowInstallments();
        });
        RemoveRequiredBorder();
        RemoveRequiredBorderCategory();
        RemoveRequiredBorderAssignment();
        RemoveRequiredBorderDeal();
        //var outletCount = $("#hdnOutletCount").val();

            RemoveRequiredOutletDetails();

        CheckInstallmentAmount();


        $("#btnPopupClose").on("click", function () {
            $("#hdnCustomerStatus").val("");
            $("#myModal").hide(1000);
        });
        if ($("#hdnGroupID").val() != "") {
            LoadEditData();
        }

        if ($("#hdnCustomerStatus").val() == "CS" || $("#hdnCustomerStatus").val() == "CSUpdate" || $("#hdnCustomerStatus").val() == "Rejected" || $("#hdnCustomerStatus").val() == "Approved" || $("#hdnCustomerStatus").val() == "Rejected By Customer") {
            ShowHideSection("outletdetails");
        }

    });
    function ShowRetailCategory() {
        if ($("#txtNoOfRetailCategory").val() > 4 || $("#txtNoOfRetailCategory").val() == 0) {
            if ($("#txtNoOfRetailCategory").val() == "") {
                $("#dvRetailCategory").hide();
            }
            else {
                cuteAlert({
                    type: "error",
                    title: "Oops..",
                    message: "Retail Category can not be 0 or greater than 4",
                    buttonText: "Okay"
                })
            }
        }
        else {
            $("#dvRetailCategory").show();
            if ($("#txtNoOfRetailCategory").val() == 1) {
                $("#dvCategory1").show();
                $("#dvCategory2").hide();
                $("#dvCategory3").hide();
                $("#dvCategory4").hide();
            }
            if ($("#txtNoOfRetailCategory").val() == 2) {
                $("#dvCategory1").show();
                $("#dvCategory2").show();
                $("#dvCategory3").hide();
                $("#dvCategory4").hide();
            }
            if ($("#txtNoOfRetailCategory").val() == 3) {
                $("#dvCategory1").show();
                $("#dvCategory2").show();
                $("#dvCategory3").show();
                $("#dvCategory4").hide();
            }
            if ($("#txtNoOfRetailCategory").val() == 4) {
                $("#dvCategory1").show();
                $("#dvCategory2").show();
                $("#dvCategory3").show();
                $("#dvCategory4").show();
            }
        }
    }

    function ShowInstallments() {
        if ($("#txtAmountBalance").val() != "" && $("#txtAmountBalance").val() > 0) {
            if ($("#txtNoOfInstallments").val() > 3 || $("#txtNoOfInstallments").val() == 0) {
                $("#dvInstallmentsDetails").hide();
                $('#txtNoOfInstallments').css('border-color', 'red');
                cuteAlert({
                    type: "error",
                    title: "Oops..",
                    message: "Number of Installments can not be 0 or greater than 3",
                    buttonText: "Okay"
                })

            }
            else {
                $('#txtNoOfInstallments').css('border-color', '');
                $("#dvInstallmentsDetails").show();
                if ($("#txtNoOfInstallments").val() == 1) {
                    $("#dvInstallment1").show();
                    $("#dvInstallment2").hide();
                    $("#dvInstallment3").hide();

                }
                if ($("#txtNoOfInstallments").val() == 2) {
                    $("#dvInstallment1").show();
                    $("#dvInstallment2").show();
                    $("#dvInstallment3").hide();

                }
                if ($("#txtNoOfInstallments").val() == 3) {
                    $("#dvInstallment1").show();
                    $("#dvInstallment2").show();
                    $("#dvInstallment3").show();

                }
            }
        }
    }

    function ShowHideSection(SectionName) {
        $("#custdetails").removeClass("show");
        $("#assignmentdetails").removeClass("show");
        $("#dealdetails").removeClass("show");
        $("#paymentmodule").removeClass("show");
        $("#updatepaymentdetails").removeClass("show");
        $("#outletdetails").removeClass("show");
        $("#" + SectionName).addClass("show");
    }

    function RemoveRequiredBorder() {
        $("#txtGroupName").focusout(function () {
            if ($("#txtGroupName").val() != "") {
                $('#txtGroupName').css('border-color', '');
            }
            else {
                $('#txtGroupName').css('border-color', 'red');
            }
        });
        $("#txtOwnerName").focusout(function () {
            if ($("#txtOwnerName").val() != "") {
                $('#txtOwnerName').css('border-color', '');
            }
            else {
                $('#txtOwnerName').css('border-color', 'red');
            }
        });
        $("#txtOwnerMobileNo").focusout(function () {
            if ($("#txtOwnerMobileNo").val() != "") {
                $('#txtOwnerMobileNo').css('border-color', '');
            }
            else {
                $('#txtOwnerMobileNo').css('border-color', 'red');
            }
        });
        $("#txtOwnerEmailId").focusout(function () {
            if ($("#txtOwnerEmailId").val() != "") {
                $('#txtOwnerEmailId').css('border-color', '');
            }
            else {
                $('#txtOwnerEmailId').css('border-color', 'red');
            }
        });
        $("#fileGSTDocumentFile").focusout(function () {
            if ($("#fileGSTDocumentFile").val() != "") {
            }
            else {
                $('#fileGSTDocumentFile').removeClass('borderClass');
            }
        });
        $("#filePANDocumentFile").focusout(function () {
            if ($("#filePANDocumentFile").val() != "") {
            }
            else {
                $('#filePANDocumentFile').removeClass('borderClass');
            }
        });
        $('#ddlCity').change(function () {
            var selectedVal = $('#ddlCity option:selected').attr('value');
            if (selectedVal == "") {
                $('#ddlCity').css('border-color', 'red');
            }
            else {
                $('#ddlCity').css('border-color', '');
            }
        });

        $("#txtNoOfRetailCategory").focusout(function () {
            if ($("#txtNoOfRetailCategory").val() != "") {
                $('#txtNoOfRetailCategory').css('border-color', '');
            }
            else {
                $('#txtNoOfRetailCategory').css('border-color', 'red');
            }
        });

        $('#IsMWPYes').on('change', function () {
            $('#dvIsMWP').css('border', '');
        });
        $('#IsMWPNo').on('change', function () {
            $('#dvIsMWP').css('border', '');
        });
        $('#IsWhatsAppYes').on('change', function () {
            if ($("#IsWhatsAppYes").is(":checked")) {
                //$('#dvIsWhatsApp').css('border', '');
                $("#txtNoOfFreeWhatsAppMsg").attr("readonly", false);
                $("#txtNoOfPaidWhatsAppMsg").attr("readonly", false);
            }
            else {
                $("#txtNoOfFreeWhatsAppMsg").attr("readonly", true);
                $("#txtNoOfPaidWhatsAppMsg").attr("readonly", true);
            }
        });
        $('#IsWhatsAppNo').on('change', function () {
            if ($("#IsWhatsAppNo").is(":checked")) {
                $('#dvIsWhatsApp').css('border', '');
                $("#txtNoOfFreeWhatsAppMsg").css('border', '');
                $("#txtNoOfPaidWhatsAppMsg").css('border', '');
                $("#txtNoOfFreeWhatsAppMsg").val("");
                $("#txtNoOfPaidWhatsAppMsg").val("");
                $("#txtNoOfFreeWhatsAppMsg").attr("readonly", true);
                $("#txtNoOfPaidWhatsAppMsg").attr("readonly", true);
            }
            else {
                $("#txtNoOfFreeWhatsAppMsg").attr("readonly", false);
                $("#txtNoOfPaidWhatsAppMsg").attr("readonly", false);
            }
        });
        $('#IsKeyAccount1').on('change', function () {
            $('#dvIsKeyAccount').css('border', '');
        });
        $('#IsKeyAccount2').on('change', function () {
            $('#dvIsKeyAccount').css('border', '');
        });
        $('#IsKeyAccount3').on('change', function () {
            $('#dvIsKeyAccount').css('border', '');
        });

        $("#txtNoOfFreeWhatsAppMsg").focusout(function () {
            if ($("#IsWhatsAppYes").is(":checked")) {
                if ($("#txtNoOfFreeWhatsAppMsg").val() != "") {
                    $('#txtNoOfFreeWhatsAppMsg').css('border-color', '');
                }
                else {
                    $('#txtNoOfFreeWhatsAppMsg').css('border-color', 'red');
                }
            }
            else {

            }
        });

        $("#txtNoOfPaidWhatsAppMsg").focusout(function () {
            if ($("#IsWhatsAppYes").is(":checked")) {
                if ($("#txtNoOfPaidWhatsAppMsg").val() != "") {
                    $('#txtNoOfPaidWhatsAppMsg').css('border-color', '');
                    $("#txtWAPaidPackFees").val($("#txtNoOfPaidWhatsAppMsg").val() * 0.24);
                }
                else {

                }
            }
        });
        $("#txtNoOfFreeSMS").focusout(function () {
            if ($("#txtNoOfFreeSMS").val() != "") {
                $('#txtNoOfFreeSMS').css('border-color', '');
            }
            else {
                $('#txtNoOfFreeSMS').css('border-color', 'red');
            }
        });
        $("#txtNoOfPaidSMS").focusout(function () {
            if ($("#txtNoOfPaidSMS").val() != "") {
                $('#txtNoOfPaidSMS').css('border-color', '');
                $("#txtSMSPaidPackFees").val($("#txtNoOfPaidSMS").val() * 0.16);
            }
            else {
                //$('#txtNoOfPaidSMS').css('border-color', 'red');
            }
        });

        $('#ddlIsMobileApp').change(function () {
            if ($("#ddlIsMobileApp option:selected").text() == "Yes") {
                $("#txtMobileAppDescription").attr("readonly", false);
            }
            else {
                $("#txtMobileAppDescription").attr("readonly", true);
                $("#txtMobileAppDescription").val("");
            }
        });
    }

    function RemoveRequiredBorderCategory() {
        $('#ddlCategory1').change(function () {
            if ($("#ddlCategory1 option:selected").text() == "Please Select") {
                $('#ddlCategory1').css('border-color', 'red');
            }
            else {
                $('#ddlCategory1').css('border-color', '');
            }
        });
        $('#ddlCategory2').change(function () {
            if ($("#ddlCategory2 option:selected").text() == "Please Select") {
                $('#ddlCategory2').css('border-color', 'red');
            }
            else {
                $('#ddlCategory2').css('border-color', '');
            }
        });
        $('#ddlCategory3').change(function () {
            if ($("#ddlCategory3 option:selected").text() == "Please Select") {
                $('#ddlCategory3').css('border-color', 'red');
            }
            else {
                $('#ddlCategory3').css('border-color', '');
            }
        });
        $('#ddlCategory4').change(function () {
            if ($("#ddlCategory4 option:selected").text() == "Please Select") {
                $('#ddlCategory4').css('border-color', 'red');
            }
            else {
                $('#ddlCategory4').css('border-color', '');
            }
        });

        $('#ddlBOProduct1').change(function () {
            if ($("#ddlBOProduct1 option:selected").text() == "Please Select") {
                $('#ddlBOProduct1').css('border-color', 'red');
                $('#ddlBillingPartner1').attr("disabled", false);
                $('#ddlBPProduct1').attr("disabled", false);
            }
            else {
                if ($("#ddlBOProduct1 option:selected").text() == "Octa XS") {
                    $('#ddlBillingPartner1').prop('selectedIndex', 0);
                    $('#ddlBPProduct1').prop('selectedIndex', 0);
                    $('#ddlBillingPartner1').attr("disabled", true);
                    $('#ddlBPProduct1').attr("disabled", true);
                }
                else {
                    $('#ddlBillingPartner1').attr("disabled", false);
                    $('#ddlBPProduct1').attr("disabled", false);
                }
                $('#ddlBOProduct1').css('border-color', '');
                $('#ddlBillingPartner1').css('border-color', '');
                $('#ddlBPProduct1').css('border-color', '');
            }
        });
        $('#ddlBOProduct2').change(function () {
            if ($("#ddlBOProduct2 option:selected").text() == "Please Select") {
                $('#ddlBOProduct2').css('border-color', 'red');
                $('#ddlBillingPartner2').attr("disabled", false);
                $('#ddlBPProduct2').attr("disabled", false);
            }
            else {
                if ($("#ddlBOProduct2 option:selected").text() == "Octa XS") {
                    $('#ddlBillingPartner2').prop('selectedIndex', 0);
                    $('#ddlBPProduct2').prop('selectedIndex', 0);
                    $('#ddlBillingPartner2').attr("disabled", true);
                    $('#ddlBPProduct2').attr("disabled", true);
                }
                else {
                    $('#ddlBillingPartner2').attr("disabled", false);
                    $('#ddlBPProduct2').attr("disabled", false);
                }
                $('#ddlBOProduct2').css('border-color', '');
                $('#ddlBillingPartner2').css('border-color', '');
                $('#ddlBPProduct2').css('border-color', '');
            }
        });
        $('#ddlBOProduct3').change(function () {
            if ($("#ddlBOProduct3 option:selected").text() == "Please Select") {
                $('#ddlBOProduct3').css('border-color', 'red');
                $('#ddlBillingPartner3').attr("disabled", false);
                $('#ddlBPProduct3').attr("disabled", false);
            }
            else {

                if ($("#ddlBOProduct3 option:selected").text() == "Octa XS") {
                    $('#ddlBillingPartner3').prop('selectedIndex', 0);
                    $('#ddlBPProduct3').prop('selectedIndex', 0);
                    $('#ddlBillingPartner3').attr("disabled", true);
                    $('#ddlBPProduct3').attr("disabled", true);
                }
                else {
                    $('#ddlBillingPartner3').attr("disabled", false);
                    $('#ddlBPProduct3').attr("disabled", false);
                }
                $('#ddlBOProduct3').css('border-color', '');
                $('#ddlBillingPartner3').css('border-color', '');
                $('#ddlBPProduct3').css('border-color', '');
            }
        });
        $('#ddlBOProduct4').change(function () {
            if ($("#ddlBOProduct4 option:selected").text() == "Please Select") {
                $('#ddlBOProduct4').css('border-color', 'red');
                $('#ddlBillingPartner4').attr("disabled", false);
                $('#ddlBPProduct4').attr("disabled", false);
            }
            else {
                if ($("#ddlBOProduct4 option:selected").text() == "Octa XS") {
                    $('#ddlBillingPartner4').prop('selectedIndex', 0);
                    $('#ddlBPProduct4').prop('selectedIndex', 0);
                    $('#ddlBillingPartner4').attr("disabled", true);
                    $('#ddlBPProduct4').attr("disabled", true);
                }
                else {
                    $('#ddlBillingPartner4').attr("disabled", false);
                    $('#ddlBPProduct4').attr("disabled", false);
                }
                $('#ddlBOProduct4').css('border-color', '');
                $('#ddlBillingPartner4').css('border-color', '');
                $('#ddlBPProduct4').css('border-color', '');
            }
        });

        $('#ddlBillingPartner1').change(function () {
            if ($("#ddlBillingPartner1 option:selected").text() == "Please Select") {
                $('#ddlBillingPartner1').css('border-color', 'red');
            }
            else {
                $('#ddlBillingPartner1').css('border-color', '');
            }
            FillBillingPartnerProducts($("#ddlBillingPartner1").val(), "1","");
        });
        $('#ddlBillingPartner2').change(function () {
            if ($("#ddlBillingPartner2 option:selected").text() == "Please Select") {
                $('#ddlBillingPartner2').css('border-color', 'red');
            }
            else {
                $('#ddlBillingPartner2').css('border-color', '');
            }
            FillBillingPartnerProducts($("#ddlBillingPartner2").val(), "2","");
        });
        $('#ddlBillingPartner3').change(function () {
            if ($("#ddlBillingPartner3 option:selected").text() == "Please Select") {
                $('#ddlBillingPartner3').css('border-color', 'red');
            }
            else {
                $('#ddlBillingPartner3').css('border-color', '');
            }
            FillBillingPartnerProducts($("#ddlBillingPartner3").val(), "3","");
        });
        $('#ddlBillingPartner4').change(function () {
            if ($("#ddlBillingPartner4 option:selected").text() == "Please Select") {
                $('#ddlBillingPartner4').css('border-color', 'red');
            }
            else {
                $('#ddlBillingPartner4').css('border-color', '');
            }
            FillBillingPartnerProducts($("#ddlBillingPartner4").val(), "4","");
        });

        $("#txtBrandName1").focusout(function () {
            if ($("#txtBrandName1").val() != "") {
                $('#txtBrandName1').css('border-color', '');
            }
            else {
                $('#txtBrandName1').css('border-color', 'red');
            }
        });
        $("#txtBrandName2").focusout(function () {
            if ($("#txtBrandName2").val() != "") {
                $('#txtBrandName2').css('border-color', '');
            }
            else {
                $('#txtBrandName2').css('border-color', 'red');
            }
        });
        $("#txtBrandName3").focusout(function () {
            if ($("#txtBrandName3").val() != "") {
                $('#txtBrandName3').css('border-color', '');
            }
            else {
                $('#txtBrandName3').css('border-color', 'red');
            }
        });
        $("#txtBrandName4").focusout(function () {
            if ($("#txtBrandName4").val() != "") {
                $('#txtBrandName4').css('border-color', '');
            }
            else {
                $('#txtBrandName4').css('border-color', 'red');
            }
        });

        $("#txtNoOfOutlets1").focusout(function () {
            if ($("#txtNoOfOutlets1").val() != "") {
                $('#txtNoOfOutlets1').css('border-color', '');
            }
            else {
                $('#txtNoOfOutlets1').css('border-color', 'red');
            }
        });
        $("#txtNoOfOutlets2").focusout(function () {
            if ($("#txtNoOfOutlets2").val() != "") {
                $('#txtNoOfOutlets2').css('border-color', '');
            }
            else {
                $('#txtNoOfOutlets2').css('border-color', 'red');
            }
        });
        $("#txtNoOfOutlets3").focusout(function () {
            if ($("#txtNoOfOutlets3").val() != "") {
                $('#txtNoOfOutlets3').css('border-color', '');
            }
            else {
                $('#txtNoOfOutlets3').css('border-color', 'red');
            }
        });
        $("#txtNoOfOutlets4").focusout(function () {
            if ($("#txtNoOfOutlets4").val() != "") {
                $('#txtNoOfOutlets4').css('border-color', '');
            }
            else {
                $('#txtNoOfOutlets4').css('border-color', 'red');
            }
        });

        $("#txtNoOfEnrolled1").focusout(function () {
            if ($("#txtNoOfEnrolled1").val() != "") {
                $('#txtNoOfEnrolled1').css('border-color', '');
            }
            else {
                $('#txtNoOfEnrolled1').css('border-color', 'red');
            }
        });
        $("#txtNoOfEnrolled2").focusout(function () {
            if ($("#txtNoOfEnrolled2").val() != "") {
                $('#txtNoOfEnrolled2').css('border-color', '');
            }
            else {
                $('#txtNoOfEnrolled2').css('border-color', 'red');
            }
        });
        $("#txtNoOfEnrolled3").focusout(function () {
            if ($("#txtNoOfEnrolled3").val() != "") {
                $('#txtNoOfEnrolled3').css('border-color', '');
            }
            else {
                $('#txtNoOfEnrolled3').css('border-color', 'red');
            }
        });
        $("#txtNoOfEnrolled4").focusout(function () {
            if ($("#txtNoOfEnrolled4").val() != "") {
                $('#txtNoOfEnrolled4').css('border-color', '');
            }
            else {
                $('#txtNoOfEnrolled4').css('border-color', 'red');
            }
        });

        $('#ddlBPProduct1').change(function () {
            if ($("#ddlBPProduct1 option:selected").text() == "Please Select") {
                $('#ddlBPProduct1').css('border-color', 'red');
            }
            else {
                $('#ddlBPProduct1').css('border-color', '');
            }
        });
        $('#ddlBPProduct2').change(function () {
            if ($("#ddlBPProduct2 option:selected").text() == "Please Select") {
                $('#ddlBPProduct2').css('border-color', 'red');
            }
            else {
                $('#ddlBPProduct2').css('border-color', '');
            }
        });
        $('#ddlBPProduct3').change(function () {
            if ($("#ddlBPProduct3 option:selected").text() == "Please Select") {
                $('#ddlBPProduct3').css('border-color', 'red');
            }
            else {
                $('#ddlBPProduct3').css('border-color', '');
            }
        });
        $('#ddlBPProduct4').change(function () {
            if ($("#ddlBPProduct4 option:selected").text() == "Please Select") {
                $('#ddlBPProduct4').css('border-color', 'red');
            }
            else {
                $('#ddlBPProduct4').css('border-color', '');
            }
        });
 }

    function RemoveRequiredBorderAssignment() {

        $('#ddlSourcedBy').change(function () {
            if ($("#ddlSourcedBy option:selected").text() == "Please Select") {
                $('#ddlSourcedBy').css('border-color', 'red');
            }
            else {
                $('#ddlSourcedBy').css('border-color', '');
            }
        });
        $('#ddlAssignedCS').change(function () {
            if ($("#ddlAssignedCS option:selected").text() == "Please Select") {
                $('#ddlAssignedCS').css('border-color', 'red');
            }
            else {
                $('#ddlAssignedCS').css('border-color', '');
            }
        });
        $('#ddlReferredby').change(function () {
            if ($("#ddlReferredby option:selected").text() == "Please Select") {
                $('#ddlReferredby').css('border-color', 'red');
            }
            else {
                $('#ddlReferredby').css('border-color', '');
            }
            FillRefferedName($("#ddlReferredby").val(),"");
        });
        $('#ddlReferredName').change(function () {
            if ($("#ddlReferredName option:selected").text() == "Please Select") {
                $('#ddlReferredName').css('border-color', 'red');
            }
            else {
                $('#ddlReferredName').css('border-color', '');
            }
        });

        $("#txtComments").focusout(function () {
            if ($("#txtComments").val() != "") {
                $('#txtComments').css('border-color', '');
            }
            else {
                $('#txtComments').css('border-color', 'red');
            }
        });
    }

    function RemoveRequiredBorderDeal() {
        $("#txtLoyaltyFees").focusout(function () {
            if ($("#txtLoyaltyFees").val() != "") {
                $('#txtLoyaltyFees').css('border-color', '');
                CalculateTotalFees();
                CalculateTDS();
            }
            else {
                $('#txtLoyaltyFees').css('border-color', 'red');
            }
        });
        $("#txtAnyOtherFees").focusout(function () {
            if ($("#txtAnyOtherFees").val() != "") {
                CalculateTotalFees();
                CalculateTDS();
            }
        });
        $('#NewModel').on('change', function () {
            if ($("#NewModel").is(":checked")) {
                //$('#dvIsWhatsApp').css('border', '');
                $("#txtASFPercentage").attr("readonly", false);
                $("#txtASF").attr("readonly", false);
            }
            else {
                $("#txtASFPercentage").attr("readonly", true);
                $("#txtASF").attr("readonly", true);
                $("#txtASFPercentage").val() = "";
                $("#txtASF").val() = "";
            }
        });
        $('#OldModel').on('change', function () {
            if ($("#OldModel").is(":checked")) {
                //$('#dvIsWhatsApp').css('border', '');
                $("#txtASFPercentage").attr("readonly", true);
                $("#txtASF").attr("readonly", true);
                $("#txtASFPercentage").val() = "";
                $("#txtASF").val() = "";
            }
        });
        $("#txtWAPaidPackFees").focusout(function () {
            if ($("#txtWAPaidPackFees").val() != "") {
                CalculateTotalFees();
                CalculateTDS();
            }
        });
        $("#txtSMSPaidPackFees").focusout(function () {
            if ($("#txtSMSPaidPackFees").val() != "") {
                CalculateTotalFees();
                CalculateTDS();
            }
        });
        $("#txtAmountReceived").focusout(function () {
            if ($("#txtAmountReceived").val() != "" && $("#txtAmountReceived").val() != 0) {
                if (parseFloat($("#txtAmountReceived").val()) > parseFloat($("#txtTotalFeesB").val())) {
                    $('#txtAmountReceived').css('border-color', 'red');
                    $('#txtAmountReceived').focus();
                }
                else {
                    $('#txtAmountReceived').css('border-color', '');
                    CalculateTDS();
                    CalculateTotalFees();
                }
            }
            else {
                $('#txtAmountReceived').css('border-color', 'red');
            }
        });

        $("#txtGSTRate").focusout(function () {
            if ($("#txtGSTRate").val() != "" && $("#txtGSTRate").val() != 0) {
                $('#txtGSTRate').css('border-color', '');
                CalculateTotalFees();
                CalculateTDS();
            }
            else {
                $('#txtGSTRate').css('border-color', 'red');
            }
        });


        $('#IsCGST').on('change', function () {
            $('#dvIsGST').css('border', '');
            $("#txtGSTRate").show();
            CalculateTotalFees();
            CalculateTDS();
        });
        $('#IsIGST').on('change', function () {
            $('#dvIsGST').css('border', '');
            $("#txtGSTRate").show();
            CalculateTotalFees();
            CalculateTDS();
        });
        $('#IsGSTNo').on('change', function () {
            $('#dvIsGST').css('border', '');
            $("#txtGSTRate").hide();
            CalculateTotalFees();
            CalculateTDS();
        });

        $("#txtAdvanceAmount").focusout(function () {
            if ($("#txtAdvanceAmount").val() != "" && $("#txtAdvanceAmount").val() != 0) {

                if (parseFloat($("#txtAdvanceAmount").val()) > parseFloat($("#txtTotalFeesB").val())) {
                    $('#txtAdvanceAmount').css('border-color', 'red');
                    $('#txtAdvanceAmount').focus();
                }
                else {
                    $('#txtAdvanceAmount').css('border-color', '');
                    CalculateTDS();
                    CalculateTotalFees();
                }
            }
            else {
                $('#txtAdvanceAmount').css('border-color', 'red');
            }
        });

        $('#ddlPaymentFrequency').change(function () {
            if ($("#ddlPaymentFrequency option:selected").text() == "Please Select") {
                $('#ddlPaymentFrequency').css('border-color', 'red');
                $("#dvPaymentSection").hide();
                $("#dvPaymentDetailsSection").hide();
            }
            else {
                $('#ddlPaymentFrequency').css('border-color', '');
                if ($("#ddlPaymentFrequency option:selected").text() == "Single") {
                    $("#dvPaymentSection").hide();
                    $("#dvPaymentDetailsSection").hide();
                    $("#dvAdvanceAmount").hide();
                }
                else {
                    $("#dvPaymentSection").show();
                    $("#dvAdvanceAmount").show();
                }
            }
        });
        $('#ddlPaymentMode').change(function () {
            if ($("#ddlPaymentMode option:selected").text() == "Please Select") {
                $('#ddlPaymentMode').css('border-color', 'red');
            }
            else {
                $('#ddlPaymentMode').css('border-color', '');
            }
        });
        $('#ddlPaymentStatus').change(function () {
            if ($("#ddlPaymentStatus option:selected").text() == "Please Select") {
                $('#ddlPaymentStatus').css('border-color', 'red');
            }
            else {
                $('#ddlPaymentStatus').css('border-color', '');
            }
        });
    }

    function RemoveRequiredOutletDetails() {
        var outletCount = $("#hdnOutletCount").val();
        for (let i = 1; i <= outletCount; i++) {
            $("#txtOutletName" + i).focusout(function () {
                if ($("#txtOutletName" + i).val() != "") {
                    $('#txtOutletName' + i).css('border-color', '');
                }
                else {
                    $('#txtOutletName' + i).css('border-color', 'red');
                }
            });
            $("#txtAreaName" + i).focusout(function () {
                if ($("#txtAreaName" + i).val() != "") {
                    $('#txtAreaName' + i).css('border-color', '');
                }
                else {
                    $('#txtAreaName' + i).css('border-color', 'red');
                }
            });
            $("#txtAuthorisedPerson" + i).focusout(function () {
                if ($("#txtAuthorisedPerson" + i).val() != "") {
                    $('#txtAuthorisedPerson' + i).css('border-color', '');
                }
                else {
                    $('#txtAuthorisedPerson' + i).css('border-color', 'red');
                }
            });
            $("#txtRegisterMobileNo" + i).focusout(function () {
                if ($("#txtRegisterMobileNo" + i).val() != "") {
                    $('#txtRegisterMobileNo' + i).css('border-color', '');
                }
                else {
                    $('#txtRegisterMobileNo' + i).css('border-color', 'red');
                }
            });
            $("#txtRegisterEmail" + i).focusout(function () {
                if ($("#txtRegisterEmail" + i).val() != "") {
                    $('#txtRegisterEmail' + i).css('border-color', '');
                }
                else {
                    $('#txtRegisterEmail' + i).css('border-color', 'red');
                }
            });
            $("#txtAddress" + i).focusout(function () {
                if ($("#txtAddress" + i).val() != "") {
                    $('#txtAddress' + i).css('border-color', '');
                }
                else {
                    $('#txtAddress' + i).css('border-color', 'red');
                }
            });
            $("#txtLatitude" + i).focusout(function () {
                if ($("#txtLatitude" + i).val() != "") {
                    $('#txtLatitude' + i).css('border-color', '');
                }
                else {
                    $('#txtLatitude' + i).css('border-color', 'red');
                }
            });
            $("#txtLongitude" + i).focusout(function () {
                if ($("#txtLongitude" + i).val() != "") {
                    $('#txtLongitude' + i).css('border-color', '');
                }
                else {
                    $('#txtLongitude' + i).css('border-color', 'red');
                }
            });
            $("#txtPinCode" + i).focusout(function () {
                if ($("#txtPinCode" + i).val() != "") {
                    $('#txtPinCode' + i).css('border-color', '');
                }
                else {
                    $('#txtPinCode' + i).css('border-color', 'red');
                }
            });

            $('#ddlState' + i).change(function () {
                if ($("#ddlState"+i+" option:selected").text() == "Please Select") {
                    $('#ddlState' + i).css('border-color', 'red');
                }
                else {
                    $('#ddlState' + i).css('border-color', '');
                }
            });
            $('#ddlCity' + i).change(function () {
                if ($("#ddlCity" + i + " option:selected").text() == "Please Select") {
                    $('#ddlCity' + i).css('border-color', 'red');
                }
                else {
                    $('#ddlCity' + i).css('border-color', '');
                }
            });
        }
    }

    function CalculateTDS() {
        var ReceivedFees = $("#txtAmountReceived").val();
        if (parseFloat(ReceivedFees) > parseFloat($("#txtTotalFeesB").val())) {
            $('#txtAmountReceived').focus();
        }
        else {
            if ($("#ddlPaymentFrequency option:selected").text() == "Single" || $("#ddlPaymentFrequency option:selected").text() == "Please Select") {

                if (ReceivedFees == "") {
                    ReceivedFees = 0;
                }
                $("#txtTDSDeducted").val($("#txtTotalFeesB").val() - ReceivedFees);
            }
            if ($("#ddlPaymentFrequency option:selected").text() == "Installments") {
                if (ReceivedFees == "") {
                    ReceivedFees = 0;
                }
                var AdvanceAmount = $("#txtAdvanceAmount").val();
                $("#txtTDSDeducted").val(AdvanceAmount - ReceivedFees);
            }

        }
    }

    function CalculateTotalFees() {
        var LoyaltyFees = $("#txtLoyaltyFees").val();
        if (LoyaltyFees == "") {
            LoyaltyFees = 0;
        }
        var OtherFees = $("#txtAnyOtherFees").val();
        if (OtherFees == "") {
            OtherFees = 0;
        }
        var WAPaidFees = $("#txtWAPaidPackFees").val();
        if (WAPaidFees == "") {
            WAPaidFees = 0;
        }
        var SMSPaidFees = $("#txtSMSPaidPackFees").val();
        if (SMSPaidFees == "") {
            SMSPaidFees = 0;
        }
        var EComFees = $("#txtEcommIntegration").val();
        if (EComFees == "") {
            EComFees = 0;
        }

        var totalFeesA = parseFloat(LoyaltyFees) + parseFloat(WAPaidFees) + parseFloat(SMSPaidFees) + parseFloat(EComFees) + parseFloat(OtherFees);
        $("#txtTotalFeesA").val(totalFeesA);

        if ($("#IsCGST").is(":checked") || $("#IsIGST").is(":checked")) {
            var rate = $("#txtGSTRate").val();
            if (rate != "" || rate > 0) {
                $("#txtTotalFeesB").val(parseFloat(totalFeesA) + (parseFloat(totalFeesA) * parseFloat(rate / 100)));
            }
            else {
                $("#txtTotalFeesB").val(totalFeesA);
            }
        }
        else {
            $("#txtTotalFeesB").val(totalFeesA);
        }

        if ($("#ddlPaymentFrequency option:selected").text() == "Installments") {
            var balance = parseFloat($("#txtTotalFeesB").val()) - (parseFloat($("#txtAmountReceived").val()) + parseFloat($("#txtTDSDeducted").val()));
            if (!isNaN(balance)) {
                $("#txtAmountBalance").val(balance);
            }


            if (balance > 0) {
                //$('#txtNoOfInstallments').prop("disabled", false);
                $("#txtNoOfInstallments").attr("readonly", false);
            }
            else {
                //$('#txtNoOfInstallments').prop("disabled", true);
                $("#txtNoOfInstallments").attr("readonly", true);
            }
        }


    }

    function CheckValidationAndSubmit(buttonType) {
        var returnStatusCust = true;
        var returnStatusAssign = true;
        var returnStatusDeal = true;
        var returnStatusPayment = true;
        var returnStatusOutlet = true;
        var returnStatusUpdatePayment = true;
        returnStatusCust = CheckCustomerDetails();
        if (returnStatusCust) {
            returnStatusAssign = CheckAssignmentDetails();
            if (returnStatusAssign) {
                returnStatusDeal = CheckDealDetails();
                if (returnStatusDeal) {
                    returnStatusPayment = CheckPaymentSchedule();
                }
            }
        }
        if (returnStatusCust && returnStatusAssign && returnStatusDeal && returnStatusPayment) {
            var datastatus = GetAllData();
            if (buttonType == 'CS') {
                $("#hdnCustomerStatus").val("CS");
                cuteAlert({
                    type: "question",
                    title: "Are you sure?",
                    message: "Once you submit, you will not be able to change data",
                    confirmText: "Okay",
                    cancelText: "Cancel"
                }).then((e) => {
                    if (e == ("confirm")) {
                        $("#btnCustomerSave").click();
                    }
                })

            }
            else {
                if ($("#hdnCustomerStatus").val() == "") {
                    $("#hdnCustomerStatus").val("Draft");
                }
                return true;
            }

        }
        else {
            cuteAlert({
                type: "error",
                title: "Oops..",
                message: "Please enter Required fields",
                buttonText: "Okay"
            })
            return false;
        }
    }

    function CheckCustomerDetails() {
        var returnStatus = true;
        if ($("#txtGroupName").val() == "") {
            ShowHideSection("custdetails");
            $('#txtGroupName').css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#txtOwnerName").val() == "") {
            ShowHideSection("custdetails");
            $('#txtOwnerName').css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#txtOwnerMobileNo").val() == "") {
            ShowHideSection("custdetails");
            $('#txtOwnerMobileNo').css('border-color', 'red');
            returnStatus = false;
        }

        if ($("#txtOwnerEmailId").val() == "") {
            ShowHideSection("custdetails");
            $('#txtOwnerEmailId').css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#hdnGroupID").val() == "" || $("#hdnGroupID").val() == 0) {
            if ($("#fileGSTDocumentFile").val() == "") {
                ShowHideSection("custdetails");
                $('#fileGSTDocumentFile').addClass('borderClass');
                returnStatus = false;
            }
            if ($("#filePANDocumentFile").val() == "") {
                ShowHideSection("custdetails");
                $('#filePANDocumentFile').addClass('borderClass');
                returnStatus = false;
            }
        }
        if ($("#ddlCity").val() == "") {
            ShowHideSection("custdetails");
            $('#ddlCity').css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#txtNoOfRetailCategory").val() == "") {
            ShowHideSection("custdetails");
            $('#txtNoOfRetailCategory').css('border-color', 'red');
            returnStatus = false;
        }

        if ($("#IsMWPYes").is(":checked") || $("#IsMWPNo").is(":checked")) {

        }
        else {
            ShowHideSection("custdetails");
            $('#dvIsMWP').css('border', '1px solid red');
            returnStatus = false;
        }

        if ($("#IsWhatsAppYes").is(":checked") || $("#IsWhatsAppNo").is(":checked")) {

        }
        else {
            ShowHideSection("custdetails");
            $('#dvIsWhatsApp').css('border', '1px solid red');
            returnStatus = false;
        }

        if ($("#IsKeyAccount1").is(":checked") || $("#IsKeyAccount2").is(":checked") || $("#IsKeyAccount3").is(":checked")) {

        }
        else {
            ShowHideSection("custdetails");
            $('#dvIsKeyAccount').css('border', '1px solid red');
            returnStatus = false;
        }

        if ($("#IsWhatsAppYes").is(":checked")) {
            if ($("#txtNoOfFreeWhatsAppMsg").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfFreeWhatsAppMsg').css('border-color', 'red');
                returnStatus = false;
            }
        }
        if ($("#txtNoOfFreeSMS").val() == "") {
            ShowHideSection("custdetails");
            $('#txtNoOfFreeSMS').css('border-color', 'red');
            returnStatus = false;
        }

        var returnStatusCategory = CheckCategoryDetails();

        if (returnStatus && returnStatusCategory) {
            return true;
        }
        else {
            return false;
        }
    }

    function CheckCategoryDetails() {
        var returnStatus = false;
        var categoryNo = $("#txtNoOfRetailCategory").val();
        if (categoryNo == 1) {
            returnStatus = true;
            if ($("#ddlCategory1 option:selected").text() == "Please Select") {
                $('#ddlCategory1').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtBrandName1").val() == "") {
                ShowHideSection("custdetails");
                $('#txtBrandName1').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfOutlets1").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfOutlets1').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfEnrolled1").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfEnrolled1').css('border-color', 'red');
                returnStatus = false;
            }

            if ($("#ddlBOProduct1 option:selected").text() == "Please Select") {
                $('#ddlBOProduct1').css('border-color', 'red');
                returnStatus = false;
            }

            if ($("#ddlBOProduct1 option:selected").text() != "Octa XS") {
                if ($("#ddlBillingPartner1 option:selected").text() == "Please Select") {
                    $('#ddlBillingPartner1').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#ddlBPProduct1 option:selected").text() == "Please Select") {
                    $('#ddlBPProduct1').css('border-color', 'red');
                    returnStatus = false;
                }
            }
        }
        if (categoryNo == 2) {
            returnStatus = true;
            if ($("#ddlCategory1 option:selected").text() == "Please Select") {
                $('#ddlCategory1').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtBrandName1").val() == "") {
                ShowHideSection("custdetails");
                $('#txtBrandName1').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfOutlets1").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfOutlets1').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfEnrolled1").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfEnrolled1').css('border-color', 'red');
                returnStatus = false;
            }

            if ($("#ddlCategory2 option:selected").text() == "Please Select") {
                $('#ddlCategory2').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtBrandName2").val() == "") {
                ShowHideSection("custdetails");
                $('#txtBrandName2').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfOutlets2").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfOutlets2').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfEnrolled2").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfEnrolled2').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#ddlBOProduct1 option:selected").text() == "Please Select") {
                $('#ddlBOProduct1').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#ddlBOProduct2 option:selected").text() == "Please Select") {
                $('#ddlBOProduct2').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#ddlBOProduct1 option:selected").text() != "Octa XS") {
                if ($("#ddlBillingPartner1 option:selected").text() == "Please Select") {
                    $('#ddlBillingPartner1').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#ddlBPProduct1 option:selected").text() == "Please Select") {
                    $('#ddlBPProduct1').css('border-color', 'red');
                    returnStatus = false;
                }
            }

            if ($("#ddlBOProduct2 option:selected").text() != "Octa XS") {
                if ($("#ddlBillingPartner2 option:selected").text() == "Please Select") {
                    $('#ddlBillingPartner2').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#ddlBPProduct2 option:selected").text() == "Please Select") {
                    $('#ddlBPProduct2').css('border-color', 'red');
                    returnStatus = false;
                }
            }

        }
        if (categoryNo == 3) {
            returnStatus = true;
            if ($("#ddlCategory1 option:selected").text() == "Please Select") {
                $('#ddlCategory1').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtBrandName1").val() == "") {
                ShowHideSection("custdetails");
                $('#txtBrandName1').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfOutlets1").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfOutlets1').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfEnrolled1").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfEnrolled1').css('border-color', 'red');
                returnStatus = false;
            }


            if ($("#ddlCategory2 option:selected").text() == "Please Select") {
                $('#ddlCategory2').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtBrandName2").val() == "") {
                ShowHideSection("custdetails");
                $('#txtBrandName2').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfOutlets2").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfOutlets2').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfEnrolled2").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfEnrolled2').css('border-color', 'red');
                returnStatus = false;
            }


            if ($("#ddlCategory3 option:selected").text() == "Please Select") {
                $('#ddlCategory3').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtBrandName3").val() == "") {
                ShowHideSection("custdetails");
                $('#txtBrandName3').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfOutlets3").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfOutlets3').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfEnrolled3").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfEnrolled3').css('border-color', 'red');
                returnStatus = false;
            }


            if ($("#ddlBOProduct1 option:selected").text() == "Please Select") {
                $('#ddlBOProduct1').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#ddlBOProduct2 option:selected").text() == "Please Select") {
                $('#ddlBOProduct2').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#ddlBOProduct3 option:selected").text() == "Please Select") {
                $('#ddlBOProduct3').css('border-color', 'red');
                returnStatus = false;
            }

            if ($("#ddlBOProduct1 option:selected").text() != "Octa XS") {
                if ($("#ddlBillingPartner1 option:selected").text() == "Please Select") {
                    $('#ddlBillingPartner1').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#ddlBPProduct1 option:selected").text() == "Please Select") {
                    $('#ddlBPProduct1').css('border-color', 'red');
                    returnStatus = false;
                }
            }

            if ($("#ddlBOProduct2 option:selected").text() != "Octa XS") {
                if ($("#ddlBillingPartner2 option:selected").text() == "Please Select") {
                    $('#ddlBillingPartner2').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#ddlBPProduct2 option:selected").text() == "Please Select") {
                    $('#ddlBPProduct2').css('border-color', 'red');
                    returnStatus = false;
                }
            }

            if ($("#ddlBOProduct3 option:selected").text() != "Octa XS") {
                if ($("#ddlBillingPartner3 option:selected").text() == "Please Select") {
                    $('#ddlBillingPartner3').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#ddlBPProduct3 option:selected").text() == "Please Select") {
                    $('#ddlBPProduct3').css('border-color', 'red');
                    returnStatus = false;
                }
            }


        }
        if (categoryNo == 4) {
            returnStatus = true;
            if ($("#ddlCategory1 option:selected").text() == "Please Select") {
                $('#ddlCategory1').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtBrandName1").val() == "") {
                ShowHideSection("custdetails");
                $('#txtBrandName1').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfOutlets1").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfOutlets1').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfEnrolled1").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfEnrolled1').css('border-color', 'red');
                returnStatus = false;
            }



            if ($("#ddlCategory2 option:selected").text() == "Please Select") {
                $('#ddlCategory2').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtBrandName2").val() == "") {
                ShowHideSection("custdetails");
                $('#txtBrandName2').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfOutlets2").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfOutlets2').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfEnrolled2").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfEnrolled2').css('border-color', 'red');
                returnStatus = false;
            }



            if ($("#ddlCategory3 option:selected").text() == "Please Select") {
                $('#ddlCategory3').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtBrandName3").val() == "") {
                ShowHideSection("custdetails");
                $('#txtBrandName3').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfOutlets3").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfOutlets3').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfEnrolled3").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfEnrolled3').css('border-color', 'red');
                returnStatus = false;
            }

            if ($("#ddlCategory4 option:selected").text() == "Please Select") {
                $('#ddlCategory4').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtBrandName4").val() == "") {
                ShowHideSection("custdetails");
                $('#txtBrandName4').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfOutlets4").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfOutlets4').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfEnrolled4").val() == "") {
                ShowHideSection("custdetails");
                $('#txtNoOfEnrolled4').css('border-color', 'red');
                returnStatus = false;
            }

            if ($("#ddlBOProduct1 option:selected").text() == "Please Select") {
                $('#ddlBOProduct1').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#ddlBOProduct2 option:selected").text() == "Please Select") {
                $('#ddlBOProduct2').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#ddlBOProduct3 option:selected").text() == "Please Select") {
                $('#ddlBOProduct3').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#ddlBOProduct4 option:selected").text() == "Please Select") {
                $('#ddlBOProduct4').css('border-color', 'red');
                returnStatus = false;
            }

            if ($("#ddlBOProduct1 option:selected").text() != "Octa XS") {
                if ($("#ddlBillingPartner1 option:selected").text() == "Please Select") {
                    $('#ddlBillingPartner1').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#ddlBPProduct1 option:selected").text() == "Please Select") {
                    $('#ddlBPProduct1').css('border-color', 'red');
                    returnStatus = false;
                }
            }

            if ($("#ddlBOProduct2 option:selected").text() != "Octa XS") {
                if ($("#ddlBillingPartner2 option:selected").text() == "Please Select") {
                    $('#ddlBillingPartner2').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#ddlBPProduct2 option:selected").text() == "Please Select") {
                    $('#ddlBPProduct2').css('border-color', 'red');
                    returnStatus = false;
                }
            }

            if ($("#ddlBOProduct3 option:selected").text() != "Octa XS") {

                if ($("#ddlBillingPartner3 option:selected").text() == "Please Select") {

                    $('#ddlBillingPartner3').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#ddlBPProduct3 option:selected").text() == "Please Select") {
                    $('#ddlBPProduct3').css('border-color', 'red');
                    returnStatus = false;
                }
            }

            if ($("#ddlBOProduct4 option:selected").text() != "Octa XS") {
                if ($("#ddlBillingPartner4 option:selected").text() == "Please Select") {
                    $('#ddlBillingPartner4').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#ddlBPProduct4 option:selected").text() == "Please Select") {
                    $('#ddlBPProduct4').css('border-color', 'red');
                    returnStatus = false;
                }
            }
        }

        if (returnStatus) {
            return true;
        }
        else {
            return false;
        }
    }

    function CheckAssignmentDetails() {
        var returnStatus = true;
        if ($("#ddlSourcedBy option:selected").text() == "Please Select") {
            $('#ddlSourcedBy').css('border-color', 'red');
            ShowHideSection("assignmentdetails");
            returnStatus = false;
        }
        if ($("#ddlAssignedCS option:selected").text() == "Please Select") {
            $('#ddlAssignedCS').css('border-color', 'red');
            ShowHideSection("assignmentdetails");
            returnStatus = false;
        }
        if ($("#ddlReferredby option:selected").text() == "Please Select") {
            $('#ddlReferredby').css('border-color', 'red');
            ShowHideSection("assignmentdetails");
            returnStatus = false;
        }
        //if ($("#ddlReferredName option:selected").text() == "Please Select") {
        //    $('#ddlReferredName').css('border-color', 'red');
        //    ShowHideSection("assignmentdetails");
        //    returnStatus = false;
        //}
        if ($("#txtComments").val() == "") {
            ShowHideSection("assignmentdetails");
            $('#txtComments').css('border-color', 'red');
            returnStatus = false;
        }

        if (returnStatus) {
            return true;
        }
        else {
            return false;
        }
    }

    function CheckDealDetails() {
        var returnStatus = true;
        if ($("#txtLoyaltyFees").val() == "") {
            ShowHideSection("dealdetails");
            $('#txtLoyaltyFees').css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#NewModel").is(":checked")) {

            if ($("#txtASF").val() != "" && $("#txtASF").val() != 0) {

                $('#txtASF').css('border-color', '');
            }
            else {

                $('#txtASF').css('border-color', 'red');
                ShowHideSection("dealdetails");
                returnStatus = false;
            }
            if ($("#txtASFPercentage").val() != "" && $("#txtASFPercentage").val() != 0) {

                $('#txtASFPercentage').css('border-color', '');
            }
            else {

                $('#txtASFPercentage').css('border-color', 'red');
                ShowHideSection("dealdetails");
                returnStatus = false;
            }

        }
        if ($("#IsCGST").is(":checked") || $("#IsIGST").is(":checked") || $("#IsGSTNo").is(":checked")) {

        }
        else {
            ShowHideSection("dealdetails");
            $('#dvIsGST').css('border', '1px solid red');
            returnStatus = false;
        }
        if ($("#ddlPaymentFrequency option:selected").text() == "Please Select") {
            $('#ddlPaymentFrequency').css('border-color', 'red');
            ShowHideSection("dealdetails");
            returnStatus = false;
        }
        if ($("#txtAmountReceived").val() == "" || $("#txtAmountReceived").val() == "0") {
            ShowHideSection("dealdetails");
            $('#txtAmountReceived').css('border-color', 'red');
            returnStatus = false;
        }

        if ($("#ddlPaymentMode option:selected").text() == "Please Select") {
            $('#ddlPaymentMode').css('border-color', 'red');
            ShowHideSection("dealdetails");
            returnStatus = false;
        }

        if ($("#ddlPaymentStatus option:selected").text() == "Please Select") {
            $('#ddlPaymentStatus').css('border-color', 'red');
            ShowHideSection("dealdetails");
            returnStatus = false;
        }


        if (returnStatus) {
            return true;
        }
        else {
            return false;
        }
    }

    function CheckInstallmentAmount() {
        $("#txtPaymentAmount1").focusout(function () {
            CalculateInstallmentAmount();
            if ($("#txtPaymentAmount1").val() != "") {
                $('#txtPaymentAmount1').css('border-color', '');
            }
            else {
                $('#txtPaymentAmount1').css('border-color', 'red');
            }
        });
        $("#txtPaymentAmount2").focusout(function () {
            CalculateInstallmentAmount();
            if ($("#txtPaymentAmount2").val() != "") {
                $('#txtPaymentAmount2').css('border-color', '');
            }
            else {
                $('#txtPaymentAmount2').css('border-color', 'red');
            }
        });
        $("#txtPaymentAmount3").focusout(function () {
            CalculateInstallmentAmount();
            if ($("#txtPaymentAmount3").val() != "") {
                $('#txtPaymentAmount3').css('border-color', '');
            }
            else {
                $('#txtPaymentAmount3').css('border-color', 'red');
            }
        });

        $("#txtPaymentDate1").focusout(function () {
            if ($("#txtPaymentDate1").val() != "") {
                $('#txtPaymentDate1').css('border-color', '');
            }
            else {
                $('#txtPaymentDate1').css('border-color', 'red');
            }
        });
        $("#txtPaymentDate2").focusout(function () {
            if ($("#txtPaymentDate2").val() != "") {
                $('#txtPaymentDate2').css('border-color', '');
            }
            else {
                $('#txtPaymentDate2').css('border-color', 'red');
            }
        });
        $("#txtPaymentDate3").focusout(function () {
            if ($("#txtPaymentDate3").val() != "") {
                $('#txtPaymentDate3').css('border-color', '');
            }
            else {
                $('#txtPaymentDate3').css('border-color', 'red');
            }
        });
    }

    function CalculateInstallmentAmount() {
        var AmountBalance = $("#txtAmountBalance").val();
        var PaymentAmount1 = $("#txtPaymentAmount1").val();
        var PaymentAmount2 = $("#txtPaymentAmount2").val();
        var PaymentAmount3 = $("#txtPaymentAmount3").val();

        if (PaymentAmount1 == "") {
            PaymentAmount1 = 0;
        }
        if (PaymentAmount2 == "") {
            PaymentAmount2 = 0;
        }
        if (PaymentAmount3 == "") {
            PaymentAmount3 = 0;
        }
        var total = parseFloat(PaymentAmount1) + parseFloat(PaymentAmount2) + parseFloat(PaymentAmount3);

        if (parseFloat(total) > parseFloat(AmountBalance)) {
            cuteAlert({
                type: "error",
                title: "Oops..",
                message: "Installments amount can not be greater than Balance Amount",
                buttonText: "Okay"
            })
        }
    }

    function CheckPaymentSchedule() {
        var returnStatus = true;
        if ($("#txtAmountBalance").val() > 0) {
            if ($("#txtNoOfInstallments").val() == "") {
                ShowHideSection("paymentmodule");
                $('#txtNoOfInstallments').css('border-color', 'red');
                returnStatus = false;
            }
            if ($("#txtNoOfInstallments").val() == 1) {
                if ($("#txtPaymentDate1").val() == "") {
                    ShowHideSection("paymentmodule");
                    $('#txtPaymentDate1').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#txtPaymentAmount1").val() == "") {
                    ShowHideSection("paymentmodule");
                    $('#txtPaymentAmount1').css('border-color', 'red');
                    returnStatus = false;
                }
            }
            if ($("#txtNoOfInstallments").val() == 2) {
                if ($("#txtPaymentDate1").val() == "") {
                    ShowHideSection("paymentmodule");
                    $('#txtPaymentDate1').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#txtPaymentAmount1").val() == "") {
                    ShowHideSection("paymentmodule");
                    $('#txtPaymentAmount1').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#txtPaymentDate2").val() == "") {
                    ShowHideSection("paymentmodule");
                    $('#txtPaymentDate2').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#txtPaymentAmount2").val() == "") {
                    ShowHideSection("paymentmodule");
                    $('#txtPaymentAmount2').css('border-color', 'red');
                    returnStatus = false;
                }
            }
            if ($("#txtNoOfInstallments").val() == 3) {
                if ($("#txtPaymentDate1").val() == "") {
                    ShowHideSection("paymentmodule");
                    $('#txtPaymentDate1').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#txtPaymentAmount1").val() == "") {
                    ShowHideSection("paymentmodule");
                    $('#txtPaymentAmount1').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#txtPaymentDate2").val() == "") {
                    ShowHideSection("paymentmodule");
                    $('#txtPaymentDate2').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#txtPaymentAmount2").val() == "") {
                    ShowHideSection("paymentmodule");
                    $('#txtPaymentAmount2').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#txtPaymentDate3").val() == "") {
                    ShowHideSection("paymentmodule");
                    $('#txtPaymentDate3').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("#txtPaymentAmount3").val() == "") {
                    ShowHideSection("paymentmodule");
                    $('#txtPaymentAmount3').css('border-color', 'red');
                    returnStatus = false;
                }
            }
        }

        if (returnStatus) {
            return true;
        }
        else {
            return false;
        }
    }

    function GetAllData() {
        //Get Category and Payment Schedule Data and bind it with Hidden Fields
        //hdnCategoryData
        var NoOfCategory = $("#txtNoOfRetailCategory").val();
        var Categories = [];
        for (let i = 1; i <= NoOfCategory; i++) {
            item = {}
            item["SINo"] = 0;
            item["GroupId"] = $("#hdnGroupID").val();
            item["CategoryId"] = $("#ddlCategory" + i).val();
            item["CategoryName"] = $("#ddlCategory option:selected").text();
            item["BrandName"] = $("#txtBrandName" + i).val();
            item["BrandId"] = i;
            item["NoOfOutlets"] = $("#txtNoOfOutlets" + i).val();
            item["NoOfEnrolled"] = $("#txtNoOfEnrolled" + i).val();
            item["BOProduct"] = $("#ddlBOProduct" + i).val();
            item["BillingPartner"] = $("#ddlBillingPartner" + i).val();
            item["BillingProduct"] = $("#ddlBPProduct" + i).val();

            Categories.push(item);
        }
        var CategoriesData = JSON.stringify(Categories);
        $("#hdnCategoryData").val(CategoriesData);

        //hdnPaymentScheduleData
        var NoOfInstallments = $("#txtNoOfInstallments").val();
        var Installments = [];
        for (let i = 1; i <= NoOfInstallments; i++) {
            item = {}
            item["SINo"] = 0;
            item["GroupId"] = $("#hdnGroupID").val();
            item["Installment"] = i;
            item["PaymentDate"] = $("#txtPaymentDate" + i).val();
            item["PaymentAmount"] = $("#txtPaymentAmount" + i).val();
            Installments.push(item);
        }
        $("#hdnPaymentScheduleData").val(JSON.stringify(Installments));
        //alert($("#ddlReferredName").val());
        $("#hdnReferredName").val($("#ddlReferredName").val());

    }

    function LoadEditData() {
        var CategoryString = $("#hdnCategoryData").val();
        var CategoryObj = $.parseJSON(CategoryString);

        ShowRetailCategory();

        for (let i = 0; i < CategoryObj.length; i++) {
            $("#ddlCategory" + (i + 1)).val(CategoryObj[i].CategoryId);
            $("#txtBrandName" + (i + 1)).val(CategoryObj[i].BrandName);
            $("#txtNoOfOutlets" + (i + 1)).val(CategoryObj[i].NoOfOutlets);
            $("#txtNoOfEnrolled" + (i + 1)).val(CategoryObj[i].NoOfEnrolled);
            $("#ddlBOProduct" + (i + 1)).val(CategoryObj[i].BOProduct);
            if (CategoryObj[i].BOProduct == 1) {
                $("#ddlBillingPartner" + (i + 1)).val(CategoryObj[i].BillingPartner);
                FillBillingPartnerProducts($("#ddlBillingPartner" + (i + 1)).val(), i + 1, CategoryObj[i].BillingProduct);

                $("#ddlBPProduct" + (i + 1)).val(CategoryObj[i].BillingProduct);
            }
            else {
                $("#ddlBillingPartner" + (i + 1)).attr("disabled", true);
                $("#ddlBPProduct" + (i + 1)).attr("disabled", true);
            }
        }
        if ($("#ddlPaymentFrequency option:selected").text() == "Installments") {
            $("#dvPaymentSection").show();
            $("#dvAdvanceAmount").show();
        }

        var InstallmentString = $("#hdnPaymentScheduleData").val();
        var InstallmentObj = $.parseJSON(InstallmentString);
        ShowInstallments();
        for (let i = 0; i < InstallmentObj.length; i++) {
            $("#txtPaymentDate" + (i + 1)).val(InstallmentObj[i].PaymentDateStr);
            $("#txtPaymentAmount" + (i + 1)).val(InstallmentObj[i].PaymentAmount);
        }
        if ($("#txtGSTRate").val() != "") {
            $("#txtGSTRate").show();
        }
        if ($("#ddlIsMobileApp option:selected").text() == "Yes") {
            $("#txtMobileAppDescription").attr("readonly", false);
        }
        else {
            $("#txtMobileAppDescription").attr("readonly", true);
            $("#txtMobileAppDescription").val("");
        }
        FillRefferedName($("#ddlReferredby").val(), $("#hdnReferredName").val());
    }

    function FillBillingPartnerProducts(id,dllId, setId)
    {

        if ($("#ddlBillingPartner" + dllId+" option:selected").text() != "Please Select") {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetBillingPartnerProduct", "CustomerOnBoarding")',
                    data: '{BPId: ' + JSON.stringify(id) + '}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        $("#ddlBPProduct" + dllId).empty();
                        $.each(result, function () {
                            $("#ddlBPProduct" + dllId).append($("<option />").val(this.Value).text(this.Text));
                        });
                        if (setId != "") {
                            $("#ddlBPProduct" + dllId).val(setId);
                        }
                    },
                    error: function (result) {
                        //console.log(result.responseText);
                    }
                });
            }
            else {
                $("#ddlBPProduct" + dllId).empty();
                $("#ddlBPProduct" + dllId).append($("<option />").val(0).text("Please Select"));
            }
    }

    function FillRefferedName(id,refName) {
        if (id == 1 || id == 3 || id == 4) {

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetRefferedName", "CustomerOnBoarding")',
                    data: '{SourceType: ' + JSON.stringify(id) + '}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        $("#ddlReferredName").empty();
                        $.each(result, function () {
                            $("#ddlReferredName").append($("<option />").val(this.Value).text(this.Text));
                        });
                        if (refName != "") {
                            $("#ddlReferredName").val(refName);
                        }
                        $("#ddlReferredName").show();
                        $("#txtReferredName").hide();
                    },
                    error: function (result) {
                        //console.log(result.responseText);
                    }
                });
        }
        else
        {
            if ($("#ddlReferredby option:selected").text() == "Please Select") {
                $("#ddlReferredName").empty();
                $("#ddlReferredName").append($("<option />").val(0).text("Please Select"));
                $("#ddlReferredName").show();
                $("#txtReferredName").hide();
            }
            else if ($("#ddlReferredby option:selected").text() == "Cold Call")
            {
                $("#ddlReferredName").hide();
                $("#txtReferredName").hide();
            }
            else {
                $("#ddlReferredName").empty();
                $("#ddlReferredName").hide();
                $("#txtReferredName").show();
                $("#txtReferredName").val(refName);

            }
        }
    }

    function CheckOutletData(buttonType) {
        if ($("#hdnOutletSubmit").val() == "0") {
            var returnStatus = true;
            if (buttonType == 'CSUpdate') {
                var noOfOutlet = $("#hdnOutletCount").val();
                $("#hdnCustomerStatus").val("CSUpdate");
                //alert(noOfOutlet)
                for (var i = 1; i <= noOfOutlet; i++) {
                    if ($("#txtOutletName" + i).val() == "") {
                        ShowHideSection("outletdetails");
                        $('#txtOutletName' + i).css('border-color', 'red');
                        returnStatus = false;
                    }
                    if ($("#txtAreaName" + i).val() == "") {
                        ShowHideSection("outletdetails");
                        $('#txtAreaName' + i).css('border-color', 'red');
                        returnStatus = false;
                    }
                    if ($("#txtAuthorisedPerson" + i).val() == "") {
                        ShowHideSection("outletdetails");
                        $('#txtAuthorisedPerson' + i).css('border-color', 'red');
                        returnStatus = false;
                    }
                    if ($("#txtRegisterMobileNo" + i).val() == "") {
                        ShowHideSection("outletdetails");
                        $('#txtRegisterMobileNo' + i).css('border-color', 'red');
                        returnStatus = false;
                    }
                    if ($("#txtRegisterEmail" + i).val() == "") {
                        ShowHideSection("outletdetails");
                        $('#txtRegisterEmail' + i).css('border-color', 'red');
                        returnStatus = false;
                    }
                    if ($("#txtAddress" + i).val() == "") {
                        ShowHideSection("outletdetails");
                        $('#txtAddress' + i).css('border-color', 'red');
                        returnStatus = false;
                    }
                    if ($("#txtLatitude" + i).val() == "") {
                        ShowHideSection("outletdetails");
                        $('#txtLatitude' + i).css('border-color', 'red');
                        returnStatus = false;
                    }
                    if ($("#txtLongitude" + i).val() == "") {
                        ShowHideSection("outletdetails");
                        $('#txtLongitude' + i).css('border-color', 'red');
                        returnStatus = false;
                    }
                    if ($("#ddlState" + i + " option:selected").text() == "Please Select") {
                        ShowHideSection("outletdetails");
                        $("#ddlState" + i).css('border-color', 'red');
                        returnStatus = false;
                    }

                    if ($("#ddlCity" + i + " option:selected").text() == "Please Select") {
                        ShowHideSection("outletdetails");
                        $("#ddlCity" + i).css('border-color', 'red');
                        returnStatus = false;
                    }
                    if ($("#txtPinCode" + i).val() == "") {
                        ShowHideSection("outletdetails");
                        $('#txtPinCode' + i).css('border-color', 'red');
                        returnStatus = false;
                    }
                }
            }

            if (returnStatus) {
                var outletCount = $("#hdnOutletCount").val();
                var Outlets = [];
                for (let i = 1; i <= outletCount; i++) {
                    item = {}
                    item["Id"] = $("#hdnID" + i).val();
                    item["GroupId"] = $("#hdnGroupID").val();
                    item["BrandId"] = $("#hdnBrandID" + i).val();
                    item["OutletId"] = $("#hdnOutletID" + i).val();
                    item["OutletName"] = $("#txtOutletName" + i).val();
                    item["AreaName"] = $("#txtAreaName" + i).val();
                    item["AuthorisedPerson"] = $("#txtAuthorisedPerson" + i).val();
                    item["RegisterMobileNo"] = $("#txtRegisterMobileNo" + i).val();
                    item["RegisterEmail"] = $("#txtRegisterEmail" + i).val();
                    item["Address"] = $("#txtAddress" + i).val();
                    item["Latitude"] = $("#txtLatitude" + i).val();
                    item["Longitude"] = $("#txtLongitude" + i).val();
                    item["City"] = $("#ddlCity" + i).val();
                    item["PinCode"] = $("#txtPinCode" + i).val();
                    item["State"] = $("#ddlState" + i).val();

                    Outlets.push(item);
                }
                var OutletsData = JSON.stringify(Outlets);
                $("#hdnOutletData").val(OutletsData);
                cuteAlert({
                    type: "question",
                    title: "Are you sure?",
                    message: "Once you submit, you will not be able to change data",
                    confirmText: "Okay",
                    cancelText: "Cancel"
                }).then((e) => {
                    if (e == ("confirm")) {
                        $("#hdnOutletSubmit").val("1");
                        $("#btnCustomerSave").click();
                    }
                })
                return true;

            }
            else {
                cuteAlert({
                    type: "error",
                    title: "Oops..",
                    message: "Please enter Required fields",
                    buttonText: "Okay"
                })
                return false;
            }
        }
    }

    function SendForApproval() {
        cuteAlert({
            type: "question",
            title: "Are you sure?",
            message: "You want to submit all configuration for Approval",
            confirmText: "Okay",
            cancelText: "Cancel"
        }).then((e) => {
            if (e == ("confirm")) {
                 $("#divLoader").show();
        $.ajax({
            type: "POST",
            url: '@Url.Action("SendForApproval", "CustomerOnBoarding")',
            data: '{GroupId: ' + JSON.stringify($("#hdnGroupID").val()) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                console.log(result)
                if (result == true) {
                    cuteAlert({
                        type: "success",
                        title: "Saved",
                        message: "Configuration sent for approval",
                        buttonText: "Okay"
                    })
                    location.reload();
                    $("#divLoader").hide();
                }
                else {
                    cuteAlert({
                        type: "error",
                        title: "Oops..",
                        message: "There is a problem in sending for approval",
                        buttonText: "Okay"
                    })
                    $("#divLoader").hide();
                }
            },
            error: function (result) {
                //console.log(result.responseText)
            }
        });
            }
        })


    }

</script>

<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
