
@model WebApp.ViewModel.OnBoardingSalesViewModel




<div class="app-main__inner">
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <b>Select Brand</b>@Html.DropDownListFor(x => Model.lstBrands.Count, new SelectList(Model.lstBrands, "Value", "Text"), htmlAttributes: new { @class = "input50", @id = "ddlBrandsComm" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <b>Point Value In Rs</b> @Html.TextBoxFor(model => model.objpointsearnruleconfig.OnePointValueInRs, new { @class = "input50", @id = "txtpointvalue" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <b>Earn Point Level</b> &nbsp;
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.EarnPointLevel, "InvoiceAmount", new { @id = "rbgearnpointlevelinvoiceamt", @class = "radiolevel" }) Invoice Amount
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.EarnPointLevel, "Department", new { @id = "rbgearnpointleveldepartment", @class = "radiolevel" }) Department
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.EarnPointLevel, "Product", new { @id = "rbgearnpointlevelproduct", @class = "radiolevel" }) Product
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.EarnPointLevel, "Category", new { @id = "rbgearnpointlevelCategory", @class = "radiolevel" }) Category
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.EarnPointLevel, "SubCategory", new { @id = "rbgearnpointlevelsubcategory", @class = "radiolevel" }) Sub Category
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.EarnPointLevel, "Brand", new { @id = "rbgearnpointlevelbrand", @class = "radiolevel" }) Brand

            @*@foreach (var item in Model.lstearnpoint)
                {
                    @Html.RadioButtonFor(x => x.lstearnpoint, item.EarnPointLevelId, new { @id = "rbgearnpointlevel" + item.EarnPointLevelId })@:&nbsp;
                    @item.EarnPointLevelName
                    @:&nbsp;
                }*@
        </div>
    </div>
    <div class="row">
        @*jwl making box*@
        <div class="col-md-12 col-sm-12" id="divjel" style="display:none;">
            <b>Type</b>
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.EarnOnMaking, "Making", new { @id = "rdbMaking", @class = "jwllevel" }) Making
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.EarnOnFullAmt, "FullAmount", new { @id = "rdbFullAmt", @class = "jwllevel" }) Full Amount
        </div>
        @*common fixed box*@
        <div class="col-md-12 col-sm-12" id="divnonjel" style="display:none;">
            <b>Type</b>
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.EarnPointLevelType, "commonFixed", new { @id = "rdbFixed" }) Fixed
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.EarnPointLevelType, "commonSlab", new { @id = "rdbSlab" }) Slab
        </div>
    </div>
    <div class="row">
        @*making fixed box*@
        <div class="col-md-12 col-sm-12" id="divmakingjwl" style="display:none;">
            <b>Type</b>
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.EarnPointLevelType, "makingFixed", new { @id = "rdbmakingFixed", @class = "makingfixedorslab" }) Fixed
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.EarnPointLevelType, "makingSlab", new { @id = "rdbmakingSlab", @class = "makingfixedorslab" }) Slab
        </div>
        @*making slab box*@
        <div class="col-md-6 col-sm-6" id="divslab" style="display:none;">
            <b>Slab Type</b>
            @Html.RadioButtonFor(model => model.objearnpointslab.SlabType, true, new { @id = "rdbmakingFrmToPercentage" }) Slab In Percentage
            @Html.RadioButtonFor(model => model.objearnpointslab.SlabType, false, new { @id = "rdbmakingFrmToRs" }) Slab In RS
            @*<div class="row" id="slabdynamictxt">
                    <div id='TextBoxesGroup'>
                        <div id="TextBoxDiv">
                            <label>From </label><input type='textbox' id='textbox1' placeholder="From">
                            <label>To </label><input type='textbox' id='textbox2' placeholder="To">
                        </div>
                        <input type='button' value='+' id='addButton'>
                        <input type='button' value='-' id='removeButton'>
                    </div>
                </div>*@
        </div>

    </div>
    @* jwl making fixed %with box*@
    <div class="row">
        <div class="col-md-12 col-sm-12" id="divmakingfixed" style="display:none;">
            <b>Percentage</b> @Html.DropDownListFor(model => model.objpointsearnruleconfig.PercentageType, new SelectList(Model.Percentage(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input50", @id = "ddlmakingpercentage" })
            @Html.TextBoxFor(model => model.objpointsearnruleconfig.FixedEarnPointPecentageWith, new { @class = "input50", @id = "txtmakingPercentagewith", style = "display: none;" })
            @Html.TextBoxFor(model => model.objpointsearnruleconfig.FixedEarnPointPercentage, new { @class = "input50", @id = "txtmakingPercentage", style = "display: none;" })
        </div>
        @*Full amt slab box*@
        <div class="col-md-6 col-sm-6" id="divfullamtslab" style="display:none;">
            <b>Slab Type</b>
            @Html.RadioButtonFor(model => model.objearnpointslab.SlabType, "FullamtSlabIn%", new { @id = "rdbfullamtFrmToPercentage" }) Slab In Percentage
            @Html.RadioButtonFor(model => model.objearnpointslab.SlabType, "FullamtSlabInRS", new { @id = "rdbfullamtFrmToRs" }) Slab In RS
            @*<div class="row" id="slabdynamictxt">
                    <div id='TextBoxesGroup2'>
                        <div id="TextBoxDiv1">
                            <label>From </label><input type='textbox' id='textbox1' placeholder="From">
                            <label>To </label><input type='textbox' id='textbox2' placeholder="To">
                        </div>
                        <input type='button' value='+' id='addButton2'>
                        <input type='button' value='-' id='removeButton2'>
                    </div>
                </div>*@


        </div>
    </div>
    <div class="row">
        @*fullamt gstnongst box*@
        <div class="col-md-12 col-sm-12" id="divfullamt" style="display:none;">
            <b>Type</b>
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.EarnFullAmtWithGst, "FullamtWithGST", new { @id = "rdbGST", @class = "fullamtGstorNongst" }) With GST
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.EarnFullAmtWithoutGst, "FullamtNonGST", new { @id = "rdbNonGST", @class = "fullamtGstorNongst" }) Non GST
        </div>
    </div>
    <div class="row">
        @* jwl fullamt fixed percentage box*@
        <div class="col-md-12 col-sm-12" id="divfullamtwithGST" style="display:none;">
            <b>Type</b>
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.EarnFullAmtWithGst, "Fullamtwith%", new { @id = "rdbfullamtFixed", @class = "fullamtfixedorslab" }) Fixed
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.EarnFullAmtWithGst, "Fullamtfixed%", new { @id = "rdbfullamtSlab", @class = "fullamtfixedorslab" }) Slab
        </div>
        @*making slab box*@
        <div class="col-md-6 col-sm-6" id="divmakingslab" style="display:none;">
            <b>Slab Type</b>
            @Html.RadioButtonFor(model => model.objearnpointslab.SlabType, "makingslabin%", new { @id = "rdbmakingFrmToPercentage",@class = "makingslabtype" }) Slab In Percentage
            @Html.RadioButtonFor(model => model.objearnpointslab.SlabType, "makingslabinRs", new { @id = "rdbmakingFrmToRs", @class = "makingslabtype" }) Slab In RS
            <div class="row" id="slabdynamictxt">
                <div id='TextBoxesGroup'>
                    <div id="TextBoxDiv0">
                        <label>From </label><input type='textbox' name="textboxfrom" id='textboxfrom0' placeholder="From" class="input50">
                        <label>To </label><input type='textbox' name="textboxto" id='textboxto0' placeholder="To" class="input50">
                    </div>
                    <input type='button' value='+' id='addButton'>
                    <input type='button' value='-' id='removeButton'>
                </div>


            </div>
        </div>
    </div>
    @* jwl fullamt fixed %with box*@
    <div class="row" id="divfullamtfixed" style="display:none;">
        <b>Percentage</b> @Html.DropDownListFor(model => model.objpointsearnruleconfig.PercentageType, new SelectList(Model.Percentage(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input50", @id = "ddlFullamtpercentage" })
        @Html.TextBoxFor(model => model.objpointsearnruleconfig.FixedEarnPointPecentageWith, new { @class = "input50", @id = "txtfullAmtWithGstPercentagewith", style = "display: none;" })
        @Html.TextBoxFor(model => model.objpointsearnruleconfig.FixedEarnPointPercentage, new { @class = "input50", @id = "txtfullAmtWithGstPercentage", style = "display: none;" })

    </div>
    @*jwl full amt % with Incremented box*@
    <div class="row">
        <div class="col-md-6 col-sm-6" id="divfullamtpercentagewithincrement" style="display:none;">
            <b>Increment</b>
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.IncrementedValue, "jwlfullamtsingle", new { @id = "rdbfullamtsingle", @class = "fullamtincremented" }) Single
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.IncrementedValue, "jwlfullamtcumulative", new { @id = "rdbfullamtcumulative", @class = "fullamtincremented" }) Cumulative
        </div>

    </div>
    @*jwl full amt incremented single value or cumulative box*@
    <div class="row">
        <div class="col-md-6 col-sm-6" id="divfullamtincrementedpersentage" style="display:none;">
            <b>Percentage</b> @Html.DropDownListFor(model => model.objpointsearnruleconfig.PercentageType, new SelectList(Model.Percentage(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input50", @id = "ddlfullamtincrementedpercentage" })
            @Html.TextBoxFor(model => model.objpointsearnruleconfig.IncrementedpercentageWith, new { @class = "input50", @id = "txtfullamtIncrementpercentagewith", style = "display: none;" })
            @Html.TextBoxFor(model => model.objpointsearnruleconfig.IncrementedFixedPercentage, new { @class = "input50", @id = "txtfullamtIncrementpercentage", style = "display: none;" })

        </div>
    </div>
    <div class="row">
        @*non jwl 1st fixed percentage box*@
        <div class="col-md-6 col-sm-6" id="divfixed" style="display:none;">
            <b>Percentage</b> @Html.DropDownListFor(model => model.objpointsearnruleconfig.PercentageType, new SelectList(Model.Percentage(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input50", @id = "ddlpercentage" })
            @Html.TextBoxFor(model => model.objpointsearnruleconfig.FixedEarnPointPecentageWith, new { @class = "input50", @id = "txtpercentagewith", style = "display: none;" })
            @Html.TextBoxFor(model => model.objpointsearnruleconfig.FixedEarnPointPercentage, new { @class = "input50", @id = "txtpercentage", style = "display: none;" })

        </div>
        @*slab box*@
        <div class="col-md-6 col-sm-6" id="divslab" style="display:none;">
            <b>Slab Type</b>
            @Html.RadioButtonFor(model => model.objearnpointslab.SlabType, "commonslabin%", new { @id = "rdbFrmToPercentage" }) Slab In Percentage
            @Html.RadioButtonFor(model => model.objearnpointslab.SlabType, "commonSlabInRs", new { @id = "rdbFrmToRs" }) Slab In RS
            @*<div class="row" id="slabdynamictxt">
                    <div id='TextBoxesGroup1'>
                        <div id="TextBoxDiv1">
                            <label>From </label><input type='textbox' id='textbox1' placeholder="From">
                            <label>To </label><input type='textbox' id='textbox2' placeholder="To">
                        </div>
                        <input type='button' value='+' id='addButton1'>
                        <input type='button' value='-' id='removeButton1'>
                    </div>
                </div>*@
        </div>

    </div>
    @*slab direct or telescope box*@
    <div class="row">
        <div class="col-md-6 col-sm-6" id="divslabDirectTelescoping" style="display:none;">
            <b>Slab Type</b>
            @Html.RadioButtonFor(model => model.objearnpointslab.EarnSlab, "commonslabdirect", new { @id = "rdbDirect" }) Direct
            @Html.RadioButtonFor(model => model.objearnpointslab.EarnSlab, "commonslabtelescoping", new { @id = "rdbTelescoping" }) Telescoping

        </div>

    </div>
    @*% with Incremented box*@
    <div class="row">
        <div class="col-md-6 col-sm-6" id="divincrement" style="display:none;">
            <b>Increment</b>
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.IncrementedValue, "commonincrementedsingle", new { @id = "rdbsingle" }) Single
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.IncrementedValue, "commonincrementedcumulative", new { @id = "rdbcumulative" }) Cumulative
        </div>

    </div>
    @*incremented single value or cumulative box*@
    <div class="row">
        <div class="col-md-6 col-sm-6" id="divincrementedpersentage" style="display:none;">
            <b>Percentage</b> @Html.DropDownListFor(model => model.objpointsearnruleconfig.PercentageType, new SelectList(Model.Percentage(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input50", @id = "ddlincrementedpercentage" })
            @Html.TextBoxFor(model => model.objpointsearnruleconfig.IncrementedpercentageWith, new { @class = "input50", @id = "txtIncrementpercentagewith", style = "display: none;" })
            @Html.TextBoxFor(model => model.objpointsearnruleconfig.IncrementedFixedPercentage, new { @class = "input50", @id = "txtIncrementpercentage", style = "display: none;" })

        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <b>Block For Earn</b> &nbsp;

            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.BlockOnEarnType, "InvoiceAmount", new { @id = "rbgburnforearnpointlevelinvoiceamt", @class = "Burnforearnlevel" }) Invoice Amount
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.BlockOnEarnType, "Department", new { @id = "rbgburnforearnpointleveldepartment", @class = "Burnforearnlevel" }) Department
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.BlockOnEarnType, "Product", new { @id = "rbgburnforearnpointlevelproduct", @class = "Burnforearnlevel" }) Product
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.BlockOnEarnType, "Category", new { @id = "rbgburnforearnpointlevelCategory", @class = "Burnforearnlevel" }) Category
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.BlockOnEarnType, "SubCategory", new { @id = "rbgburnforearnpointlevelsubcategory", @class = "Burnforearnlevel" }) Sub Category
            @Html.RadioButtonFor(model => model.objpointsearnruleconfig.BlockOnEarnType, "Brand", new { @id = "rbgburnforearnpointlevelbrand", @class = "Burnforearnlevel" }) Brand

        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-sm-12" id="divblockearnInvamtMinMax">
            <b>Min Amount</b>  @Html.TextBoxFor(model => model.objpointsearnruleconfig.BlockOnInvoiceAmtMin, new { @class = "input50", @id = "txtBlockEarnMin" })
            <b>Max Amount</b> @Html.TextBoxFor(model => model.objpointsearnruleconfig.BlockOnInvoiceAmtMax, new { @class = "input50", @id = "txtBlockEarnMax" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-sm-12 pull-right mb-3 mt-3">
            <button type="submit" id="btnRuleSave" class="btn btn-primary pull-right" style="margin-right:10px;" onclick="AddEarnRule();">Save</button>
            <button type="button" id="btnRuleCancel" class="btn btn-primary pull-right" style="margin-right:10px;" onclick="ClearAll();">cancel</button>

        </div>
    </div>
</div>



<script>
            $(document).ready(function () {
                var categoryData = $("#hdnCategoryData").val();
                var CategoryObj = $.parseJSON(categoryData);
                var counter = 2;


                $("input[type='radio'].radiolevel").change(function () {
                    console.log(CategoryObj[0].CategoryId);
                    if (CategoryObj[0].CategoryId == 8) {
                        $("#divjel").show();
                        $("#divnonjel").hide();
                    }
                    else {
                        $("#divjel").hide();
                        $("#divnonjel").show();
                    }
                });
                $("#rdbMaking").change(function () {
                    $("#divmakingjwl").show();//divmakingfixed

                });
                $("#rdbmakingFixed").change(function () {
                    $("#divmakingfixed").show();//rdbmakingSlab
                    $("#divmakingslab").hide();
                });
                $("#rdbmakingSlab").change(function () {
                    $("#divmakingslab").show();//rdbmakingSlab
                    $("#divmakingfixed").hide();
                });
                $("#rdbFullAmt").change(function () {
                    $("#divnonjel").hide();
                    $("#divmakingslab").hide();
                    $("#divmakingfixed").hide();
                    $("#divmakingjwl").hide();
                    $("#divfullamt").show();
                    //divmakingjwl
                });//rdbfullamtsingle
                $("#rdbfullamtsingle").change(function () {
                    $("#divfullamtincrementedpersentage").show();

                });
                $("#rdbfullamtcumulative").change(function () {
                    $("#divfullamtincrementedpersentage").show();

                });
                $("#rdbFixed").change(function () {
                    $("#divfixed").show();
                    $("#divslab").hide();
                });
                $("#rdbSlab").change(function () {
                    $("#divfixed").hide();
                    $("#divslab").show();
                });
                $("#ddlpercentage").change(function () {
                    console.log(666);
                    if ($("#ddlpercentage").val() == 'percentwith') {
                        $("#txtpercentagewith").show();
                        $("#txtpercentage").hide();
                    }
                    else if ($("#ddlpercentage").val() == 'fixedpercentage') {
                        $("#txtpercentage").show();
                        $("#divincrement").hide();
                        $("#txtpercentagewith").hide();
                    }
                });//ddlincrementedpercentage
                $("#ddlincrementedpercentage").change(function () {
                    console.log(555);
                    if ($("#ddlincrementedpercentage").val() == 'percentwith') {
                        $("#txtIncrementpercentagewith").show();
                        // $("#txtIncrementpercentage").hide();
                    }
                    else if ($("#ddlincrementedpercentage").val() == 'fixedpercentage') {
                        $("#txtIncrementpercentage").show();
                        $("#divincrementedpersentage").hide();
                        $("#txtIncrementpercentagewith").hide();
                    }
                });
                $("#rdbsingle").change(function () {

                    $("#divincrementedpersentage").show();
                });
                $("#rdbGST").change(function () {
                    $("#divfullamtwithGST").show();
                });
                $("#rdbNonGST").change(function () {
                    $("#divfullamtwithGST").show();

                });
                $("#rdbfullamtFixed").change(function () {
                    $("#divfullamtfixed").show();
                    $("#divfullamtwithGST").show();
                    $("#divfullamtslab").hide();

                });
                $("#rdbfullamtSlab").change(function () {
                    $("#divfullamtslab").show();
                    $("#divfullamtwithGST").show();
                    $("#divfullamtfixed").hide();

                });
                $("#ddlFullamtpercentage").change(function () {
                    console.log(444);
                    if ($("#ddlFullamtpercentage").val() == 'percentwith') {
                        $("#txtfullAmtWithGstPercentagewith").show();
                        $("#divfullamtpercentagewithincrement").show();
                        $("#txtfullAmtWithGstPercentage").hide();//ddlmakingpercentage
                    }
                    else if ($("#ddlFullamtpercentage").val() == 'fixedpercentage') {
                        $("#txtfullAmtWithGstPercentage").show();
                        $("#divfullamtpercentagewithincrement").hide();
                        $("#txtfullAmtWithGstPercentagewith").hide();
                    }
                    else {
                        $("#txtfullAmtWithGstPercentage").hide();
                        $("#txtfullAmtWithGstPercentagewith").hide();
                    }
                });
                $("#ddlmakingpercentage").change(function () {
                    console.log(111);
                    if ($("#ddlmakingpercentage").val() == 'percentwith') {
                        console.log(111);
                        $("#txtmakingPercentagewith").show();
                        //  $("#divfullamtpercentagewithincrement").show();//ddlmakingpercentage
                    }
                    else if ($("#ddlmakingpercentage").val() == 'fixedpercentage') {
                        console.log(222);
                        $("#txtmakingPercentage").show();
                        // $("#divfullamtpercentagewithincrement").hide();
                        $("#txtmakingPercentagewith").hide();
                    }
                    else {
                        $("#txtmakingPercentagewith").hide();
                        $("#txtmakingPercentage").hide();
                    }
                });
                $("#ddlincrementedpercentage").change(function () {
                    console.log(333);
                    if ($("#ddlincrementedpercentage").val() == 'percentwith') {
                        // $("#divincrement").show();
                    }
                    else if ($("#ddlincrementedpercentage").val() == 'fixedpercentage') {
                        // $("#divincrement").hide();
                    }
                });
                $("#addButton").click(function () {

                    if (counter > 15) {
                        alert("Only 15 textboxes allow");
                        return false;
                    }
                    var newTextBoxDiv = $(document.createElement('div'))
                        .attr("id", 'TextBoxDiv' + counter);
                   // var newTextBoxDiv = $('#slabdynamictxt');
                    newTextBoxDiv.after().html(
                        '<input type="text" name="textboxfrom' + counter +
                        '" id="textboxfrom' + counter + '" value="" class="input50" placeholder="From" >' + '&nbsp;&nbsp;' + '<input type="text" name="textboxto' + counter +
                        '" id="textboxto' + counter + '" value="" class="input50" placeholder="To">');

                    newTextBoxDiv.appendTo("#TextBoxesGroup");
                    counter++;
                });

                $("#removeButton").click(function () {
                    if (counter == 1) {
                        alert("No more textbox to remove");
                        return false;
                    }
                    counter--;
                    $("#TextBoxDiv" + counter).remove();

                });
            });
    function AddEarnRule() {
        var categoryData = $("#hdnCategoryData").val();
        var CategoryObj = $.parseJSON(categoryData);
        var GroupId = $("#hdnGroupID").val();

        console.log(GroupId);

                var returnStatus = true;
                if ($("#txtpointvalue").val() == "") {
                    $('#txtpointvalue').css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("input[type='radio'].radiolevel:checked").length == 0) {
                   // console.log($("input[type='radio'].radiolevel:checked").val());
                    $("input[type='radio'].radiolevel").css('border-color', 'red');
                    returnStatus = false;
                }
                if ($("input[type='radio'].Burnforearnlevel:checked").length == 0) {
                    // console.log($("input[type='radio'].radiolevel:checked").val());
                    $("input[type='radio'].Burnforearnlevel").css('border-color', 'red');
                    returnStatus = false;
        }
        //if ($('#ddlBrandsComm').val() > 0) {
        //    $('#ddlBrandsComm').css('border-color', 'red');
        //    returnStatus = false;
        //}
                if (returnStatus == true) {
                    var Earnrule = [];
                    var BlockOnearnRule = [];
                    item = {}
                    itemburn = {}
                    item["CategoryId"] = CategoryObj[0].CategoryId;
                    item["Groupid"] = GroupId;
                    item["brandid"] = $("#ddlBrandsComm").val();
                    console.log($("#ddlBrandsComm").val());
                    item["pointvalue"] = $("#txtpointvalue").val();
                    item["earnlevel"] = $("input[type='radio'].radiolevel:checked").val();
                    item["jwlLevel"] = $("input[type='radio'].jwllevel:checked").val();

                   // console.log($("input[type='radio'].makingfixedorslab:checked").val());
                    if ($("input[type='radio'].jwllevel:checked").val() == "Making") {
                        item["makingfixedorslab"] = $("input[type='radio'].makingfixedorslab:checked").val();
                        if ($("input[type='radio'].makingfixedorslab:checked").val() == "makingFixed") {
                            item["making%withorFixed"] = $("#ddlmakingpercentage").val();
                            if ($("#ddlmakingpercentage").val() == 'fixedpercentage') {
                                item["makingFixed%"] = $("#txtmakingPercentage").val();
                            }
                            else if ($("#ddlmakingpercentage").val() == 'percentwith') {
                                item["making%with"] = $("#txtmakingPercentagewith").val();
                            }
                        }
                        if ($("input[type='radio'].makingfixedorslab:checked").val() == "makingSlab") {
                            item["slabtype"] = $("input[type='radio'].makingslabtype:checked").val();
                            var slabs = [];

                            $('[id^=TextBoxDiv]').each(function (i, item) {
                                var id = item.id.substr(10);
                                var fromval = $('input[id="textboxfrom' + id + '"]').val();
                                var Toval = $('input[id="textboxto' + id + '"]').val();
                                slabs.push(fromval +'-' +Toval);
                                console.log(slabs);
                            });
                            item["slab"] = slabs;
                        }
                    }
                    if ($("input[type='radio'].jwllevel:checked").val() == "FullAmount") {
                        item["fullamtwithgstornongst"] = $("input[type='radio'].fullamtGstorNongst:checked").val();
                        item["fullamtfixedorslab"] = $("input[type='radio'].fullamtfixedorslab:checked").val();
                        item["fullamt%withorfixed%"] = $("#ddlFullamtpercentage").val();
                        if ($("#ddlFullamtpercentage").val() == 'fixedpercentage') {
                            item["fullamtFixed%"] = $("#txtfullAmtWithGstPercentage").val();
                        }
                        else if ($("#ddlFullamtpercentage").val() == 'percentwith') {
                            item["fullamt%with"] = $("#txtfullAmtWithGstPercentagewith").val();
                            item["fullamtincrement"] = $("input[type='radio'].fullamtincremented:checked").val();
                            if ($("#ddlfullamtincrementedpercentage").val() == 'fixedpercentage') {
                                item["fullamtincrementedfixed%"] = $("#txtfullamtIncrementpercentage").val();
                            }
                            else if ($("#ddlfullamtincrementedpercentage").val() == 'percentwith') {
                                item["fullamtincremented%with"] = $("#txtfullamtIncrementpercentagewith").val();
                            }


                        }
                    }
                    itemburn["Blockonearnrule"] = $("input[type='radio'].Burnforearnlevel:checked").val();
                    if ($("input[type='radio'].Burnforearnlevel:checked").val() == "InvoiceAmount") {
                        itemburn["Minvalofinvamt"] = $("#txtBlockEarnMin").val();
                        itemburn["Maxvalofinvamt"] = $("#txtBlockEarnMax").val();

                    }
                    else {
                        //itemburn["Minvalofinvamt"] = 0.00;
                        //itemburn["Maxvalofinvamt"] = 0.00;
                    }

                    Earnrule.push(item);
                    BlockOnearnRule.push(itemburn);
                    console.log(Earnrule);
                     $("#divLoader").show();
        $.ajax({
            type: "POST",
            url: '@Url.Action("AddEarnRule", "CustomerOnBoarding")',
            data: '{EarnRule: ' + JSON.stringify(JSON.stringify(Earnrule)) + ',BlockOnearnrule: ' + JSON.stringify(JSON.stringify(BlockOnearnRule)) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result) {
                    setTimeout(cuteAlert({
                        type: "success",
                        title: "Save",
                        message: "Record Save Successfully!",
                        buttonText: "Okay"
                    }), 10000);
                }
                else {
                    setTimeout(cuteAlert({
                        type: "error",
                        title: "OOPS",
                        message: "Some Problem encountered. Please contact Administrator!",
                        buttonText: "Okay"
                    }), 10000);
                }
                $("#divLoader").hide();
            },
            error: function (result) {
                console.log(result.responseText)
                $("#divLoader").hide();
            }
        });
                }
                else {
                    cuteAlert({
                        type: "error",
                        title: "Oops..",
                        message: "Please enter Required fields",
                        buttonText: "Okay"
                    })
                    return false;
                }
            }
            function ClearAll() {

            }
            function checkValidation() {

            }
</script>

<style>
    table.dataTable thead .sorting_asc {
        background: url("https://cdn.datatables.net/1.10.0/images/sort_asc.png") no-repeat center left;
    }

    table.dataTable thead .sorting_desc {
        background: url("https://cdn.datatables.net/1.10.0/images/sort_desc.png") no-repeat center left;
    }

    table.dataTable thead .sorting {
        background: url("https://cdn.datatables.net/1.10.0/images/sort_both.png") no-repeat center left;
    }
</style>
