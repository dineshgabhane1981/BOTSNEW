@model WebApp.ViewModel.CustomerDashboardViewModel
@using BOTS_BL.Models;
@using System.Configuration;

@{
    string baseURL = ConfigurationManager.AppSettings["BaseDocUrl"];
    var userDetails = (CustomerLoginDetail)Session["UserSession"];
    var roleId = userDetails.LoginType;
}


<div class="container-fluid pt-3 pl-3 pr-3">

    <div class="row mb-5 ml-1">
        <div id="dvOutletWiseData">
            <div class="container-fluid pt-3 pl-3 pr-3">
                <div class="col-md-12 col-lg-12">
                    <div class="row">
                        <div class="col search-container">
                            <i class="fas fa-search"></i>
                            <input class="input100" type="text" id="txtSearch" placeholder="Search activity..." />
                        </div>
                    </div>
                    <div class="row mt-3" id="dvActivityData">
                        <div class="table-responsive">
                            <table class="table" id="groupListTable">
                                <thead>
                                    <tr>
                                        <th scope="col" style="text-align:center;">Type</th>
                                        <th scope="col" style="text-align:left;">Group Name</th>
                                        <th scope="col" style="text-align:center;">Category</th>
                                        <th scope="col" style="text-align: left;">City</th>
                                        <th scope="col" style="text-align:center;">Outlets</th>
                                        <th scope="col" style="text-align:center;">CS Name</th>
                                        @*<th scope="col" style="text-align:center;">Billing Product</th>
                                            <th scope="col" style="text-align:center;">Sourced by</th>*@
                                        <th scope="col" style="text-align:center;">Started On</th>
                                        <th scope="col" style="text-align:center;">Renewal On</th>
                                        <th scope="col" style="text-align:center;">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null)
                                    {
                                        foreach (var item in Model.customerListings)
                                        {

                                            WebApp.App_Start.CommonFunctions common = new WebApp.App_Start.CommonFunctions();
                                            string GroupId = common.EncryptString(Convert.ToString(item.GroupId));
                                            <tr>
                                                <td>@item.CustomerType</td>
                                                <td style="width: 100px !important; word-break: break-all;"><a href="#" onclick="OpenStatusPopup(@item.GroupId);">@item.RetailName</a></td>
                                                <td style="text-align:center;">@item.RetailCategory</td>
                                                <td>@item.City</td>
                                                <td style="text-align:center;">@item.OutletCount</td>
                                                <td>@item.RMTeam</td>
                                                @*<td>@item.BillingProductName</td>*@
                                                @*<td>@item.SourcedBy</td>*@
                                                @if (item.StartedOn.HasValue)
                                                {
                                                    <td>@item.StartedOn.Value.ToString("dd-MMM-yyyy")</td>
                                                }
                                                else
                                                {
                                                    <td></td>
                                                }
                                                @if (!string.IsNullOrEmpty(item.RenewalDate))
                                                {
                                                    <td>@item.RenewalDate</td>
                                                }
                                                else
                                                {
                                                    <td></td>
                                                }
                                                <td style="text-align:center; width:160px;">
                                                    @*<a href="@Url.Action("AddNewCustomer", "CustomerManagement", new { groupId = GroupId })" class="login" title="Edit"><img src="~/Content/assets/images/shape_editUser.png" /></a>*@
                                                    <a href="@Url.Action("GoToDashboard", "CustomerManagement", new { groupId = GroupId })" class="login" title="Go To Dashboard"><img src="~/Content/assets/images/GoToDashboard.png" width="30" /></a>
                                                    <a href="@Url.Action("IndexNew", "NameAndMobile", new { groupId = GroupId })" class="login" title="Go To IT Ops"><img src="~/Content/assets/images/itops.png" width="30" /></a>
                                                    <a href="@Url.Action("AllDiscussions", "Discussion", new { groupId = GroupId })" class="login" title="Go To Discussions"><img src="~/Content/assets/images/discussion.png" width="30" /></a>
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        $('#groupListTable').DataTable({
            "aaSorting": [[1, "asc"]],
            "paging": true,
            "ordering": true,
            "info": true,
            "bFilter": true,
            "pageLength": 10,
            "pagingType": "simple_numbers",
            aoColumnDefs: [
                {
                    bSortable: false,
                    aTargets: [-1, -2]
                }
            ]
        });

        $('#groupListTable_filter').hide();

        $('#txtSearch').on('keyup', function () {

            $.fn.dataTable.ext.search.push(function (settings, searchData) {
                var term = $('#txtSearch').val().toLowerCase()
                for (var i = 0; i < searchData.length; i++) {
                    if (searchData[i].toLowerCase().indexOf(term) >= 0) {
                        return true;
                    }
                }
                return false;
            });
            var table = $('#groupListTable').DataTable();
            table.draw();
        });
    });

    function OpenStatusPopup(id) {
        $("#divLoader").show();
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetCustomerConfigDetails", "CustomerManagement")',
            data: '{groupId:' + JSON.stringify(id) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                if (response != null) {
                    $("#dvGroupConfigDetails").html(response);
                    $("#divLoader").hide();
                }
            },
            failure: function (response) {
                $("#divLoader").hide();
            },
            error: function (response) {
                $("#dvGroupConfigDetails").html("");
                $("#dvGroupConfigDetails").html(response.responseText);
                $("#divLoader").hide();
                BindDocListing(id);
                DownLoadDocFile(SLno);
            }

        });

        $("#configModal").show(1000);
    }
    function BindDocListing(id) {
        
        $.ajax({
            type: "POST",
            url: '@Url.Action("ListDocuments", "DocumentLibrary")',
            data: '{GroupId: ' + JSON.stringify(id) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                console.log(result)
                $("#Table").show();
                tableData = [];
                $.map(result, function (item) {
                    optionItem = {}
                    optionItem["SlNo"] = item.SlNo;
                    optionItem["DocumentType"] = item.DocumentType;
                    optionItem["UploadDate"] = item.UploadDateStr;
                    optionItem["Comments"] = item.Comments;
                    tableData.push(optionItem);
                });
                console.log(tableData)
                DrawTable();
                $("#divLoader").hide();
            },
            error: function (result) {
               
                console.log(result.responseText)
            }
        });
    }
    function DrawTable() {

        var table1 = $('#InstanceTable').DataTable();
        table1.destroy();

        var table = $('#InstanceTable').DataTable({
            "aaSorting": [[0, "asc"]],
            "data": tableData,
            "paging": true,
            "ordering": false,
            "info": false,
            "bFilter": false,
            "pageLength": 10,
            "pagingType": "simple_numbers",
            "columns": [
                { data: "DocumentType" },
                { data: "UploadDate" },
                { data: "Comments" },
                {
                    "mData": "SlNo",
                    "mRender": function (data, type, row) {
                        return '<a href="#" onclick="DownLoadDocFile(\'' + data + '\')" class="login" title="Edit"><img src ="../Content/assets/images/Download.png" /></a>';

                    }
                }
            ],
            aoColumnDefs: [
                {
                    bSortable: false,
                    aTargets: []
                }
            ]

        });

        var table = $('#InstanceTable').DataTable();
        table.draw();

    }
    function ShowActivities(id) {
      //  var pType = "Distributors";
        if ($("#dvDiscussionData" + id).is(":visible")) {
            $("#dvDiscussionData" + id).hide(1000);
            $("#trActivities" + id).hide(1000);

            $("#imgExpand" + id).attr("src", "https://blueocktopus.in/bots/Content/assets/images/details_open.png");
        }
        else {
            $("#divLoader").show();
            $.ajax({
                type: "POST",
                 url: '@Url.Action("GetSubDiscussionList", "Discussion")',
                data: '{Id:' + JSON.stringify(id) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    BindActivities(id,response);
                    $("#divLoader").hide();
                },
                failure: function (response) {

                    $("#divLoader").hide();
                }
            });
        }
    }
    function DownLoadDocFile(SLno) {
        var FilterData = [];
        item = {};
        item["SLno"] = SLno;
        FilterData.push(item);
        var data = JSON.stringify(FilterData);
         $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetDownloadDetails", "DocumentLibrary")',
                data: '{jsonData: ' + JSON.stringify(data) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var BaseUrl = $("#baseURL").val();
                    console.log(result)
                    var docurl = '@baseURL' + result;
                    window.open(docurl);
                    $("#divLoader").hide();
                },
                error: function (result) {
                 console.log(result.responseText)
                }
            });
    }
    function BindActivities(id,data) {
        if (data != "") {
            var htmlStr = "<table border=\"2\" style=\"background-color:gray;margin-left: 11px;width: 98%;\" class=\"table\">";
            htmlStr += "<tr style=\"text-align: center;\">"
            htmlStr += "<th scope=\"col\">Updated Date</th>";
            htmlStr += "<th scope=\"col\">Updated By</th>";
            htmlStr += "<th scope=\"col\">Description</th>";
            htmlStr += "<th scope=\"col\">Status</th>";
            htmlStr += "</tr>";

            $.map(data, function (item) {
                var d = new Date();
                d = item.FollowupDate;
                console.log(item.UpdatedDate);
                htmlStr += "<tr style=\"text-align: center;\">"
                htmlStr += "<td>" + item.UpdatedDate + "</td>";
                htmlStr += "<td>" + item.UpdatedBy + "</td>";
                htmlStr += "<td style=\"width: 600px;\">" + item.Description + "</td>";
                htmlStr += "<td style=\"width: 100px;\">" + item.Status + "</td>";
                htmlStr += "</tr>"
            });

            htmlStr += "</table>";
            $("#dvDiscussionData" + id).html(htmlStr);
            console.log(htmlStr);
            //$('tr[id^="trActivities"]').hide(1000);
            //$('div[id^="dvDiscussionData"]').hide(1000);
            $('[id^="imgExpand"]').attr("src", "https://blueocktopus.in/bots/Content/assets/images/details_open.png");

            $("#trActivities" + id).show(1000);

            $("#dvDiscussionData" + id).show(1000);
            $("#imgExpand" + id).attr("src", "https://blueocktopus.in/bots/Content/assets/images/details_close.png");

        }
        else {
            cuteAlert({
                type: "warning",
                title: "Oops..",
                message: "No tracking available",
                buttonText: "Okay"
            })
        }
    }
</script>



