@model WebApp.ViewModel.CustomerDashboardViewModel
@using BOTS_BL.Models;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userDetails = (CustomerLoginDetail)Session["UserSession"];
    var roleId = userDetails.LoginType;
}

<div class="app-main__inner">
    <div class="row mb-3 card">

        <div class="container-fluid pt-3 pl-3 pr-3">
            <span id="spnOnBoarding" onclick="ShowHideOnboarding();" style="text-align:center;font-weight:bold;cursor:pointer;color:blue;"><h4> OnBoarding Customers</h4></span>
            <div class="pt-3 pl-3 pr-3 col-md-12 col-lg-12" id="dvOnboarding" style="display:none;">
                @if (roleId == "1" || roleId == "5")
                {
                    <div class="row">
                        <div class="col search-container">

                        </div>
                        <div style="text-align:right;">
                            <a href="@Url.Action("Index", "CustomerOnBoarding")" title="Add New Customer">  <img src="~/Content/assets/images/AddCustomer.png" /></a>
                        </div>
                    </div>
                }


                <div class="row mb-3 card">
                    <div class="container-fluid pt-3 pl-3 pr-3">
                        <div class="pt-3 pl-3 pr-3 col-md-12 col-lg-12">
                            <div class="row">
                                <div class="col search-container">
                                    <i class="fas fa-search"></i>
                                    <input class="input100" type="text" id="txtSearchOnBoarding" placeholder="Search activity..." />
                                </div>
                            </div>
                            <div class="row mt-3" id="dvOnBoardingData">
                                <div class="table-responsive">
                                    <table class="table" id="OnBoardingTable">
                                        <thead>
                                            <tr>
                                                <th scope="col">GroupId</th>
                                                <th scope="col">Group Name</th>
                                                <th scope="col">Contact No</th>
                                                <th scope="col">City</th>
                                                <th scope="col">Billing Partner</th>
                                                <th scope="col">Payment Status</th>
                                                <th scope="col" style="text-align:center;">Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model != null)
                                            {
                                                if (Model.onBoardingListings != null)
                                                {
                                                    foreach (var item in Model.onBoardingListings)
                                                    {
                                                        WebApp.App_Start.CommonFunctions common = new WebApp.App_Start.CommonFunctions();
                                                        string GroupId = common.EncryptString(Convert.ToString(item.GroupId));
                                                        <tr>
                                                            <td>@item.GroupId</td>
                                                            <td>@item.GroupName</td>
                                                            <td>@item.OwnerMobileNo</td>
                                                            <td>@item.City</td>
                                                            <td>@item.BillingPartnerName</td>
                                                            <td>@item.PaymentStatus</td>
                                                            <td style="text-align:center;">
                                                                <a href="@Url.Action("Index", "CustomerOnBoarding", new { groupId = GroupId })" class="login" title="Edit"><img src="~/Content/assets/images/shape_editUser.png" /></a>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>

            </div>
        </div>

    </div>
    <div id="dvOutletWiseData">
        <div class="row mb-3 card">
            <div class="container-fluid pt-3 pl-3 pr-3">
                <div class="pt-3 pl-3 pr-3 col-md-12 col-lg-12">
                    <div class="row">
                        <div class="col search-container">
                            <i class="fas fa-search"></i>
                            <input class="input100" type="text" id="txtSearch" placeholder="Search activity..." />
                        </div>
                    </div>
                    <div class="row mt-3" id="dvActivityData">
                        <div class="table-responsive">
                            <table class="table" id="groupListTable">
                                <thead>
                                    <tr>
                                        <th scope="col" style="text-align:center;">Retail Name</th>
                                        <th scope="col" style="text-align:center;">Product</th>
                                        <th scope="col" style="text-align:center;">Started On</th>
                                        <th scope="col" style="text-align:center;">Category</th>
                                        <th scope="col" style="text-align:center;">City</th>
                                        <th scope="col" style="text-align:center;">SMS Bal Count</th>
                                        <th scope="col" style="text-align:center;">Renewal On</th>
                                        <th scope="col" style="text-align:center;">Sourced by</th>
                                        <th scope="col" style="text-align:center;">RM Team</th>
                                        <th scope="col" style="text-align:center;">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null)
                                    {

                                        foreach (var item in Model.customerListings)
                                        {

                                            WebApp.App_Start.CommonFunctions common = new WebApp.App_Start.CommonFunctions();
                                            string GroupId = common.EncryptString(Convert.ToString(item.GroupId));
                                            <tr>
                                                <td>@item.RetailName</td>
                                                @if (item.Product == 1)
                                                {
                                                    <td>Octa Plus</td>
                                                }
                                                else
                                                {
                                                    <td>Octa XS</td>
                                                }
                                                <td>@item.StartedOn</td>
                                                <td style="text-align:center;">@item.RetailCategory</td>
                                                <td>@item.City</td>
                                                <td style="text-align:center;">@item.SMSBalCount</td>
                                                <td>@item.RenewalOn</td>
                                                <td>@item.SourcedBy</td>
                                                <td>@item.RMTeam</td>
                                                <td style="text-align:center; width:100px;">
                                                    <a href="@Url.Action("AddNewCustomer", "CustomerManagement", new { groupId = GroupId })" class="login" title="Edit"><img src="~/Content/assets/images/shape_editUser.png" /></a>
                                                    <a href="@Url.Action("GoToDashboard", "CustomerManagement", new { groupId = GroupId })" class="login" title="Go To Dashboard"><img src="~/Content/assets/images/GoToDashboard.png" width="30" /></a>
                                                    <a href="@Url.Action("Index", "ITOperations", new { groupId = GroupId })" class="login" title="Go To IT Ops"><img src="~/Content/assets/images/itops.png" width="30" /></a>
                                                </td>
                                            </tr>
                                        }

                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>


</div>

<script>

    $(document).ready(function () {

        //$.ajax({
        //    url: "https://blueocktopus.in/MobileNewAPI/api/bots/GetToken?username=123&password=123",
        //    method: "GET",      // The HTTP method to use for the request
        //    contentType: "application/json; charset=utf-8",
        //    dataType: "json", // The type of data that you're exerciseecting back

        //    error: function () {

        //        // A function to be called if the request fails.
        //    },

        //    success: function (response) {
        //        console.log(response.data[0]);

        //        $.ajax({
        //            url: "https://blueocktopus.in/MobileNewAPI/api/bots/GetOutletList?GroupId=1051",
        //            method: "GET",      // The HTTP method to use for the request
        //            contentType: "application/json; charset=utf-8",
        //            dataType: "json", // The type of data that you're exerciseecting back
        //            Authorization: 'Bearer ' + response.data[0],
        //            error: function () {
        //                alert(111)
        //                // A function to be called if the request fails.
        //            },

        //            success: function (response) {
        //                alert(222)
        //                console.log(response);

        //                // A function to be called if the request succeeds.
        //            },
        //            complete: function (response) {
        //                alert(333)
        //                // A function to be called when the request finishes
        //            }
        //        });

        //        // A function to be called if the request succeeds.
        //    },
        //    complete: function (response) {

        //        // A function to be called when the request finishes
        //    }
        //});


        $('#groupListTable').DataTable({
            "aaSorting": [[0, "asc"]],
            "paging": true,
            "ordering": true,
            "info": true,
            "bFilter": true,
            "pageLength": 10,
            "pagingType": "simple_numbers",
            aoColumnDefs: [
                {
                    bSortable: false,
                    aTargets: [-1, -2]
                }
            ]
        });

        $('#groupListTable_filter').hide();

        $('#txtSearch').on('keyup', function () {

            $.fn.dataTable.ext.search.push(function (settings, searchData) {
                var term = $('#txtSearch').val().toLowerCase()
                for (var i = 0; i < searchData.length; i++) {
                    if (searchData[i].toLowerCase().indexOf(term) >= 0) {
                        return true;
                    }
                }
                return false;
            });
            var table = $('#groupListTable').DataTable();
            table.draw();
        });

        $('#OnBoardingTable').DataTable({
            "aaSorting": [[0, "asc"]],
            "paging": true,
            "ordering": true,
            "info": true,
            "bFilter": true,
            "pageLength": 10,
            "pagingType": "simple_numbers",
            aoColumnDefs: [
                {
                    bSortable: false,
                    aTargets: [-1, -2]
                }
            ]
        });

        $('#OnBoardingTable_filter').hide();

        $('#txtSearchOnBoarding').on('keyup', function () {

            $.fn.dataTable.ext.search.push(function (settings, searchData) {
                var term = $('#txtSearchOnBoarding').val().toLowerCase()
                for (var i = 0; i < searchData.length; i++) {
                    if (searchData[i].toLowerCase().indexOf(term) >= 0) {
                        return true;
                    }
                }
                return false;
            });
            var table1 = $('#OnBoardingTable').DataTable();
            table1.draw();
        });
    });
    function ShowHideOnboarding() {
        $("#dvOnboarding").toggle(1000);
    }
</script>