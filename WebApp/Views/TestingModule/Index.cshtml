@model WebApp.ViewModel.TestingModuleViewModel
@{ 
    
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_OnBoardingLayout.cshtml";
 }


<style>
    .rbtnClass {
        height: 20px;
        width: 20px;
        vertical-align: middle;
        cursor: pointer;
        margin-left: 10px;
    }

    .app-main__outer {
        background-color: white;
    }
</style>

<div class="multisteps-form__panel p-4 list-box bg-white" data-animation="scaleIn">

    <div class="col-lg-12" style="border: 1px solid grey; border-radius: 12px;">
        <div class="col-lg-12 row">
            <div style="margin-top: 20px;" class="col-md-4 col-lg-12">
                <a href="@Url.Action("CheckerView", "CustomerOnBoarding", new { groupId = ViewBag.GroupId })" class="login" title="Go To Configration sheet" target="_blank">
                    <button type="button" id="btnCheckerView" onclick="" class="btn btn-primary" style="margin-left: 150px; float:right; margin-right: 10px; margin-bottom: 5px;">
                        Configration sheet
                    </button>
                </a>
            </div> <br />

            <div style="margin-top: 20px;" class="col-md-4 col-lg-4">
                Billing Partner
                @Html.DropDownListFor(model => model.billingPartnerId, new SelectList(Model.billingpartners, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @id = "ddlBillingPartner" })
            </div>
            <div style="margin-top: 20px;" class="col-md-4 col-lg-4">
                Outlets
                @Html.DropDownListFor(model => model.outletId, new SelectList(Model.lstOutlets, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input40", @id = "ddlOutlet" })

            </div>
            <div style="float: left; margin-top: 20px; margin-bottom: 20px;" class="col-md-4 col-lg-4">
                Mobile No <input type="text" id="txtMobileNo" class="input50" />
            </div>
        </div>
        <div class="col-lg-12" style="margin-bottom:20px;margin-top:20px;margin-left:50px;margin-right:200px;">
            <input id="rbtnEnrlment" name="campaign" type="radio" checked class="rbtnClass"> Enrollment
            <input id="rbtnEnrlmntWithEarn" name="campaign" type="radio" class="rbtnClass"> Enrollment With Earn
            <input id="rbtnEarn" name="campaign" type="radio" class="rbtnClass"> Earn
            <input id="rbtnBurnValidation" name="campaign" type="radio" class="rbtnClass"> Burn Validation
            <input id="rbtnBurn" name="campaign" type="radio" class="rbtnClass"> Burn
            <input id="rbtnCancel" name="campaign" type="radio" class="rbtnClass"> Cancel
            <input id="rbtnSendOtp" name="campaign" type="radio" class="rbtnClass"> Send OTP
        </div>
    </div>
</div>
<div class="multisteps-form__panel p-4 list-box bg-white" style="border: 1px solid grey; border-radius: 12px;margin:20px;" id="sec7" data-animation="scaleIn">

    @*Enrolment*@
    <div class="multisteps-form__content bg-white" id="dvEnrlment">
        <input type="hidden" id="hdnEnrlmentId" />
        <div class="col-lg-12" style="float: left; border: 1px solid grey; border-radius: 12px; margin-bottom: 10px; margin-top: 10px; ">
             
            <div class=' col-md-4 col-lg-4' id='datetimepicker1' style="float: left; margin-top: 20px; margin-bottom: 20px;">
                Date Time <input type="datetime-local" id="txtDatetime1" class="input80" style="margin-bottom:10px; margin-right:20px;" />          
            </div>
        </div>
        <div class="col-lg-12" style="float: left; border: 1px solid grey; border-radius: 12px; margin-bottom: 10px; margin-top: 10px;">
            <div>
                <div style="float: left; margin-top: 20px;" class="col-md-4 col-lg-4">
                    Request Packet <br />
                    @Html.TextAreaFor(model => model.RequestPacketEnrollnment, new { @class = "input100", @rows = 10, @id = "txtRequestPacket1", tabindex = 4 })
                </div>
                <div style="float: left; margin-top: 20px;" class="col-md-4 col-lg-4">
                    Request URL <br />
                    @Html.TextAreaFor(model => model.RequestURL, new { @class = "input100", @rows = 10, @id = "txtRequestPacketURL1", tabindex = 4 })

                </div>
                <div style="float: left; margin-top: 20px; margin-bottom: 20px;" class="col-md-4 col-lg-4">
                    Response Packet<br /><textarea id="txtResponsePacket1" rows="10" cols="40" class="input100"></textarea>
                </div>
            </div>
        </div>
    </div>

   @*Enrolnment With Earn*@
    <div class="multisteps-form__content bg-white" id="dvEnrlmentWithEarn" style="display:none;">
        <input type="hidden" id="hdnEnrlmentWithEarnId" />
        <div class="col-lg-12" style="float: left; border: 1px solid grey; border-radius: 12px; margin-bottom: 30px; margin-top: 10px; ">
            
            <div style="float: left; margin-top: 20px; margin-bottom: 20px;" class="col-md-12 col-lg-12">
                Invoice No <input type="text" id="txtInvoiceNo2" class="input50" style="margin-bottom: 10px; margin-right: 50px;" />
                Invoice Amt<input type="text" id="txtInvoiceAmt2" class="input50" style="margin-bottom: 10px; margin-right: 50px;" />
                Date Time <input type="date" id="txtDatetime2" class="input50" style="margin-bottom:10px; margin-right:20px;">
            </div>
        </div>
        <div class="col-lg-12" style="float: left; border: 1px solid grey; border-radius: 12px; margin-bottom: 10px; margin-top: 10px; ">
            <div>
                <div style="float: left; margin-top: 20px;" class="col-md-4 col-lg-4">
                    Request Packet <br />
                    @Html.TextAreaFor(model => model.RequestPacketEnrollnmentWithEarn, new { @class = "input100", @rows = 10, @id = "txtRequestPacket2", tabindex = 4 })
                </div>
                <div style="float: left; margin-top: 20px;" class="col-md-4 col-lg-4">
                    Request URL <br />
                    @Html.TextAreaFor(model => model.RequestURL, new { @class = "input100", @rows = 10, @id = "txtRequestPacketURL2", tabindex = 4 })

                </div>
                <div style="float: left; margin-top: 20px; margin-bottom: 20px;" class="col-md-4 col-lg-4">
                    Response Packet<br /><textarea id="txtResponsePacket2" rows="10" cols="40" class="input100"></textarea>
                </div>
            </div>
        </div>
    </div>


    @*Earn*@
    <div class="multisteps-form__content bg-white" id="dvEarn" style="display:none;">
        <input type="hidden" id="hdnEarnId" />
        <div class="col-lg-12" style="float: left; border: 1px solid grey; border-radius: 12px; margin-bottom: 30px; margin-top: 10px; ">
            
            <div style="float: left; margin-top: 20px; margin-bottom: 20px;" class="col-md-12 col-lg-12">
                Invoice No <input type="text" id="txtInvoiceNo3" class="input50" style="margin-bottom: 10px; margin-right: 50px;" />
                Invoice Amt<input type="text" id="txtInvoiceAmt3" class="input50" style="margin-bottom: 10px; margin-right: 50px;" />
                Date Time <input type="date" id="txtDatetime3" class="input50" style="margin-bottom:10px; margin-right:20px;">
            </div>
        </div>
        <div class="col-lg-12" style="float: left; border: 1px solid grey; border-radius: 12px; margin-bottom: 10px; margin-top: 10px; ">
            <div>
                <div style="float: left; margin-top: 20px;" class="col-md-4 col-lg-4">
                    Request Packet <br />
                    @Html.TextAreaFor(model => model.RequestPacketEarn, new { @class = "input100", @rows = 10, @id = "txtRequestPacket3", tabindex = 4 })
                </div>
                <div style="float: left; margin-top: 20px;" class="col-md-4 col-lg-4">
                    Request URL <br />
                    @Html.TextAreaFor(model => model.RequestURL, new { @class = "input100", @rows = 10, @id = "txtRequestPacketURL3", tabindex = 4 })

                </div>
                <div style="float: left; margin-top: 20px; margin-bottom: 20px;" class="col-md-4 col-lg-4">
                    Response Packet<br /><textarea id="txtResponsePacket3" rows="10" cols="40" class="input100"></textarea>
                </div>
            </div>
        </div>
    </div>

    @*Burn Validation*@
    <div class="multisteps-form__content bg-white" id="dvBurnValidation" style="display:none;">
        <input type="hidden" id="hdnBurnValidationId" />
        <div class="col-lg-12" style="float: left; border: 1px solid grey; border-radius: 12px; margin-bottom: 30px; margin-top: 10px; ">
           
            <div style="float: left; margin-top: 20px; margin-bottom: 20px;" class="col-md-12 col-lg-12">
                Invoice No <input type="text" id="txtInvoiceNo4"class="input50" style="margin-bottom: 10px; margin-right: 50px;" />
                Invoice Amt<input type="text" id="txtInvoiceAmt4" class="input50" style="margin-bottom: 10px; margin-right: 50px;" />
                Date Time <input type="date" id="txtDatetime4" class="input50" style="margin-bottom:10px; margin-right:20px;">
            </div>
        </div>
        <div class="col-lg-12" style="float: left; border: 1px solid grey; border-radius: 12px; margin-bottom: 10px; margin-top: 10px; ">
            <div>
                <div style="float: left; margin-top: 20px;" class="col-md-4 col-lg-4">
                    Request Packet <br />
                    @Html.TextAreaFor(model => model.RequestPacketBurnValidation, new { @class = "input100", @rows = 10, @id = "txtRequestPacket4", tabindex = 4 })
                </div>
                <div style="float: left; margin-top: 20px;" class="col-md-4 col-lg-4">
                    Request URL <br />
                    @Html.TextAreaFor(model => model.RequestURL, new { @class = "input100", @rows = 10, @id = "txtRequestPacketURL4", tabindex = 4 })

                </div>
                <div style="float: left; margin-top: 20px; margin-bottom: 20px;" class="col-md-4 col-lg-4">
                    Response Packet<br /><textarea id="txtResponsePacket4" rows="10" cols="40" class="input100"></textarea>
                </div>
            </div>
        </div>
    </div>


    @*Burn*@
    <div class="multisteps-form__content bg-white" id="dvBurn" style="display:none;">
        <input type="hidden" id="hdnBurnId" />
        <div class="col-lg-12" style="float: left; border: 1px solid grey; border-radius: 12px; margin-bottom: 30px; margin-top: 10px; ">
            
            <div style="float: left; margin-top: 20px; margin-bottom: 20px;" class="col-md-12 col-lg-12">
                Invoice No <input type="text" id="txtInvoiceNo5" class="input50" style="margin-bottom: 10px; margin-right: 50px;" />
                Invoice Amt<input type="text" id="txtInvoiceAmt5" class="input50" style="margin-bottom: 10px; margin-right: 50px;" />
                Date Time <input type="date" id="txtDatetime5" class="input50" style="margin-bottom:10px; margin-right:20px;">
            </div>
        </div>
        <div class="col-lg-12" style="float: left; border: 1px solid grey; border-radius: 12px; margin-bottom: 10px; margin-top: 10px; ">
            <div>
                <div style="float: left; margin-top: 20px;" class="col-md-4 col-lg-4">
                    Request Packet <br />
                    @Html.TextAreaFor(model => model.RequestPacketBurn, new { @class = "input100", @rows = 10, @id = "txtRequestPacket5", tabindex = 4 })
                </div>
                <div style="float: left; margin-top: 20px;" class="col-md-4 col-lg-4">
                    Request URL <br />
                    @Html.TextAreaFor(model => model.RequestURL, new { @class = "input100", @rows = 10, @id = "txtRequestPacketURL5", tabindex = 4 })

                </div>
                <div style="float: left; margin-top: 20px; margin-bottom: 20px;" class="col-md-4 col-lg-4">
                    Response Packet<br /><textarea id="txtResponsePacket5" rows="10" cols="40" class="input100"></textarea>
                </div>
            </div>
        </div>
    </div>


   @*Cancel*@
    <div class="multisteps-form__content bg-white" id="dvCancel" style="display:none;">
        <input type="hidden" id="hdnCancelId" />
        <div class="col-lg-12" style="float: left; border: 1px solid grey; border-radius: 12px; margin-bottom: 30px; margin-top: 10px;">
            
            <div style="float: left; margin-top: 20px; margin-bottom: 20px;" class="col-md-12 col-lg-12">
                Invoice No <input type="text" id="txtInvoiceNo6" class="input50" style="margin-bottom: 10px; margin-right: 50px;" />
                Invoice Amt<input type="text" id="txtInvoiceAmt6" class="input50" style="margin-bottom: 10px; margin-right: 50px;" />
                Date Time <input type="date" id="txtDatetime6" class="input50" style="margin-bottom:10px; margin-right:20px;">
            </div>
        </div>
        <div class="col-lg-12" style="float: left; border: 1px solid grey; border-radius: 12px; margin-bottom: 10px; margin-top: 10px;">
            <div>
                <div style="float: left; margin-top: 20px;" class="col-md-4 col-lg-4">
                    Request Packet <br />
                    @Html.TextAreaFor(model => model.RequestPacketCancel, new { @class = "input100", @rows = 10, @id = "txtRequestPacket6", tabindex = 4 })
                </div>
                <div style="float: left; margin-top: 20px;" class="col-md-4 col-lg-4">
                    Request URL <br />
                    @Html.TextAreaFor(model => model.RequestURL, new { @class = "input100", @rows = 10, @id = "txtRequestPacketURL6", tabindex = 4 })

                </div>
                <div style="float: left; margin-top: 20px; margin-bottom: 20px;" class="col-md-4 col-lg-4">
                    Response Packet<br /><textarea id="txtResponsePacket6" rows="10" cols="40" class="input100"></textarea>
                </div>
            </div>
        </div>
    </div>


    @*Send Otp*@
    <div class="multisteps-form__content bg-white" id="dvSendOtp" style="display:none;">
        <input type="hidden" id="hdnSendOtpId" />
        <div class="col-lg-12" style="float: left; border: 1px solid grey; border-radius: 12px; margin-bottom: 30px; margin-top: 10px; ">
            
            <div style="float: left; margin-top: 20px; margin-bottom: 20px;" class="col-md-12 col-lg-12">
                Invoice No <input type="text" id="txtInvoiceNo7" class="input50" style="margin-bottom: 10px; margin-right: 50px;" />
                Invoice Amt<input type="text" id="txtInvoiceAmt7" class="input50" style="margin-bottom: 10px; margin-right: 50px;" />
                Date Time <input type="date" id="txtDatetime7" class="input50" style="margin-bottom:10px; margin-right:20px;">
            </div>
        </div>
        <div class="col-lg-12" style="float: left; border: 1px solid grey; border-radius: 12px; margin-bottom: 10px; margin-top: 10px; ">
            <div>
                <div style="float: left; margin-top: 20px;" class="col-md-4 col-lg-4">
                    Request Packet <br />
                    @Html.TextAreaFor(model => model.RequestPacketSendOTP, new { @class = "input100", @rows = 10, @id = "txtRequestPacket7", tabindex = 4 })
                </div>
                <div style="float: left; margin-top: 20px;" class="col-md-4 col-lg-4">
                    Request URL <br />
                    @Html.TextAreaFor(model => model.RequestURL, new { @class = "input100", @rows = 10, @id = "txtRequestPacketURL7", tabindex = 4 })

                </div>
                <div style="float: left; margin-top: 20px; margin-bottom: 20px;" class="col-md-4 col-lg-4">
                    Response Packet<br /><textarea id="txtResponsePacket7" rows="10" cols="40" class="input100"></textarea>
                </div>
            </div>
        </div>
    </div>
</div>
<div>
    <button type="button" id="btnSend" class="btn btn-primary" style="float: right; margin-right: 50px; margin-left: 10px; margin-bottom: 25px; margin-top: 20px;">Send</button>
    <button type="button" id="btnReset" class="btn btn-primary" style="float: right; margin-bottom: 25px; margin-top: 20px;">Reset</button><br />
</div>

<script>
    var oldMobileNo1 = "";
    var oldMobileNo2 = "";
    var oldMobileNo3 = "";
    var oldMobileNo4 = "";
    var oldMobileNo5 = "";
    var oldMobileNo6 = "";
    var oldMobileNo7 = "";

    var oldCounterId1 = "";
    var oldCounterId2 = "";
    var oldCounterId3 = "";
    var oldCounterId4 = "";
    var oldCounterId5 = "";
    var oldCounterId6 = "";
    var oldCounterId7 = "";
    var flag = false;

   $(document).ready(function () {
        $("#ddlOutlet").on("change", function () {
            ReplaceCounterId();
        });

       $("#txtMobileNo").on("change", function () {
           ReplaceMobileNo();
       });

       $('#rbtnEnrlment').click(function () {
        ShowHideTxnTypeSection("dvEnrlment");
       });

       $('#rbtnEnrlmntWithEarn').click(function () {
        ShowHideTxnTypeSection("dvEnrlmentWithEarn");
       });

       $('#rbtnEarn').click(function () {
           ShowHideTxnTypeSection("dvEarn");
       });

       $('#rbtnBurnValidation').click(function () {
           ShowHideTxnTypeSection("dvBurnValidation");
       });

       $('#rbtnBurn').click(function () {
           ShowHideTxnTypeSection("dvBurn");
       });

       $('#rbtnCancel').click(function () {
           ShowHideTxnTypeSection("dvCancel");
       });

       $('#rbtnSendOtp').click(function () {
           ShowHideTxnTypeSection("dvSendOtp");
       });

       $('#btnSend').click(function () {
           var fromId = "";
           var toId = "";
           var url = "";
           var APIType = "";
           if ($("#rbtnEnrlment").is(":checked")) {
               fromId = "txtRequestPacket1";
               toId = "txtResponsePacket1";
               url = "txtRequestPacketURL1";
               APIType = "";
           }
           if ($("#rbtnEnrlmntWithEarn").is(":checked")) {
               fromId = "txtRequestPacket2";
               toId = "txtResponsePacket2";
               url = "txtRequestPacketURL2";
           }
           if ($("#rbtnEarn").is(":checked")) {
               fromId = "txtRequestPacket3";
               toId = "txtResponsePacket3";
               url = "txtRequestPacketURL3";
           }
           if ($("#rbtnBurnValidation").is(":checked")) {
               fromId = "txtRequestPacket4";
               toId = "txtResponsePacket4";
               url = "txtRequestPacketURL4";
           }
           if ($("#rbtnBurn").is(":checked")) {
               fromId = "txtRequestPacket5";
               toId = "txtResponsePacket5";
               url = "txtRequestPacketURL5";
           }
           if ($("#rbtnCancel").is(":checked")) {
               fromId = "txtRequestPacket6";
               toId = "txtResponsePacket6";
               url = "txtRequestPacketURL6";
           }
           if ($("#rbtnSendOtp").is(":checked")) {
               fromId = "txtRequestPacket7";
               toId = "txtResponsePacket7";
               url = "txtRequestPacketURL7";
           }


           CheckAPI(fromId, toId, url);
       });

       //var now = new Date(),
       //    minDate = now.toISOString().substring(0, 10);
       //$('#txtDatetime1').prop('min', minDate);
       //$('#txtDatetime2').prop('min', minDate);
       //$('#txtDatetime3').prop('min', minDate);
       //$('#txtDatetime4').prop('min', minDate);
       //$('#txtDatetime5').prop('min', minDate);
       //$('#txtDatetime6').prop('min', minDate);
       //$('#txtDatetime7').prop('min', minDate);

       var today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());
       $('#txtDatetime1').datetimepicker({
           dateFormat: "dd-mm-yyyy",
           minDate: today,
       });
      
       $("#btnReset").click(function () {
           ResetAll();
       });

       $("#txtDatetime1").focusout(function () {
         UpdateDatetime1();
       });


   });

    function UpdateDatetime1() {
        var RequestPacket = $("#txtRequestPacket1").val();
        var Datetime = $("#txtDatetime1").val();
        var oldDatetime1 = "";
        if (oldDatetime1 == "") {
            flag = false;
        }
        else {
            flag = true; 
        }

        if (flag) {
            var strInReplace = "<Datetime>" + oldDatetime1 + "</Datetime>";
            var strToReplace = "<Datetime>" + Datetime + "</Datetime>";
            RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
        }
        else {
            var strInReplace = "<Datetime></Datetime>";
            var strToReplace = "<Datetime>" + Datetime + "</Datetime>";
            RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
        }
        $("#txtRequestPacket1").val(RequestPacket);
        oldDatetime1 = Datetime;
    }


    function ReplaceCounterId() {
        var outletId = $("#ddlOutlet").val();
        var counterId = outletId + "01";
        if ($('#rbtnEnrlment').is(':checked')) {
            var RequestPacket = $("#txtRequestPacket1").val();
            if (oldCounterId1 == "") {
                flag = false;
            }
            else {
                flag = true;
            }
            if (flag) {
                var strInReplace = "<CounterId>" + oldCounterId1 + "</CounterId>";
                var strToReplace = "<CounterId>" + counterId + "</CounterId>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            else {
                var strInReplace = "<CounterId></CounterId>";
                var strToReplace = "<CounterId>" + counterId + "</CounterId>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            $("#txtRequestPacket1").val(RequestPacket);
            oldCounterId1 = counterId;
        }

        if ($('#rbtnEnrlmntWithEarn').is(':checked')) {
            var RequestPacket = $("#txtRequestPacket2").val();
            if (oldCounterId2 == "") {
                flag = false;
            }
            else {
                flag = true;
            }
            if (flag) {
                var strInReplace = "<CounterId>" + oldCounterId2 + "</CounterId>";
                var strToReplace = "<CounterId>" + counterId + "</CounterId>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            else {
                var strInReplace = "<CounterId></CounterId>";
                var strToReplace = "<CounterId>" + counterId + "</CounterId>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            $("#txtRequestPacket2").val(RequestPacket);
            oldCounterId2 = counterId;
        }

        if ($('#rbtnEarn').is(':checked')) {
            var RequestPacket = $("#txtRequestPacket3").val();
            if (oldCounterId3 == "") {
                flag = false;
            }
            else {
                flag = true;
            }
            if (flag) {
                var strInReplace = "<CounterId>" + oldCounterId3 + "</CounterId>";
                var strToReplace = "<CounterId>" + counterId + "</CounterId>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            else {
                var strInReplace = "<CounterId></CounterId>";
                var strToReplace = "<CounterId>" + counterId + "</CounterId>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            $("#txtRequestPacket3").val(RequestPacket);
            oldCounterId3 = counterId;
        }

        if ($('#rbtnBurnValidation').is(':checked')) {
            var RequestPacket = $("#txtRequestPacket4").val();
            if (oldCounterId4 == "") {
                flag = false;
            }
            else {
                flag = true;
            }
            if (flag) {
                var strInReplace = "<CounterId>" + oldCounterId4 + "</CounterId>";
                var strToReplace = "<CounterId>" + counterId + "</CounterId>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            else {
                var strInReplace = "<CounterId></CounterId>";
                var strToReplace = "<CounterId>" + counterId + "</CounterId>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            $("#txtRequestPacket4").val(RequestPacket);
            oldCounterId4 = counterId;
        }

        if ($('#rbtnBurn').is(':checked')) {
            var RequestPacket = $("#txtRequestPacket5").val();
            if (oldCounterId5 == "") {
                flag = false;
            }
            else {
                flag = true;
            }
            if (flag) {
                var strInReplace = "<CounterId>" + oldCounterId5 + "</CounterId>";
                var strToReplace = "<CounterId>" + counterId + "</CounterId>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            else {
                var strInReplace = "<CounterId></CounterId>";
                var strToReplace = "<CounterId>" + counterId + "</CounterId>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            $("#txtRequestPacket5").val(RequestPacket);
            oldCounterId5 = counterId;
        }

        if ($('#rbtnCancel').is(':checked')) {
            var RequestPacket = $("#txtRequestPacket6").val();
            if (oldCounterId6 == "") {
                flag = false;
            }
            else {
                flag = true;
            }
            if (flag) {
                var strInReplace = "<CounterId>" + oldCounterId6 + "</CounterId>";
                var strToReplace = "<CounterId>" + counterId + "</CounterId>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            else {
                var strInReplace = "<CounterId></CounterId>";
                var strToReplace = "<CounterId>" + counterId + "</CounterId>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            $("#txtRequestPacket6").val(RequestPacket);
            oldCounterId6 = counterId;
        }

        if ($('#rbtnSendOtp').is(':checked')) {
            var RequestPacket = $("#txtRequestPacket7").val();
            if (oldCounterId7 == "") {
                flag = false;
            }
            else {
                flag = true;
            }
            if (flag) {
                var strInReplace = "<CounterId>" + oldCounterId7 + "</CounterId>";
                var strToReplace = "<CounterId>" + counterId + "</CounterId>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            else {
                var strInReplace = "<CounterId></CounterId>";
                var strToReplace = "<CounterId>" + counterId + "</CounterId>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            $("#txtRequestPacket7").val(RequestPacket);
            oldCounterId7 = counterId;
        }
    }

    function ReplaceMobileNo() {
        var MobileNo = $("#txtMobileNo").val();
        if ($('#rbtnEnrlment').is(':checked')) {
            var RequestPacket = $("#txtRequestPacket1").val();
            //var mobileNo1 = $("#txtMobileNo1").val();
            if (oldMobileNo1 == "") {
                flag = false;
            }
            else {
                flag = true;
            }

            if (flag) {
                var strInReplace = "<MobileNo>" + oldMobileNo1 + "</MobileNo>";
                var strToReplace = "<MobileNo>" + MobileNo + "</MobileNo>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            else {
                var strInReplace = "<MobileNo></MobileNo>";
                var strToReplace = "<MobileNo>" + MobileNo + "</MobileNo>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            $("#txtRequestPacket1").val(RequestPacket);
            oldMobileNo1 = MobileNo;

        }

        if ($('#rbtnEnrlmntWithEarn').is(':checked')) {
            var RequestPacket = $("#txtRequestPacket2").val();
            //var MobileNo = $("#txtMobileNo").val();
            if (oldMobileNo2 == "") {
                flag = false;
            }
            else {
                flag = true;
            }

            if (flag) {
                var strInReplace = "<MobileNo>" + oldMobileNo2 + "</MobileNo>";
                var strToReplace = "<MobileNo>" + MobileNo + "</MobileNo>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            else {
                var strInReplace = "<MobileNo></MobileNo>";
                var strToReplace = "<MobileNo>" + MobileNo + "</MobileNo>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            $("#txtRequestPacket2").val(RequestPacket);
            oldMobileNo2 = MobileNo;
        }

        if ($('#rbtnEarn').is(':checked')) {
            var RequestPacket = $("#txtRequestPacket3").val();
            if (oldMobileNo3 == "") {
                flag = false;
            }
            else {
                flag = true;
            }

            if (flag) {
                var strInReplace = "<MobileNo>" + oldMobileNo3 + "</MobileNo>";
                var strToReplace = "<MobileNo>" + MobileNo + "</MobileNo>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            else {
                var strInReplace = "<MobileNo></MobileNo>";
                var strToReplace = "<MobileNo>" + MobileNo + "</MobileNo>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            $("#txtRequestPacket3").val(RequestPacket);
            oldMobileNo3 = MobileNo;
        }

        if ($('#rbtnBurnValidation').is(':checked')) {
            var RequestPacket = $("#txtRequestPacket4").val(); 
            if (oldMobileNo4 == "") {
                flag = false;
            }
            else {
                flag = true;
            }

            if (flag) {
                var strInReplace = "<MobileNo>" + oldMobileNo4 + "</MobileNo>";
                var strToReplace = "<MobileNo>" + MobileNo + "</MobileNo>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            else {
                var strInReplace = "<MobileNo></MobileNo>";
                var strToReplace = "<MobileNo>" + MobileNo + "</MobileNo>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            $("#txtRequestPacket4").val(RequestPacket);
            oldMobileNo4 = MobileNo;
        }

        if ($('#rbtnBurn').is(':checked')) {
            var RequestPacket = $("#txtRequestPacket5").val();
            if (oldMobileNo5 == "") {
                flag = false;
            }
            else {
                flag = true;
            }

            if (flag) {
                var strInReplace = "<MobileNo>" + oldMobileNo5 + "</MobileNo>";
                var strToReplace = "<MobileNo>" + MobileNo + "</MobileNo>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            else {
                var strInReplace = "<MobileNo></MobileNo>";
                var strToReplace = "<MobileNo>" + MobileNo + "</MobileNo>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            $("#txtRequestPacket5").val(RequestPacket);
            oldMobileNo5 = MobileNo;
        }

        if ($('#rbtnCancel').is(':checked')) {
            var RequestPacket = $("#txtRequestPacket6").val();
            if (oldMobileNo6 == "") {
                flag = false;
            }
            else {
                flag = true;
            }

            if (flag) {
                var strInReplace = "<MobileNo>" + oldMobileNo6 + "</MobileNo>";
                var strToReplace = "<MobileNo>" + mobileNo6 + "</MobileNo>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            else {
                var strInReplace = "<MobileNo></MobileNo>";
                var strToReplace = "<MobileNo>" + mobileNo6 + "</MobileNo>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            $("#txtRequestPacket6").val(RequestPacket);
            oldMobileNo6 = mobileNo6;
        }

        if ($('#rbtnSendOtp').is(':checked')) {
            var RequestPacket = $("#txtRequestPacket7").val();
            if (oldMobileNo7 == "") {
                flag = false;
            }
            else {
                flag = true;
            }

            if (flag) {
                var strInReplace = "<MobileNo>" + oldMobileNo7 + "</MobileNo>";
                var strToReplace = "<MobileNo>" + MobileNo + "</MobileNo>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            else {
                var strInReplace = "<MobileNo></MobileNo>";
                var strToReplace = "<MobileNo>" + MobileNo + "</MobileNo>";
                RequestPacket = RequestPacket.replace(strInReplace, strToReplace);
            }
            $("#txtRequestPacket7").val(RequestPacket);
            oldMobileNo7 = MobileNo;
        }
    }

    function ResetAll() {
        if ($('#rbtnEnrlment').is(':checked')) {
            $("#txtDatetime1").val('');
            ResetSection("1");
        }
        if ($('#rbtnEnrlmntWithEarn').is(':checked')) {
            $("#txtInvoiceNo2").val('');
            $("#txtInvoiceAmt2").val('');
            $("#txtDatetime2").val('');
            ResetSection("2");
        }

        if ($('#rbtnEarn').is(':checked')) {
            $("#txtInvoiceNo3").val('');
            $("#txtInvoiceAmt3").val('');
            $("#txtDatetime3").val('');
            ResetSection("3");
        }
        if ($('#rbtnBurnValidation').is(':checked')) {
            $("#txtInvoiceNo4").val('');
            $("#txtInvoiceAmt4").val('');
            $("#txtDatetime4").val('');
            ResetSection("4");
        }
        if ($('#rbtnBurn').is(':checked')) {
            $("#txtInvoiceNo5").val('');
            $("#txtInvoiceAmt5").val('');
            $("#txtDatetime5").val('');
            ResetSection("5");
        }
        if ($('#rbtnCancel').is(':checked')) {
            $("#txtInvoiceNo6").val('');
            $("#txtInvoiceAmt6").val('');
            $("#txtDatetime6").val('');
            ResetSection("6");
        }
        if ($('#rbtnSendOtp').is(':checked')) {
            $("#txtInvoiceNo7").val('');
            $("#txtInvoiceAmt7").val('');
            $("#txtDatetime7").val('');
            ResetSection("7");
        }   
    }

    function ResetSection(id) {
         $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("ResetSection", "TestingModule")',
                data: '{Id: ' + JSON.stringify(id) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log(result);
                    ResetControls(result, id)
                    $("#divLoader").hide();
                },
                error: function (result) {
                    $("#divLoader").hide();
                }
            });
    }

    function ResetControls(data, id) {

        if (id == "1") {
            $("#txtRequestPacket1").val(data.RequestPacketEnrollnment);
            $("#txtRequestPacketURL1").val(data.RequestURL);
            $("#txtResponsePacket1").val('');
        }
        if (id == "2") {
            $("#txtRequestPacket2").val(data.RequestPacketEnrollnmentWithEarn);
            $("#txtRequestPacketURL2").val(data.RequestURL);
            $("#txtResponsePacket2").val('');
        }
        if (id == "3") {
            $("#txtRequestPacket3").val(data.RequestPacketEarn);
            $("#txtRequestPacketURL3").val(data.RequestURL);
            $("#txtResponsePacket3").val('');
        }
        if (id == "4") {
            $("#txtRequestPacket4").val(data.RequestPacketBurnValidation);
            $("#txtRequestPacketURL4").val(data.RequestURL);
            $("#txtResponsePacket4").val('');
        }
        if (id == "5") {
            $("#txtRequestPacket5").val(data.RequestPacketBurn);
            $("#txtRequestPacketURL5").val(data.RequestURL);
            $("#txtResponsePacket5").val('');
        }
        if (id == "6") {
            $("#txtRequestPacket6").val(data.RequestPacketCancel);
            $("#txtRequestPacketURL6").val(data.RequestURL);
            $("#txtResponsePacket6").val('');
        }
        if (id == "7") {
            $("#txtRequestPacket7").val(data.RequestPacketSendOTP);
            $("#txtRequestPacketURL7").val(data.RequestURL);
            $("#txtResponsePacket7").val('');
        }
    }

    function ShowHideTxnTypeSection(Id) {
        $("#dvEnrlment").hide();
        $("#dvEnrlmentWithEarn").hide();
        $("#dvEarn").hide();
        $("#dvBurnValidation").hide();
        $("#dvBurn").hide();
        $("#dvCancel").hide();
        $("#dvSendOtp").hide();

        $("#" + Id).show();
        ReplaceCounterId();
    }

    function CheckAPI(requestId, responseId, apiurl1) {
        var RequestPacket = $("#" + requestId).val();
        var ResponsePacket = $("#" + responseId).val();
        var ApiURL = $("#" + apiurl1).val();

        $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetResponse", "TestingModule")',
                data: '{RequestPacket: ' + JSON.stringify(RequestPacket) + ',RequestURL: ' + JSON.stringify(ApiURL) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log(result);
                    $("#" + responseId).val(result);
                    //$("#" + fromId).val(RequestPacket);
                    $("#divLoader").hide();
                },
                error: function (result) {
                    $("#divLoader").hide();
                }
            });
    }
</script>