@model WebApp.ViewModel.CampaignMgmt
@{
    ViewBag.Title = "Create Campaign Promo SMS";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .rbtnClass {
        height: 20px;
        width: 20px;
        vertical-align: middle;
        cursor: pointer;
        /* margin-left: 10px;*/
    }
    /*.bottomdiv {
        border: 1px;
        height: 50px;
        width: 50px;
        position: absolute;
        left: 0;
        bottom: 0;
    }
    .col-md-3 col-xl-3 {
        display: table-cell;
        height: auto;
        border: 1px solid black;
        float: none;
    }*/
</style>
<div class="app-main__inner" id="dvall">
    <div class="container-fluid pt-3 pl-3 pr-3 pb-3">

        <div class="mb-2 pr-3 pt-3 pl-3 card" style="padding-bottom:20px;">
            <div class="row mt-2">
                <div class="row col-md-12 col-xl-12" style="margin-left:25px;">
                    <div class="col-md-3 col-xl-3">
                        <input type="radio" checked id="rdnSMS" class="rbtnClass" value="1" name="btdornot" onclick="SMStypeValidate();" />&nbsp;&nbsp;<b>SMS </b>
                    </div>
                    <div class="col-md-3 col-xl-3">
                        <input type="radio" id="rdnVSMS" class="rbtnClass" value="2" name="btdornot" onclick="SMStypeValidate();" />&nbsp;&nbsp;<b> Virtual SMS </b>
                    </div>
                    <div class="col-md-3 col-xl-3">
                        <input type="radio" id="rdnWA" class="rbtnClass" value="3" name="btdornot" onclick="SMStypeValidate();" />&nbsp;&nbsp;<b> Whats app</b>
                    </div>
                    <div class="col-md-3 col-xl-3">
                        <input type="radio" id="rdnVWA" class="rbtnClass" value="4" name="btdornot" onclick="SMStypeValidate();" />&nbsp;&nbsp;<b> Verified Whats app</b>
                    </div>
                </div>
            </div>
        </div>

        <div id="SMSPanel">
            <div class="mb-3 pr-3 pt-3 pl-3 card" style="padding-bottom:20px;" id="SMSCamppanel">

                <div class="col-md-8 col-xl-8 row mt-2 pl-5 mb-2">
                    <div class="col-lg-3 col-md-3 ">
                        SMS Balance/Service Provider
                    </div>
                    <div class="col-md-3 col-xl-3">

                    </div>
                    <div class="col-md-3 col-xl-3">
                        <input type="text" id="SMSBalance" class="input50" value="@((ViewBag.SMSBalance))" hidden />
                        <span id="SMSBalance">@((ViewBag.SMSBalance)) / @((ViewBag.SMSVendor))</span>
                    </div>
                </div>

                <div class="col-md-8 col-xl-8 row mt-2 pl-5 mb-2">
                    <div class="col-lg-3 col-md-3 ">
                        <label>Campaign Name<b>*</b></label>
                    </div>
                    <div class="col-md-3 col-xl-3 ">
                        <input type="text" id="CampName" class="input50" placeholder="Enter Campaign Name" />
                    </div>
                    <div class="col-md-3 col-xl-3">
                        <input id="CampId" class="input50" hidden />
                    </div>
                </div>
                <div class="col-md-8 col-xl-8 row mt-2 pl-5 mb-2">
                    <div class="col-lg-3 col-md-3 ">
                        <label>Campaign Period<b>*</b></label>
                    </div>
                    <div class="col-md-3 col-xl-3 ">
                        <input type="date" id="txtEnrollfromdt" class="input50" placeholder="Start" onchange="ValidateDate();" />
                    </div>
                    <div class="col-md-3 col-xl-3">
                        <input type="date" id="txtEnrolltodt" class="input50" placeholder="End" onchange="ValidateDate1();" />
                    </div>
                </div>

                <div class="col-md-8 col-xl-8 row mt-2 pl-5 mb-2">
                    <div class="col-lg-3 col-md-3 ">
                        <label>Base Type<b>*</b></label>
                    </div>
                    <div class="col-md-3 col-xl-3 ">
                        @Html.DropDownListFor(model => model.BaseType, new SelectList(Model.BaseType1(), "Value", "Text"), htmlAttributes: new { @class = "input50", @id = "BaseType" })
                    </div>
                    <div class="col-md-3 col-xl-3">

                    </div>
                </div>
                <div class="col-md-8 col-xl-8 row mt-2 pl-5 mb-2" id="divPoints" style="display: none;">
                    <div class="col-lg-3 col-md-3 ">
                        <label>Points<b>*</b></label>
                    </div>
                    <div class="col-md-3 col-xl-3 ">
                        @Html.DropDownListFor(model => model.PointsType, new SelectList(Model.PointsType1(), "Value", "Text"), htmlAttributes: new { @class = "input50", @id = "Filter" })
                    </div>
                    <div class="col-md-3 col-xl-3">
                        <input type="number" id="points" name="points" class="input50" />
                    </div>
                    <div class="col-md-3 col-xl-3" id="divPointsRange" style="display:none">
                        <input type="number" id="points2" name="points2" class="input50" />
                    </div>
                </div>
                <div class="col-md-8 col-xl-8 row mt-2 pl-5 mb-2">
                    <div class="col-lg-3 col-md-3 ">
                        <label>OutletData</label>
                    </div>
                    <div class="col-md-3 col-xl-3">
                        @Html.DropDownList("OutletData", new SelectList(ViewBag.OutletData, "Value", "Text"), "ALL", htmlAttributes: new { @class = "input50", @id = "ddlOutletList" })
                    </div>
                </div>



                @*<div class="row" style="margin-top : 20px;">*@
                <div class="col-md-8 col-xl-8 row mt-3 pl-5 mb-4">
                    <div class="col-md-3 col-xl-3">
                        <div class="button">
                            <button type="button" id="btnFilter" style="margin-left:15px;" class="btn btn-primary" onclick="ShowCount();"><b>FILTER</b></button>
                        </div>
                    </div>
                    <div class="col-md-3 col-xl-3 ">

                    </div>

                    <div class="col-md-4 col-xl-4">
                        <table cellpadding="10" cellspacing="10" style="margin-left:100px; border:2px solid black;width:70%;">
                            <tr style="border:2px solid black; ">
                                <td style="border:2px solid black;text-align:left;">
                                    <span id="AllCount"></span><b>All Count</b>
                                </td>
                                <td style="border:2px solid black;width:40%">
                                    <span id="AllCountnum" style="font-weight:bold;font-size:20px;"></span>
                                </td>
                            </tr>
                            <tr style="border:2px solid black; ">
                                <td style="border:2px solid black;text-align:left;">
                                    <span id="FiltCount"></span><b>Filtered Count</b>
                                </td>
                                <td style="border:2px solid black;width:40%">
                                    <span id="FiltCountnum" style="font-weight:bold;color:green;font-size:20px;"></span>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>

                <div class="col-md-8 col-xl-8 row mt-4 pl-5 mb-4">
                    <div class="col-md-3 col-xl-3">
                        <label>Campaign Base</label>
                    </div>
                    <div class="col-md-3 col-xl-3">
                        <input type="radio" class="rbtnClass" checked id="rdnCampAll" value="1" name="CampaignBase" /> <b>100 %</b>
                    </div>
                    <div class="col-md-3 col-xl-3">
                        <input type="radio" class="rbtnClass" id="rdnCampControl" value="2" name="CampaignBase" /> <b>95 %</b>
                    </div>
                </div>

                <div class="col-md-8 col-xl-8 row mt-2 pl-5 mb-2">
                    <div class="col-md-3 col-xl-3">
                        <input type="radio" class="rbtnClass" checked id="rdnText" value="1" name="ScriptType" Onchange="HandleChange();" /> <b>English</b>
                    </div>
                    <div class="col-md-3 col-xl-3">
                        <input type="radio" class="rbtnClass" id="rdnUnicode" value="2" name="ScriptType" Onchange="HandleChange();" /> <b>Vernacular (Marathi, Hindi, Kannada, etc)</b>
                    </div>
                </div>

                <div class="col-md-8 col-xl-8 row mt-2 pl-5 mb-2">
                    <div class="col-md-8 col-xl-8">
                        <div class="custom-control custom-switch">
                            <input type="checkbox" class="custom-control-input" id="ScheduleNow" value="1">
                            <label class="custom-control-label" style="cursor:pointer !important;" for="ScheduleNow"><b>Schedule Now</b></label>
                        </div>
                    </div>
                    <div class="col-md-8 col-xl-8">
                        <div class="custom-control custom-switch">
                            <input type="checkbox" class="custom-control-input" id="ScheduleSwitch" value="0">
                            <label class="custom-control-label" style="cursor:pointer !important;" for="ScheduleSwitch"><b>Schedule Date & Time</b></label>
                        </div>
                    </div>
                </div>

                <div class="col-md-8 col-xl-8 row mt-2 pl-5 mb-2" style="display : none" id="SchedPick">
                    <div class="col-md-8 col-xl-8">
                        <input id="datetimepicker" type="text" class="input50" onclick="Showdatetime();">&nbsp;&nbsp;<label> Double click to add Datetime</label>
                    </div>
                </div>

                <div class="col-md-8 col-xl-8 row mt-3 pl-5 mb-2">
                    <div class="col-lg-3 col-md-3 ">
                        <label>Approved Template ID<b>*</b></label>
                    </div>
                    <div class="col-md-3 col-xl-3">
                        <input type="text" id="TempId" class="input50" />
                    </div>
                </div>

                <div class="col-md-8 col-xl-8 row mt-1 pl-5 mb-1">
                    <div class="col-lg-3 col-md-3 ">
                        <label>Unit SMS Cost<b>*</b></label>
                    </div>
                    <div class="col-md-3 col-xl-3">

                        @Html.DropDownListFor(model => model.objSMSCost, new SelectList(Model.LstSMSCost, "Value", "Text"), "Select SMS Cost", htmlAttributes: new { @class = "input50", @id = "SMSCost" })
                    </div>
                </div>

                @*<div class="row" style="margin: 20px;" id="ScriptText">*@
                <div class="col-md-8 col-xl-8 row mt-3 pl-5 mb-3">

                    <div div class="col-md-6 col-xl-6">
                        <textarea class="form-control" id="SMSScript" rows="7" maxlength="10000" placeholder="Enter SMS Script"></textarea>&nbsp;&nbsp;
                    </div>
                    <div class="col-md-3 col-xl-3">
                        <br><br><br><br>
                        <table class="align-text-bottom" style="border:2px solid black;bottom:0;width:70%">
                            <tr style="border:2px solid black; ">
                                <td style="border:2px solid black;text-align:left;">
                                    <span id="CharCount"></span>Char Count
                                </td>
                                <td style="border:2px solid black;width:40%">
                                    <span id="current">0</span>
                                </td>
                            </tr>
                            <tr style="border:2px solid black; ">
                                <td style="border:2px solid black;text-align:left;">
                                    <span id="SMSCount"></span>SMS Count
                                </td>
                                <td style="border:2px solid black;width:40%">
                                    <span id="Count">0</span>
                                </td>
                            </tr>
                        </table>
                    </div>

                    <div class="col-md-8 col-xl-8 row mt-2 pl-5 mb-2" id="GooleLink" style="display:none">
                        <a href="https://translate.google.co.in/" target="_blank">Google Translator</a>
                    </div>

                    <div class="col-md-8 col-xl-8 row mt-2 pl-5 mb-2">
                        <div class="button">
                            <button type="button" id="btnSave" style="margin-left:25px;" class="btn btn-primary" onclick="SaveValidate();"><b>SAVE</b></button>
                            <button type="button" id="btnDownload" style="margin-left:15px; display:none" class="btn btn-primary" onclick="DownLoad();"><b>DOWNLOAD</b></button>
                            @*<button type="button" id="btnSendTestSMS" style="margin-left:15px; display:normal" class="btn btn-primary" onclick="SendTestValidate();" disabled><b>TEST SMS</b></button>*@
                            @*<button type="button" id="btnSendDLT" style="margin-left: 15px; display: normal" class="btn btn-primary" onclick="SendSMSValidate();" disabled><b>SEND SMS</b></button>*@
                        </div>
                    </div>

                    <div class="col-md-8 col-xl-8 row mt-2 pl-5 mb-2">
                        <div class="col-md-4" style="margin-top: 10px;">
                            <textarea class="form-control" id="TestNumbers" rows="2" maxlength="10000" style="display: none" placeholder="Enter Test Numbers"></textarea>&nbsp;&nbsp;
                        </div>
                        <div class="button col-md-4" style="margin-top: 37px;">
                            <button type="button" id="btnSendTestSMS" style="margin-left: 25px; display: none" class="btn btn-primary" onclick="SendTestValidate();"><b>TEST SMS</b></button>
                        </div>
                    </div>

                    <div class="col-md-8 col-xl-8 row mt-2 pl-5 mb-2">
                        <div class="button">
                            <button type="button" id="btnSendDLT" style="margin-left:25px; display : none" class="btn btn-primary" onclick="SendSMSValidate();"><b>SEND SMS</b></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="WAPanel" style="display:none">
            @Html.Partial("_CampaignPromoWA");
        </div>
    </div>
</div>

<link rel="stylesheet" href="~/Scripts/datetimepicker-master/build/jquery.datetimepicker.min.css">
@*<script src="~/Scripts/datetimepicker-master/jquery.js"></script>*@
<script src="~/Scripts/datetimepicker-master/build/jquery.datetimepicker.full.min.js"></script>
<script src="~/Scripts/checktext.js"></script>
<script type="text/javascript"></script>
@*<script type="text/javascript" src="https://www.google.com/jsapi"></script>*@
<script>

    function SMStypeValidate() {
        if (document.getElementById("rdnWA").checked) {
            $("#WAPanel").show();
            $("#SMSPanel").hide();
            WAInstanceDetails();
        }
        else if (document.getElementById("rdnSMS").checked) {
            $("#WAPanel").hide();
            $("#SMSPanel").show();
        }
        else {
            $("#WAPanel").hide();
            $("#SMSPanel").hide();
        }
    }

    function HandleChange() {
        //alert("Hello");
        var val = $("#SMSScript").val();
        if (val != '') {
            var status = CheckText(val);
        }
        /*alert(status);*/
        console.log(status);

        if (document.getElementById("rdnText").checked) {
            $("#GooleLink").hide();
            if (val != '') {
                if (status == 1) {
                    cuteAlert({
                        type: "error",
                        title: "Message Script Error",
                        message: "The selected Script is in English language and the Script is mentioned in Vernacular. Please change the message script in English or select script as Unicode",
                        buttonText: "Okay"
                    })
                }
            }
        }
        else {
            $("#GooleLink").show();
            if (val != '') {
                if (status == 0 ) {
                    cuteAlert({
                        type: "error",
                        title: "Message Script Error",
                        message: "The selected Script is in Vernacular language and the Script is mentioned in English. Please change the message script in Vernacular language or select script as English",
                        buttonText: "Okay"
                    })
                }
            }
        }
    }

    $("#SMSScript").focusout(function () {
        var val = $("#SMSScript").val();
        if (val != '') {

            var status = CheckText(val);
        }
    });

    $("#BaseType").change(function () {
        var val = document.getElementById("BaseType").value;
        if (val == 4) {
            $('#divPoints').show();
        }
        else if (val != 4) {
            $('#divPoints').hide();
        }
    });

    $("#Filter").change(function () {
        var val = $('#Filter').val();
        if (val == 4) {
            $('#divPointsRange').show();
        }
        else if (val != 4) {
            $('#divPointsRange').hide();
        }
    });

    function ValidateDate() {
        var d = new Date();
        month = ("0" + (d.getMonth() + 1)).slice(-2);
        day = ("0" + d.getDate()).slice(-2);
        year = d.getFullYear();
        var Date1 = year + '-' + month + '-' + day;

        var CampStartDate = $("#txtEnrollfromdt").val();
        if (CampStartDate < Date1) {
            cuteAlert({
                type: "error",
                title: "Date Error",
                message: "Start Date of the Campaign cannot be before the Current Date",
                buttonText: "Okay"

            })
            $("#txtEnrollfromdt").val("");
        }
    }

    function ValidateDate1() {
        var d = new Date();
        month = ("0" + (d.getMonth() + 1)).slice(-2);
        day = ("0" + d.getDate()).slice(-2);
        year = d.getFullYear();
        var Date1 = year + '-' + month + '-' + day;

        var CampEndDate = $("#txtEnrolltodt").val();
        if (CampEndDate < Date1) {
            cuteAlert({
                type: "error",
                title: "Date Error",
                message: "End Date of the Campaign cannot be before the Current Date",
                buttonText: "Okay"
            })
            $("#txtEnrolltodt").val("");
        }
    }

    function SaveValidate() {
        var d = new Date();
        month = ("0" + (d.getMonth() + 1)).slice(-2);
        day = ("0" + d.getDate()).slice(-2);
        year = d.getFullYear();
        var Date1 = year + '-' + month + '-' + day;
        var SMSCostSelect = $("#SMSCost").val();
        var val = $("#SMSScript").val();
        var status, SMSCost;
        if (val != '') {
            status = CheckText(val);
        }

        var Script = $("#SMSScript").val();
        var StartDate = $("#txtEnrollfromdt").val();
        var EndDate = $("#txtEnrolltodt").val();
        var CampName = $("#CampName").val();
        var AllCount = $("#AllCountnum").text();
        var FiltCountnum = $("#FiltCountnum").text();
        var TempId = $("#TempId").val();
        var ScriptType = '';
        var TempCalc = '';
        var a = '';
        var TotalCredits;
        var SMSBal = $("#SMSBalance").val();
        

        if (document.getElementById("rdnText").checked) {
            ScriptType = $("#rdnText").val();
        }
        else {
            ScriptType = $("#rdnUnicode").val();
        }
        
        if (val != '') {
            if ((ScriptType == '1') && (status == 0)) {
                TempCalc = 159;
            }
            else if ((ScriptType == '2') && (status == 1)) {
                TempCalc = 69;
            }
        }

        var SMSBalance = parseInt($("#SMSBalance").val());
        var CharCount = parseInt($("#current").text());
        a = Math.ceil(CharCount / TempCalc);

        TotalCredits = a * parseFloat(FiltCountnum.replace(/,/g, ''));

        if (SMSCostSelect != " ") {
            var Length = SMSCostSelect.length;
            SMSCost = SMSCostSelect.padStart(Length+2,'0.')
            var TSMSCost = (TotalCredits * SMSCost).toFixed(2);
        }

        var BalanceCredit = SMSBalance - TotalCredits;
        var ReqBal =  SMSBalance - TotalCredits;

        if (AllCount == "") {

            cuteAlert({
                type: "error",
                title: "Member Data Error",
                message: "No Member Data is Selected for this Campaign",
                buttonText: "Okay"
            })
        }
        else if (FiltCountnum == "") {
            cuteAlert({
                type: "error",
                title: "Member Data Error",
                message: "No Member Data is Selected for this Campaign",
                buttonText: "Okay"
            })
        }
        else if (Script == "") {
            cuteAlert({
                type: "error",
                title: "Message Script Error",
                message: "The Script field cannot be Empty",
                buttonText: "Okay"
            })
        }
        else if (StartDate < Date1) {

            cuteAlert({
                type: "error",
                title: "Date Error",
                message: "Start Date of the Campaign cannot be before the Current Date",
                buttonText: "Okay"
            })
        }
        else if (EndDate < Date1) {
            cuteAlert({
                type: "error",
                title: "Date Error",
                message: "End Date of the Campaign cannot be before the Current Date",
                buttonText: "Okay"
            })
        }
        else if (EndDate < Date1) {
            cuteAlert({
                type: "error",
                title: "Date Error",
                message: "End Date of the Campaign cannot be before the Current Date",
                buttonText: "Okay"
            })
        }
        else if (CampName == "") {
            cuteAlert({
                type: "error",
                title: "Error",
                message: "Campaign Name is Empty. Please keep a unique Campaign Name to identify the Campaign in future",
                buttonText: "Okay"
            })
        }
        else if (TempId == "") {
            cuteAlert({
                type: "error",
                title: "Error",
                message: "SMS Template ID is Empty. Please put the valid Template ID",
                buttonText: "Okay"
            })
        }
        else if (SMSCostSelect == "0") {
            cuteAlert({
                type: "error",
                title: "Error",
                message: "Please select SMS cast",
                buttonText: "Okay"
            })
        }
        else if ((status == 1) && (ScriptType == '1')) {
            cuteAlert({
                type: "error",
                title: "Message Script Error",
                message: "The selected Script is in English language and the Script is mentioned in Vernacular. Please change the message script in English or select script as Unicode",
                buttonText: "Okay"
            })
        }
        else if ((status == 0) && (ScriptType == '2')) {
            cuteAlert({
                type: "error",
                title: "Message Script Error",
                message: "The selected Script is in Vernacular language and the Script is mentioned in English. Please change the message script in Vernacular language or select script as English",
                buttonText: "Okay"
            })
        }
        else {
            if (SMSBalance < TotalCredits) {
                cuteAlert({
                    type: "error",
                    title: "Balance Error",
                    message: "SMS Balance Insufficient! Total Bal: " + SMSBalance + "<br/> Total Credits Required: " + TotalCredits + " <br/> Add a minimum of " + Math.abs(ReqBal) +" Balance and set the Campaign",
                    buttonText: "Okay"
                })
            }
            else {
                cuteAlert({
                    type: "question",
                    title: "Campaign Confirmation",
                    message: "Total Count Per SMS: " + a + "<br/> Total Credits Used: " + TotalCredits + "<br/> Total Campaign Cost: " + TSMSCost +"<br/> Total Balance left after campaign: " + BalanceCredit,
                    confirmText: "Yes",
                    cancelText: "No"
                }).then((e) => {
                    if (e == ("confirm")) {
                        Save();
                    } else {

                    }
                })
            }

        }
    }

    function SendDLTValidate() {
            var CampId = $("#CampId").val();
            if (CampId == '') {
                cuteAlert({
                    type: "error",
                    title: "Error Title",
                    message: "Campaign Id Not Found",
                    buttonText: "Okay"
                })
            }
            else {
                SendDLT();
            }
        }

    $(document).ready(function () {
            $("#ddlOutletList").on("change", function () {
                var OutletId = $("#ddlOutletList").val();
            });
        });

    function ShowCount() {
        var val = '';
        var Equality = '';
        var Points = '';
        var OutletId = '';
        var PointsRange1 = '';

            val = document.getElementById("BaseType").value;
            Equality = document.getElementById("Filter").value;
            Points = document.getElementById("points").value;
            PointsRange1 = $("#points2").val();
        var NPoints = parseInt(Points);
        var NPointsRange1 = parseInt(PointsRange1);
        var Flag = 0;

            OutletId = $("#ddlOutletList").val();
        if (val != '4') {
            Equality = ''
            Points = ''
        }
        else if (val == '4') {
            if (Points == '') {
                cuteAlert({
                    type: "error",
                    title: "Data Error",
                    message: "The Base Selected = Points Base and there are no Points mentioned. Please mention Points or select any other Base",
                    buttonText: "Okay"
                })
                Flag = 1;
            }
        }

        if (val == '4') {
            if (Equality != '4') {
                PointsRange1 = ''
            }
            else {
                if (PointsRange1 == '') {

                    cuteAlert({
                        type: "error",
                        title: "Data Error",
                        message: "The Base Selected = Points Range and there are no values entered. Please mention Points range or select any other Base",
                        buttonText: "Okay"
                    })
                    Flag = 1;
                }
                if (NPointsRange1 < NPoints) {
                     cuteAlert({
                         type: "error",
                         title: "Data Error",
                         message: "The Points mentioned in To is less than From. Please correct this and Save",
                         buttonText: "Okay"
                     })
                    Flag = 1;
                 }
            }
        }
        if (Flag == 0) {
            var FilterData = [];
            item = {};
            item["BaseType"] = val;
            item["PointsBase"] = Equality;
            item["Points"] = Points; //PointsRange1
            item["PointsRange1"] = PointsRange1;
            item["OutletId"] = OutletId;
            FilterData.push(item);
            var data = JSON.stringify(FilterData);
            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetFilteredData", "Campaigns")',
                data: '{jsonData: ' + JSON.stringify(data) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",

                success: function (response) {
                    console.log(response);
                    if (response != null) {
                        $("#AllCountnum").text(addComma(response.CustCountALL));
                        $("#FiltCountnum").text(addComma(response.CustFiltered));
                        $("#divLoader").hide();
                    }
                    else {

                    }
                },
                error: function (response) {
                    console.log(response.responseText);
                }
            });
        }
    }

    function Save() {
        var d = new Date();
        month = ("0" + (d.getMonth() + 1)).slice(-2);
        day = ("0" + d.getDate()).slice(-2);
        year = d.getFullYear();
        var Date1 = day + '-' + month + '-' + year;

        var val = '';
        var Equality = '';
        var Points = '';
        var OutletId = '';
        var Srcipt = '';
        var StartDate = '';
        var EndDate = '';
        var CampaignName = '';
        var SMSType = '';
        var Scheduledatetime = '';
        var ScriptType = '';
        var TempId = '';
        var CampaignData;

        val = $("#BaseType").val();
        Equality = $("#Filter").val();
        Points = $("#points").val();
        PointsRange1 = $("#points2").val();

        if (val != '4') {
            Equality = ''
            Points = 0
            PointsRange1 = 0
        }
        if (val == '4') {
            if (Equality != '4') {
                PointsRange1 = 0
            }
        }

        OutletId = $("#ddlOutletList").val();
        Srcipt = $("#SMSScript").val();
        StartDate = $("#txtEnrollfromdt").val();
        EndDate = $("#txtEnrolltodt").val();
        CampaignName = $("#CampName").val();
        Scheduledatetime = $("#datetimepicker").val();
        TempId = $("#TempId").val();


        if (document.getElementById("rdnSMS").checked) {
            SMSType = $("#rdnSMS").val();
        }
        else if (document.getElementById("rdnVSMS").checked) {
            SMSType = $("#rdnVSMS").val();
        }
        else if (document.getElementById("rdnWA").checked) {
            SMSType = $("#rdnWA").val();
        }
        else if (document.getElementById("rdnVWA").checked) {
            SMSType = $("#rdnVWA").val();
        }

        if (document.getElementById("rdnText").checked) {
            ScriptType = $("#rdnText").val();
        }
        else {
            ScriptType = $("#rdnUnicode").val();
        }
        if (document.getElementById("rdnCampAll").checked) {
            CampaignData = $("#rdnCampAll").val();
        }
        else {
            CampaignData = $("#rdnCampControl").val();
        }

        var FilterData = [];
        item = {};
        item["BaseType"] = val;
        item["Equality"] = Equality;
        item["Points"] = Points;
        item["OutletId"] = OutletId;
        item["Srcipt"] = Srcipt;
        item["StartDate"] = StartDate;
        item["EndDate"] = EndDate;
        item["CampaignName"] = CampaignName;
        item["SMSType"] = SMSType;
        item["ScriptType"] = ScriptType;
        item["Scheduledatetime"] = Scheduledatetime;
        item["TempId"] = TempId;
        item["PointsRange1"] = PointsRange1;
        item["CampaignData"] = CampaignData;

        FilterData.push(item);
        var data = JSON.stringify(FilterData);
        //alert(data);
        $("#divLoader").show();
        $.ajax({
                type: "POST",
                url: '@Url.Action("SaveCampaignDataPromo", "Campaigns")',
                data: '{jsonData: ' + JSON.stringify(data) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",

                success: function (response) {
                    console.log(response);
                    if (response != null) {

                        $("#CampId").val(response[0].CampaignId);

                        cuteAlert({
                            type: "success",
                            title: "Campaign Confirmation: Successful",
                            message: "Campaign is Saved Successfully",
                            buttonText: "Campaign Saved"
                        }).then(() => {
                            $("#btnSendTestSMS").show();
                            $("#TestNumbers").show();
                            $("#btnSave").prop('disabled', true);
                        })
                        $("#divLoader").hide();
                        //if (SMSType == 1) {
                        //    $("#btnSave").prop('disabled', true);
                        //    $("#btnSendTestSMS").prop('disabled', false);
                        //    $("#btnSendDLT").prop('disabled', false);
                        //}
                    }
                    else {

                    }
                },
                error: function (response) {
                    console.log(response.responseText);
                    $("#divLoader").hide();
                }
            });

    }

    function DownLoad() {
        var CampaignId;
        CampaignId = $("#CampId").val();

        var urlLink = "@Url.Action("ExportToExcelCampaignData", "Campaigns")";
        urlLink = urlLink + "?CampaignId=" + CampaignId;
        console.log(urlLink);
        window.location.href = urlLink;
    }

    $("#SMSScript").keyup(function () {
        //alert("Inside Keyup");
        var ScriptType = '';
        var TempCalc = '';
        var a = '';
        var characterCount = $(this).val().length,
            current = $('#current'),
            maximum = 0
        theCount = maximum + characterCount;
        //alert(theCount);
        $("#current").text(theCount);

        if (document.getElementById("rdnText").checked) {
            ScriptType = $("#rdnText").val();
        }
        else {
            ScriptType = $("#rdnUnicode").val();
        }
        if (ScriptType == '1') {
            TempCalc = 159;
        }
        else if (ScriptType == '2') {
            TempCalc = 69;
        }
        var Credits = $(this).val().length,
            CreditsNeed = $('#Count'),
            maximum = 0
        var theCount1 = maximum + Credits;
        a = Math.ceil(theCount / TempCalc);
        $("#Count").text(a);
    });

    function SendDLT(){
            var CampaignId = $("#CampId").val();

            var FilterData = [];
            item = {};
            item["CampaignId"] = CampaignId;

            FilterData.push(item);
            var data = JSON.stringify(FilterData);

            $.ajax({
                type: "POST",
                url: '@Url.Action("SendToDLT", "Campaigns")',
                data: '{jsonData: ' + JSON.stringify(data) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",

                success: function (response) {
                    console.log(response);
                    if (response != null) {

                        cuteAlert({
                            type: "success",
                            title: "Success Title",
                            message: "Successfully Send To DLT",
                            buttonText: "Okay"

                        })
                    }
                    else {
                        cuteAlert({
                            type: "error",
                            title: "Error Title",
                            message: "DLT Not Send",
                            buttonText: "Okay"
                        })
                    }
                },
                error: function (response) {
                    console.log(response.responseText);
                }
            });
    }

    function SendTestValidate() {
        var CampId = $("#CampId").val();
        if (CampId == '') {
            cuteAlert({
                type: "error",
                title: "Campaign ID Error:",
                message: "Campaign Id Not Found",
                buttonText: "Okay"
            })
        }
        else {
            SendTestSMS();
        }
    }

    function SendTestSMS(){
        var CampaignId = $("#CampId").val();
        var TestNumber = $("#TestNumbers").val();

            var FilterData = [];
            item = {};
        item["CampaignId"] = CampaignId;
        item["TestNumber"] = TestNumber;

            FilterData.push(item);
            var data = JSON.stringify(FilterData);
        $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("SendTestSMS", "Campaigns")',
                data: '{jsonData: ' + JSON.stringify(data) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",

                success: function (response) {
                    console.log(response);
                    if (response != null) {
                        cuteAlert({
                            type: "question",
                            title: "Campaign Confirmation: Part 1",
                            message: "Have you Received the Configured SMS?",
                            confirmText: "Yes",
                            cancelText: "No"
                        }).then((e) => {
                            if (e == ("confirm")) {
                                $("#btnSendTestSMS").prop('disabled', true);
                                $("#btnSendDLT").show();
                            }
                            //else {
                            //    alert(":-(");
                            //}
                        })
                        $("#divLoader").hide();
                    }
                    else {
                        cuteAlert({
                            type: "error",
                            title: "Campaign Confirmation: Error",
                            message: "The Message has not been sent. The campaign will not be active",
                            buttonText: "Okay"
                        })
                        $("#divLoader").hide();
                    }
                },
                error: function (response) {
                    //console.log(response.responseText);
                    alert("InsideError");
                    $("#divLoader").hide();
                }
            });
    }

    $("#ScheduleNow").change(function () {
        if ($("#ScheduleNow").is(':checked') == true) {
            if ($("#ScheduleSwitch").is(':checked') == true) {
                $("#ScheduleSwitch").prop('checked', false);

                if ($('#SchedPick').is(":visible")) {
                    $('#SchedPick').hide();
                }
                else {
                    $('#SchedPick').show();
                }
            }
        }
    });

    $("#ScheduleSwitch").change(function() {
        if ($("#ScheduleNow").is(':checked') == true) {
                $("#ScheduleNow").prop('checked', false);
        }
        if ($('#SchedPick').is(":visible")) {
            $('#SchedPick').hide();
        }
        else {
            $('#SchedPick').show();
        }
    });

    function Showdatetime() {
         $('#datetimepicker').datetimepicker();
    }

    function SendSMSValidate() {
        var CampaignId = $("#CampId").val();

        if (CampaignId != null) {

            SendSMS();
            $("#divLoader").hide();
        }
        else {
            cuteAlert({
                type: "error",
                title: "Error Title",
                message: "Message Not Send",
                buttonText: "Okay"
            })
            $("#divLoader").hide();
        }

    }

    function SendSMS()
    {
            var CampaignId = $("#CampId").val();

            var FilterData = [];
            item = {};
            item["CampaignId"] = CampaignId;

            FilterData.push(item);
            var data = JSON.stringify(FilterData);
        $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("SendSMS", "Campaigns")',
                data: '{jsonData: ' + JSON.stringify(data) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",

                success: function (response) {
                    console.log(response);
                    if (response != null) {
                        cuteAlert({
                            type: "success",
                            title: "Campaign Sent: Successful",
                            message: "Campaign Message will be delivered as per the schedule",
                            buttonText: "Okay"
                        }).then(() => {
                            var urlLink = "@Url.Action("CampaignManagement", "Campaigns")";
                            window.location.href = urlLink;
                        })
                        $("#divLoader").hide();

                    }
                    else {
                        cuteAlert({
                            type: "error",
                            title: "Campaign Confirmation: Error",
                            message: "The Message has not been sent. The campaign will not be active",
                            buttonText: "Okay"
                        })
                        $("#divLoader").hide();
                    }
                },
                error: function (response) {
                    console.log(response.responseText);
                    $("#divLoader").hide();
                }
            });
    }

</script>


