@model  WebApp.ViewModel.UploadCouponViewModel
@{
    ViewBag.Title = "Configure";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="app-main__inner" style="margin-top:-10px;display:none;" id="dvAddCoupon">
    <div class="card p-2 pb-3 pl-4 mb-2">
        <div class="col-md-12 col-lg-12 row">
            <div class="col-md-6 col-lg-6" style="border:1px solid gray;border-radius:5px ">
                <div class="col-md-12 col-lg-12 row mt-3">
                    <h5>Earn Criteria</h5>
                </div>
                <div class="col-md-12 col-lg-12 row mt-3">
                    <div class="col-md-4 col-lg-4">
                        Invoice Value :
                    </div>
                    <div class="col-md-6 col-lg-6">
                        <input type="number" id="earnInvoiceValue1" class="input50" />
                        <input type="number" id="earnInvoiceValue2" class="input50" style="margin-top:10px;" />
                    </div>
                </div>
                <div class="col-md-12 col-lg-12 row mt-3">
                    <div class="col-md-4 col-lg-4">
                        Day :
                    </div>
                    <div class="col-md-6 col-lg-6">
                        @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.RedeemDays(), "Value", "Text"), "All Days", htmlAttributes: new { @class = "input50", @id = "earnddlDays" })&nbsp;
                    </div>
                </div>
                <div class="col-md-12 col-lg-12 row mt-3">
                    <div class="col-md-4 col-lg-4">
                        Caregory/ Product :
                    </div>
                    <div class="col-md-6 col-lg-6">
                        @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.lstCategory, "Value", "Text"), "All Category", htmlAttributes: new { @class = "input50", @id = "earnddlCategory" })&nbsp; <br />
                        @Html.DropDownListFor(x => Model.dummyProduct, new SelectList(Model.lstProduct, "Value", "Text"), "All Product", htmlAttributes: new { @class = "input50", @style = "margin-top:10px;", @id = "earnddlProduct" })&nbsp;
                    </div>
                </div>
                <div class="col-md-12 col-lg-12 row mt-3">
                    <div class="col-md-4 col-lg-4">
                        Earn Brand :
                    </div>
                    <div class="col-md-6 col-lg-6">
                        <input type="text" id="earnBrand" class="input50" />
                    </div>
                </div>
                <div class="col-md-12 col-lg-12 row mt-3">
                    <div class="col-md-4 col-lg-4">
                        Earn Dept :
                    </div>
                    <div class="col-md-6 col-lg-6">
                        <input type="text" id="earnDept" class="input50" />
                    </div>
                </div>
                <div class="col-md-12 col-lg-12 row mt-3">
                    <div class="col-md-4 col-lg-4">
                        Outlet :
                    </div>
                    <div class="col-md-6 col-lg-6">
                        @Html.DropDownListFor(x => Model.dummyProduct, new SelectList(Model.lstOutlet, "Value", "Text"), "All Outlets", htmlAttributes: new { @class = "input50", @id = "earnddlOutlet" })&nbsp;
                    </div>
                </div>

            </div>
            <div class="col-md-6 col-lg-6 pb-2" style="border:1px solid gray;border-radius:5px ">
                <div class="col-md-12 col-lg-12 row mt-3">
                    <h5>Redeemption Criteria</h5>
                </div>
                <div class="col-md-12 col-lg-12 row mt-3">
                    <div class="col-md-4 col-lg-4">
                        Invoice Value :
                    </div>
                    <div class="col-md-6 col-lg-6">
                        <input type="number" id="redeemInvoiceValue1" class="input50" />
                        <input type="number" id="redeemInvoiceValue2" class="input50" style="margin-top:10px;" />
                    </div>
                </div>
                <div class="col-md-12 col-lg-12 row mt-3">
                    <div class="col-md-4 col-lg-4">
                        Day :
                    </div>
                    <div class="col-md-6 col-lg-6">
                        @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.RedeemDays(), "Value", "Text"), "All Days", htmlAttributes: new { @class = "input50", @id = "ddlDays" })&nbsp;
                    </div>
                </div>
                <div class="col-md-12 col-lg-12 row mt-3">
                    <div class="col-md-4 col-lg-4">
                        Caregory/ Product :
                    </div>
                    <div class="col-md-6 col-lg-6">
                        @Html.DropDownListFor(x => Model.dummyCategory, new SelectList(Model.lstCategory, "Value", "Text"), "All Category", htmlAttributes: new { @class = "input50", @id = "ddlCategory" })&nbsp; <br />
                        @Html.DropDownListFor(x => Model.dummyProduct, new SelectList(Model.lstProduct, "Value", "Text"), "All Product", htmlAttributes: new { @class = "input50", @style = "margin-top:10px;", @id = "ddlProduct" })&nbsp;
                    </div>
                </div>
                <div class="col-md-12 col-lg-12 row mt-3">
                    <div class="col-md-4 col-lg-4">
                        Redeem Brand :
                    </div>
                    <div class="col-md-6 col-lg-6">
                        <input type="text" id="burnBrand" class="input50" />
                    </div>
                </div>
                <div class="col-md-12 col-lg-12 row mt-3">
                    <div class="col-md-4 col-lg-4">
                        Redeem Dept :
                    </div>
                    <div class="col-md-6 col-lg-6">
                        <input type="text" id="burnDept" class="input50" />
                    </div>
                </div>
                <div class="col-md-12 col-lg-12 row mt-3">
                    <div class="col-md-4 col-lg-4">
                        Outlet :
                    </div>
                    <div class="col-md-6 col-lg-6">
                        @Html.DropDownListFor(x => Model.dummyProduct, new SelectList(Model.lstOutlet, "Value", "Text"), "All Outlets", htmlAttributes: new { @class = "input50", @id = "ddlOutlet" })&nbsp;
                    </div>
                </div>
                <div class="col-md-12 col-lg-12 row mt-3">
                    <div class="col-md-4 col-lg-4">
                        Offer Code :
                    </div>
                    <div class="col-md-6 col-lg-6">
                        <input type="text" class="input50" id="txtOfferCode" />
                    </div>

                </div>

            </div>
        </div>
        <div class="col-md-12 col-lg-12 row mt-4">
            <div class="col-md-12 col-lg-12" style="text-align:right;">
                <input type="number" id="expiryDays" class="input50" placeholder="Expiry Days" /> 
                <input type="number" id="couponValue" class="input50" placeholder="Coupon Value" /> 
                <input type="checkbox" id="chkIsCouponOnly" style="cursor:pointer;width:20px;height:20px;" /> Apply Coupon Only &nbsp;&nbsp;&nbsp; 
                <input id="txtRuleName" type="text" class="input100" placeholder="Rule Name" />  
                <button type="button" id="btnSaveCouponRule" class="btn btn-primary" onclick="SaveCouponRule();" style="margin-right:10px;"> Save</button>
            </div>
        </div>
    </div>
</div>

<div class="app-main__inner" style="margin-top:-10px;">
    <div class="card p-2 pb-3 pl-4 mb-2">
        <div class="col-md-12 col-lg-12 row">
            <div class="col-md-12 col-lg-12">
                <div style="text-align:right;">
                    <a href="#" onclick="AddCouponRule();" title="Add Coupon Rule">  <img src="~/Content/assets/images/AddCustomer.png" width="7%" /></a>
                </div>
            </div>
            <div class="col-md-12 col-lg-12">
                <table class="table" id="activityTable">
                    <thead>
                        <tr>
                            <th scope="col">Rule Name</th>
                            <th scope="col">Is Coupon Only</th>
                            <th scope="col">Added Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            if (Model.lstCouponRule != null)
                            {
                                foreach (var item in Model.lstCouponRule)
                                {
                                    <tr>
                                        <td>@item.EarnRuleName</td>
                                        <td>@item.IsOnlyCoupon.ToString()</td>
                                        <td>@item.AddedDate.Value.ToString("dd-MM-yyy")</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="5" align="center">No Data Available</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="5">No Data Available</td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $('#activityTable').DataTable({
            "aaSorting": [],
            "paging": true,
            "ordering": true,
            "info": true,
            "bFilter": true,
            "pageLength": 25,
            "pagingType": "simple_numbers"
        });

        $('#activityTable_filter').hide();

        $('#txtSearch').on('keyup', function () {

            $.fn.dataTable.ext.search.push(function (settings, searchData) {
                var term = $('#txtSearch').val().toLowerCase()
                for (var i = 0; i < searchData.length; i++) {
                    if (searchData[i].toLowerCase().indexOf(term) >= 0) {
                        return true;
                    }
                }
                return false;
            });
            var table = $('#activityTable').DataTable();
            table.draw();
        });

        $("#earnddlCategory").change(function () {
            GetProductData(1);
        });
        $("#ddlCategory").change(function () {
            GetProductData(2);
        });
    });
    function AddCouponRule() {
        $("#dvAddCoupon").show(1000)
    }
    function GetProductData(type) {
        var catId = 0;
        if (type == 1) {
            catId = $("#earnddlCategory").val();
        }
        if (type == 2) {
            catId = $("#ddlCategory").val();
        }
            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetProductData", "Coupon")',
                data: "{'CatCode': '" + catId + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    console.log(response)
                    if (type == 1) {
                        $("#earnddlProduct").html("");
                        var items = '<option>All Product</option>';
                        $.each(response, function (i, item) {
                            items += "<option value='" + item.Value + "'>" + item.Text + "</option>";
                        });
                        $("#earnddlProduct").html(items);
                    }
                    if (type == 2) {
                        $("#ddlProduct").html("");
                        var items1 = '<option>All Product</option>';
                        $.each(response, function (i, item1) {
                            items1 += "<option value='" + item1.Value + "'>" + item1.Text + "</option>";
                        });
                        $("#ddlProduct").html(items1);
                    }
                    $("#divLoader").hide();
                },
                failure: function (response) {
                    $("#divLoader").hide();
                },
                error: function (response) {
                    console.log(response)
                    $("#divLoader").hide();
                }
            });

    }

    function SaveCouponRule() {
        var returnStatus = true;


        if ($("#earnInvoiceValue1").val() == "" && $("#earnInvoiceValue2").val() == "" && $("#earnddlDays").val() == "" && $("#earnddlCategory").val() == "" && $("#earnddlOutlet").val() == "" && $("#earnBrand").val() == "" && $("#earnDept").val() == "") {
            if ($("#earnddlProduct").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "Oops..",
                    message: "Please add at least one Earn criteria",
                    buttonText: "Okay"
                })
                returnStatus = false;
                return false;
            }
        }
        if ($("#redeemInvoiceValue1").val() == "" && $("#redeemInvoiceValue2").val() == "" && $("#ddlDays").val() == "" && $("#ddlCategory").val() == "" && $("#ddlOutlet").val() == "" && $("#txtOfferCode").val() == "" && $("#burnBrand").val() == "" && $("#burnDept").val() == "") {
            if ($("#ddlProduct").val() == "") {
                cuteAlert({
                    type: "error",
                    title: "Oops..",
                    message: "Please add at least one redeemption criteria",
                    buttonText: "Okay"
                })
                returnStatus = false;
                return false;
            }
        }
        if ($("#expiryDays").val() == "") {
            cuteAlert({
                type: "error",
                title: "Oops..",
                message: "Please enter Expiry days",
                buttonText: "Okay"
            })
            returnStatus = false;
            return false;
        }
        if ($("#couponValue").val() == "") {
            cuteAlert({
                type: "error",
                title: "Oops..",
                message: "Please enter Coupon value",
                buttonText: "Okay"
            })
            returnStatus = false;
            return false;
        }        
        if ($("#txtRuleName").val() == "") {
            cuteAlert({
                type: "error",
                title: "Oops..",
                message: "Please enter Rule Name",
                buttonText: "Okay"
            })
            returnStatus = false;
            return false;
        }


        

        if (returnStatus) {
            var data = [];
            item = {}
            item["EarnRuleName"] = $("#txtRuleName").val();
            item["EarnInvoiceAmountFrom"] = $("#earnInvoiceValue1").val();
            item["EarnInvoiceAmountTo"] = $("#earnInvoiceValue2").val();
            item["EarnDay"] = $("#earnddlDays").val();
            item["EarnCategory"] = $("#earnddlCategory").val();
            item["EarnProduct"] = $("#earnddlProduct").val();
            item["EarnOutlet"] = $("#earnddlOutlet").val();
            item["RedeemInvoiceAmountFrom"] = $("#redeemInvoiceValue1").val();
            item["RedeemInvoiceAmountTo"] = $("#redeemInvoiceValue2").val();
            item["RedeemDay"] = $("#ddlDays").val();
            item["RedeemCategory"] = $("#ddlCategory").val();
            item["RedeemProduct"] = $("#ddlProduct").val();
            item["RedeemOutlet"] = $("#ddlOutlet").val();
            item["OfferCode"] = $("#txtOfferCode").val();
            if ($('#chkIsCouponOnly').is(':checked'))
                item["IsOnlyCoupon"] = true;
            else
                item["IsOnlyCoupon"] = false;
            item["CouponValue"] = $("#couponValue").val();
            item["ExpiryDays"] = $("#expiryDays").val();

            item["EarnBrand"] = $("#earnBrand").val();
            item["EarnDept"] = $("#earnDept").val();
            item["BurnBrand"] = $("#burnBrand").val();
            item["BurnDept"] = $("#burnDept").val();
            
            data.push(item);
            var datanew = JSON.stringify(data);

            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveCouponRule", "Coupon")',
                data: '{jsonData: ' + JSON.stringify(datanew) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result) {
                        cuteAlert({
                            type: "success",
                            title: "Uploaded",
                            message: "Coupon criteria saved successfully!!!",
                            buttonText: "Okay"
                        }).then((e) => {
                            location.reload();
                        })
                    }
                    else {
                        cuteAlert({
                            type: "error",
                            title: "OOPS...",
                            message: "There is problem in saving data!!!",
                            buttonText: "Okay"
                        })
                    }
                    $("#divLoader").hide();
                },
                error: function (result) {
                    alert(222)

                }
            });
        }
    }


</script>
