// JScript File

function MM_preloadImages() { //v3.0
    var d = document; if (d.images) {
        if (!d.MM_p) d.MM_p = new Array();
        var i, j = d.MM_p.length, a = MM_preloadImages.arguments; for (i = 0; i < a.length; i++)
            if (a[i].indexOf("#") != 0) { d.MM_p[j] = new Image; d.MM_p[j++].src = a[i]; }
    }
}
function MM_swapImgRestore() { //v3.0
    var i, x, a = document.MM_sr; for (i = 0; a && i < a.length && (x = a[i]) && x.oSrc; i++) x.src = x.oSrc;
}
function MM_findObj(n, d) { //v4.01
    var p, i, x; if (!d) d = document; if ((p = n.indexOf("?")) > 0 && parent.frames.length) {
        d = parent.frames[n.substring(p + 1)].document; n = n.substring(0, p);
    }
    if (!(x = d[n]) && d.all) x = d.all[n]; for (i = 0; !x && i < d.forms.length; i++) x = d.forms[i][n];
    for (i = 0; !x && d.layers && i < d.layers.length; i++) x = MM_findObj(n, d.layers[i].document);
    if (!x && d.getElementById) x = d.getElementById(n); return x;
}
function MM_swapImage() { //v3.0
    var i, j = 0, x, a = MM_swapImage.arguments; document.MM_sr = new Array; for (i = 0; i < (a.length - 2); i += 3)
        if ((x = MM_findObj(a[i])) != null) { document.MM_sr[j++] = x; if (!x.oSrc) x.oSrc = x.src; x.src = a[i + 2]; }
}
function onlyNumbers(evt) {
    
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;

    if (charCode > 47 && charCode < 58 || charCode == 9 || charCode == 10 || charCode == 8 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15)
        return true;
    else
        return false;
}
function onlyNumbersdotdollerpound(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if ((charCode > 47 && charCode < 58) || charCode == 46 || charCode == 36 || charCode == 156 || charCode == 9 || charCode == 10 || charCode == 8 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35)
        return true;
    else
        return false;
}
function onlyNumbersdot(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if (charCode > 47 && charCode < 58 || charCode == 46 || charCode == 9 || charCode == 10 || charCode == 8 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15)
        return true;
    else
        return false;
}
function onlyNumbersno(evt) {
    var evtobj = window.event ? event : evt;    
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if ((charCode > 47 && charCode < 58) || charCode == 8 || charCode == 9 || charCode == 10 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35 || (charCode > 36 && charCode < 40) || charCode == 46 || charCode == 97)
        return true;
    else
        return false;
}
function fncTestBox(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if ((charCode > 43 && charCode < 58) || (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 44 || charCode == 34 || charCode == 39 || charCode == 32 || charCode == 8 || charCode == 9 || charCode == 10 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35)
        return true;
    else
        return false;
}
function fncTitleTestBox(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if ((charCode > 47 && charCode < 58) || (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32 || charCode == 44 || charCode == 45 || charCode == 95 || charCode == 8 || charCode == 9 || charCode == 10 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35 || charCode == 13 || (charCode > 36 && charCode < 40) || charCode == 46 || charCode == 97)
        return true;
    else
        return false;
}
function fncPageTitle(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;

    if ((charCode > 47 && charCode < 58) || (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32 || charCode == 38 || charCode == 39 || charCode == 44 || charCode == 45 || charCode == 95 || charCode == 8 || charCode == 9 || charCode == 10 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35 || (charCode > 36 && charCode < 40) || charCode == 46 || charCode == 97)
        return true; 	                       //capital alphabets                       //small alphabets              //space         //&             //'             //,             //-             //_   
    else                                    //added by jagadeeshwar on 20Aug 2008
        return false;
}
function fncPageTitleWithQuestionMark(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if ((charCode > 47 && charCode < 58) || (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32 || charCode == 38 || charCode == 39 || charCode == 44 || charCode == 45 || charCode == 95 || charCode == 8 || charCode == 9 || charCode == 10 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35 || charCode == 63)
        return true; 	                       //capital alphabets                       //small alphabets              //space         //&             //'             //,             //-             //_   
    else                                    //added by jagadeeshwar on 20Aug 2008
        return false;
}




function fncPageURL(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if ((charCode > 47 && charCode < 58) || (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32 || charCode == 44 || charCode == 45 || charCode == 95 || charCode == 8 || charCode == 9 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35)
        return true;
    else
        return false;
}
function fncTestBoxspace(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if (charCode == 32 || charCode == 8 || charCode == 9 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35)
        return false;
    else
        return true;
}
function OnlyChars(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32 || charCode == 8 || charCode == 9 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35 || (charCode > 36 && charCode < 40) || charCode == 46 || charCode == 97)
        return true;
    else
        return false;
}
function AlphaNumeric(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32 || (charCode > 47 && charCode < 58) || charCode == 8 || charCode == 9 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35)
        return true;
    else
        return false;
}
function CapsAlphaNumeric(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if ((charCode > 64 && charCode < 91) || charCode == 32 || (charCode > 47 && charCode < 58) || charCode == 8 || charCode == 9 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35)
        return true;
    else
        return false;
}
function notext(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if (true)
        return false;
    else
        return false;
}
function onlyPhoneNumbers(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if ((charCode > 47 && charCode < 58) || charCode == 32 || charCode == 45 || charCode == 43 || charCode == 8 || charCode == 9 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35)
        return true;
    else
        return false;
}

function ForSearch(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if (charCode == 60 || charCode == 62)
        return false;
    else
        return true;
}


function fncCharnspecial(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32 || charCode == 38 || charCode == 39 || charCode == 44 || charCode == 45 || charCode == 95 || charCode == 8 || charCode == 9 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35)
        return true;
    else
        return false;
}
function onlyPhNumbers(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if (charCode > 47 && charCode < 58 || charCode == 43 || charCode == 45 || charCode == 32 || charCode == 8 || charCode == 9 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35)
        return true;
    else
        return false;
}
function onlyNumbersComma(evt) { var evtobj = window.event ? event : evt; var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode; if ((charCode > 47 && charCode < 58) || charCode == 8 || charCode == 9 || charCode == 10 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35 || charCode == 37 || charCode == 39 || charCode == 46 || charCode == 44 || charCode == 40) return true; else return false; }
function noAngularBraces(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if (charCode != 60 && charCode != 61 && charCode != 62 || charCode == 8 || charCode == 9 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35)
        return true;
    else
        return false;
}
function WatermarkFocus(txtElem, strWatermark) {
    if (txtElem.value == strWatermark) txtElem.value = '';
}
function WatermarkBlur(txtElem, strWatermark) {
    if (txtElem.value == '') txtElem.value = strWatermark;
}
function CheckAll(RepeaterItem, ModuleId, PermissionCount) {

    //this function will check all the permissions as per the module selection.  
    var ModuleId = ModuleId;
    var PermissionCount = PermissionCount;
    var RepeaterItem = RepeaterItem;
    var grid = RepeaterItem + "_gvPermissions";

    elm = document.getElementById(grid).rows;
    var k = 2;
    k = k - 0;
    for (i = 0; i < elm.length - 1; i++) {
        if (k < 10) {
            if (grid + "_ctl0" + k + "_chkModule" == ModuleId) {
                if (document.getElementById(grid + "_ctl0" + k + "_chkModule").checked == true) {
                    document.getElementById(grid + "_ctl0" + k + "_chkPermissions_0").checked = true
                    if (document.getElementById(grid + "_ctl0" + k + "_chkPermissions_1") != null) {
                        document.getElementById(grid + "_ctl0" + k + "_chkPermissions_1").checked = true
                    }
                    if (PermissionCount > 2) {
                        document.getElementById(grid + "_ctl0" + k + "_chkPermissions_2").checked = true


                        if (document.getElementById(grid + "_ctl0" + k + "_chkPermissions_3") != null) {
                            document.getElementById(grid + "_ctl0" + k + "_chkPermissions_3").checked = true
                        }
                        if (document.getElementById(grid + "_ctl0" + k + "_chkPermissions_4") != null) {

                            document.getElementById(grid + "_ctl0" + k + "_chkPermissions_4").checked = true
                        }
                        if (PermissionCount == 6)
                            document.getElementById(grid + "_ctl0" + k + "_chkPermissions_5").checked = true

                        if (PermissionCount == 7)
                            document.getElementById(grid + "_ctl0" + k + "_chkPermissions_5").checked = true
                        if (document.getElementById(grid + "_ctl0" + k + "_chkPermissions_6") != null) {
                            document.getElementById(grid + "_ctl0" + k + "_chkPermissions_6").checked = true
                        }
                    }
                }
                else {
                    document.getElementById(grid + "_ctl0" + k + "_chkPermissions_0").checked = false
                    if (document.getElementById(grid + "_ctl0" + k + "_chkPermissions_1") != null) {
                        document.getElementById(grid + "_ctl0" + k + "_chkPermissions_1").checked = false
                    }
                    if (PermissionCount > 2) {
                        document.getElementById(grid + "_ctl0" + k + "_chkPermissions_2").checked = false
                        if (document.getElementById(grid + "_ctl0" + k + "_chkPermissions_3") != null) {
                            document.getElementById(grid + "_ctl0" + k + "_chkPermissions_3").checked = false
                        }
                        if (document.getElementById(grid + "_ctl0" + k + "_chkPermissions_4") != null) {

                            document.getElementById(grid + "_ctl0" + k + "_chkPermissions_4").checked = false
                        }
                        if (PermissionCount == 6)
                            document.getElementById(grid + "_ctl0" + k + "_chkPermissions_5").checked = false
                        if (PermissionCount == 7)
                            document.getElementById(grid + "_ctl0" + k + "_chkPermissions_5").checked = false
                        if (document.getElementById(grid + "_ctl0" + k + "_chkPermissions_6") != null) {
                            document.getElementById(grid + "_ctl0" + k + "_chkPermissions_6").checked = false
                        }
                    }
                }
            }
        }
        else {
            if (grid + "_ctl" + k + "_chkModule" == ModuleId) {
                if (document.getElementById(grid + "_ctl" + k + "_chkModule").checked == true) {
                    document.getElementById(grid + "_ctl" + k + "_chkPermissions_0").checked = true
                    if (document.getElementById(grid + "_ctl" + k + "_chkPermissions_1") != null) {
                        document.getElementById(grid + "_ctl" + k + "_chkPermissions_1").checked = true
                    }
                    if (PermissionCount > 2) {
                        document.getElementById(grid + "_ctl" + k + "_chkPermissions_2").checked = true
                        if (document.getElementById(grid + "_ctl" + k + "_chkPermissions_3") != null) {
                            document.getElementById(grid + "_ctl" + k + "_chkPermissions_3").checked = true
                        }
                        if (document.getElementById(grid + "_ctl" + k + "_chkPermissions_4") != null) {

                            document.getElementById(grid + "_ctl" + k + "_chkPermissions_4").checked = true
                        }
                        if (PermissionCount == 6)
                            document.getElementById(grid + "_ctl" + k + "_chkPermissions_5").checked = true

                        if (PermissionCount == 7)
                            document.getElementById(grid + "_ctl0" + k + "_chkPermissions_5").checked = true
                        if (document.getElementById(grid + "_ctl0" + k + "_chkPermissions_6") != null) {
                            document.getElementById(grid + "_ctl0" + k + "_chkPermissions_6").checked = true
                        }
                    }
                }
                else {
                    document.getElementById(grid + "_ctl" + k + "_chkPermissions_0").checked = false
                    if (document.getElementById(grid + "_ctl" + k + "_chkPermissions_1") != null) {
                        document.getElementById(grid + "_ctl" + k + "_chkPermissions_1").checked = false
                    }
                    if (PermissionCount > 2) {
                        document.getElementById(grid + "_ctl" + k + "_chkPermissions_2").checked = false
                        if (document.getElementById(grid + "_ctl" + k + "_chkPermissions_3") != null) {

                            document.getElementById(grid + "_ctl" + k + "_chkPermissions_3").checked = false
                        }
                        if (document.getElementById(grid + "_ctl" + k + "_chkPermissions_4") != null) {

                            document.getElementById(grid + "_ctl" + k + "_chkPermissions_4").checked = false
                        }
                        if (PermissionCount == 6)
                            document.getElementById(grid + "_ctl" + k + "_chkPermissions_5").checked = false
                        if (PermissionCount == 7)
                            document.getElementById(grid + "_ctl0" + k + "_chkPermissions_5").checked = false
                        if (document.getElementById(grid + "_ctl0" + k + "_chkPermissions_6") != null) {
                            document.getElementById(grid + "_ctl0" + k + "_chkPermissions_6").checked = false
                        }
                    }
                }
            }
        }
        k++;
    }
}

function TradingCheck() {
    if (document.getElementById("ctl00_ContentPlaceHolder1_chkUseTradingname").checked) {
        if (document.getElementById("ctl00_ContentPlaceHolder1_txtTradingName").value == "") {
            alert("Enter Trading Name");
            return false;
        }
    }
    else {
        if (document.getElementById("ctl00_ContentPlaceHolder1_txtTradingName").value != "") {
            alert("Check Use Trading Name");
            return false;
        }
    }
}
function adjustPageSize(aPageSizeTextboxNode, aKeyCode, aLowerBound, aUpperBound) {
    var justDoIt = true;
    if (justDoIt == true) {
        // myAlert("adjustPage(event.which=" + event.which + ",event.keyCode=" + event.keyCode + ")");

        if (aPageSizeTextboxNode != null) {
            var lWhichCode = aKeyCode;

            // if up arrow, or plus key...
            if ((lWhichCode == 38) || (lWhichCode == 107)) {
                // strip "+" character if it has been appended to page size value
                while ((lWhichCode == 107) && (aPageSizeTextboxNode.value.charAt(aPageSizeTextboxNode.value.length - 1) == "+")) {
                    aPageSizeTextboxNode.value = (aPageSizeTextboxNode.value).substring(0, aPageSizeTextboxNode.value.length - 1);
                }

                // if page size not initialized or contains invalid characters...
                if ((aPageSizeTextboxNode.value == "") || (isNaN(aPageSizeTextboxNode.value))) {
                    // set initial value as "1"
                    aPageSizeTextboxNode.value = 10;
                }
                else {
                    // upper bounds check
                    if (aPageSizeTextboxNode.value < aUpperBound) {
                        aPageSizeTextboxNode.value = new Number(aPageSizeTextboxNode.value) + 1;
                    }
                }
            }
            // else if down arrow, or minus key...
            else if ((lWhichCode == 40) || (lWhichCode == 109)) {
                // strip "-" character if it has been appended to page size value
                while ((lWhichCode == 109) && (aPageSizeTextboxNode.value.charAt(aPageSizeTextboxNode.value.length - 1) == "-")) {
                    aPageSizeTextboxNode.value = (aPageSizeTextboxNode.value).substring(0, aPageSizeTextboxNode.value.length - 1);
                }

                // if page size not initialized or contains invalid characters...
                if ((aPageSizeTextboxNode.value == "") || (isNaN(aPageSizeTextboxNode.value))) {
                    // set initial value as "1"
                    aPageSizeTextboxNode.value = 10;
                }
                else {
                    // lower bounds check
                    if (aPageSizeTextboxNode.value > aLowerBound) {
                        aPageSizeTextboxNode.value = new Number(aPageSizeTextboxNode.value) - 1;
                    }
                }
            }
        }
    }
}

function clickButton(e, buttonid) {
    if ($.browser.msie) /*for ie*/
    {
        if (e.keyCode == 13) {
            document.getElementById(buttonid).click();
            return false;
        }
    }
    else /*for firefox, chrome, safari*/
    {
        if (e.which == 13) {
            var btnid1 = buttonid.replace(/_/g, "$");
            __doPostBack(btnid1, "");
            return false;
        }
    }
}



function fncHTML(evt) {
    var e = event || evt;
    var charCode = e.which || e.keyCode;
    if ((charCode > 47 && charCode < 58) || (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32 || charCode == 38 || charCode == 39 || charCode == 44 || charCode == 45 || charCode == 95 || charCode > 61 || charCode < 62 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35)
        return true;
    else
        return false;
}







// multiline textbox functions


// Keep user from entering more than maxLength characters
function doKeypress(control) {
    maxLength = control.attributes["maxLength"].value;
    value = control.value;

    if (maxLength && value.length > maxLength - 1) {
        event.returnValue = false;
        maxLength = parseInt(maxLength);
    }
}
// Cancel default behavior
function doBeforePaste(control) {
    maxLength = control.attributes["maxLength"].value;
    if (maxLength) {
        event.returnValue = false;
    }
}
// Cancel default behavior and create a new paste routine
function doPaste(control) {
    maxLength = control.attributes["maxLength"].value;
    value = control.value;
    if (maxLength) {
        if (navigator.appName == "Microsoft Internet Explorer") {
            if (event != null) {
                event.returnValue = false;
            }
        }
        maxLength = parseInt(maxLength);
        var oTR = control.document.selection.createRange();
        var iInsertLength = maxLength - value.length + oTR.text.length;
        var sData = window.clipboardData.getData("Text").substr(0, iInsertLength);
        oTR.text = sData;
    }
}
// end of multiline textbox functions

function doKeyUp(control) {
    maxLength = control.attributes["maxLength"].value;
    value = control.value;

    if (maxLength && value.length > maxLength - 1) {
        control.value = value.substr(0, maxLength);
        return false;
    }
}

function fncAlphaNumeric(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;

    if (charCode == evtobj.keyCode) {
        if ((charCode > 47 && charCode < 58) || (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32 || charCode == 44 || charCode == 45 || charCode == 95 || charCode == 2 || charCode == 3 || charCode == 8 || charCode == 9 || charCode == 10 || charCode == 13 || charCode == 14 || charCode == 15)//charCode == 35 ||   ||charCode == 36  || charCode == 37|| charCode == 39 )
            return true;
        else
            return false;

    }
    else {
        if ((charCode > 47 && charCode < 58) || (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32 || charCode == 44 || charCode == 45 || charCode == 95 || charCode == 2 || charCode == 3 || charCode == 8 || charCode == 9 || charCode == 10 || charCode == 13 || charCode == 14 || charCode == 15) //  ||charCode == 36  || charCode == 37|| charCode == 39
            return true;
        else
            return false;
    }


}
// multiline textbox functions


function fncURLLinks(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if ((charCode > 47 && charCode < 58) || (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32 || charCode == 95 || charCode == 2 || charCode == 3 || charCode == 8 || charCode == 9 || charCode == 10 || charCode == 14 || charCode == 15 || charCode == 35 || charCode == 46 || charCode == 47 || charCode == 58)
        return true;
    else
        return false;
}

function CheckAllForModule(RepeaterItem, ModuleId, PermissionCount) {

    //this function will check all the permissions as per the module selection.  
    var ModuleId = ModuleId;
    var PermissionCount = PermissionCount;
    var RepeaterItem = RepeaterItem;
    var grid = "ctl00_ContentPlaceHolder1_gvPermissions"; //RepeaterItem + "_gvPermissions";
    elm = document.getElementById(grid).rows;
    var k = 2;

    for (i = 0; i < elm.length - 1; i++) {
        if (k < 10) {
            if (grid + "_ctl0" + k + "_chkModule" == ModuleId) {
                if (document.getElementById(grid + "_ctl0" + k + "_chkModule").checked == true) {
                    document.getElementById(grid + "_ctl0" + k + "_chkCommunicationType_0").checked = true;
                    // document.getElementById(grid + "_ctl0"+k+"_chkCommunicationType_1").checked=true;
                    document.getElementById(grid + "_ctl0" + k + "_chkActions_0").checked = true;
                    document.getElementById(grid + "_ctl0" + k + "_chkActions_1").checked = true;
                    document.getElementById(grid + "_ctl0" + k + "_chkActions_2").checked = true;
                    document.getElementById(grid + "_ctl0" + k + "_chkActions_3").checked = true;
                }
                else {
                    document.getElementById(grid + "_ctl0" + k + "_chkCommunicationType_0").checked = false;
                    //document.getElementById(grid + "_ctl0"+k+"_chkCommunicationType_1").checked=false;
                    document.getElementById(grid + "_ctl0" + k + "_chkActions_0").checked = false;
                    document.getElementById(grid + "_ctl0" + k + "_chkActions_1").checked = false;
                    document.getElementById(grid + "_ctl0" + k + "_chkActions_2").checked = false;
                    document.getElementById(grid + "_ctl0" + k + "_chkActions_3").checked = false;
                }
            }
        }
        else {
            if (grid + "_ctl" + k + "_chkModule" == ModuleId) {
                if (document.getElementById(grid + "_ctl" + k + "_chkModule").checked == true) {
                    document.getElementById(grid + "_ctl" + k + "_chkCommunicationType_0").checked = true;
                    // document.getElementById(grid + "_ctl0"+k+"_chkCommunicationType_1").checked=true;
                    document.getElementById(grid + "_ctl" + k + "_chkActions_0").checked = true;
                    document.getElementById(grid + "_ctl" + k + "_chkActions_1").checked = true;
                    document.getElementById(grid + "_ctl" + k + "_chkActions_2").checked = true;
                    document.getElementById(grid + "_ctl" + k + "_chkActions_3").checked = true;
                }
                else {
                    document.getElementById(grid + "_ctl" + k + "_chkCommunicationType_0").checked = false;
                    // document.getElementById(grid + "_ctl0"+k+"_chkCommunicationType_1").checked=false;
                    document.getElementById(grid + "_ctl" + k + "_chkActions_0").checked = false;
                    document.getElementById(grid + "_ctl" + k + "_chkActions_1").checked = false;
                    document.getElementById(grid + "_ctl" + k + "_chkActions_2").checked = false;
                    document.getElementById(grid + "_ctl" + k + "_chkActions_3").checked = false;
                }
            }
        }
        k++;
    }
}

function FindWords(lblId, MessageId) {

    var corrector = 0;
    document.getElementById(lblId).innerHTML = document.getElementById(MessageId).value.length;
}

function checkProfanityWord(oSrc, args) {

    var IsProfanity = "false";
    if (document.getElementById('ctl00_hdfIsProfanity') != null) {
      IsProfanity=  document.getElementById('ctl00_hdfIsProfanity').value;
    }
    var flag = 0;
    var strMessage = "";
    var WordCount = 0;
    // alert(oSrc.controltovalidate);
    //alert( oSrc.controltovalidate);
    // alert( document.getElementById(oSrc.id).innerHTML);

    if (IsProfanity.toLowerCase() == "true") {
        // alert(IsProfanity);
        var arr_profane_words123 = document.getElementById('ctl00_ContentPlaceHolder1_hdfProfanityWords').value.toLowerCase().split('|');

        for (var i = 0; i < arr_profane_words123.length; i++) {
            if (document.getElementById(oSrc.controltovalidate).value != "") {
                var Titlevalue = document.getElementById(oSrc.controltovalidate).value;
                Titlevalue = Titlevalue.toLowerCase();
                var arr_Titlevalue = Titlevalue.split(' ');
                if (arr_profane_words123[i].length > 0) {
                    for (var j = 0; j < arr_Titlevalue.length; j++) {
                        if (arr_Titlevalue[j] != " " && arr_Titlevalue[j] != "") {

                            if (arr_Titlevalue[j] == arr_profane_words123[i]) {
                                flag = 1;
                                WordCount++;
                                if (WordCount > 0) {
                                    strMessage = strMessage + " '" + arr_profane_words123[i] + "' ";
                                }
                                else {
                                    strMessage = strMessage + " '" + arr_profane_words123[i] + "'";
                                }

                            }
                        }
                    }
                }
            }
        }
    }
    if (flag == 0) {
        args.IsValid = true;
    }
    else {
        document.getElementById(oSrc.id).innerHTML = "Enter valid text instead of " + strMessage;
        args.IsValid = false;
    }
}

function checkProfanityWordEditor(oSrc, args) {
    var flag = 0;
    var strMessage = "";
    var WordCount = 0;
    var IsProfanity = document.getElementById('ctl00_hdfIsProfanity').value;

    // alert(oSrc.controltovalidate);
    //alert(oSrc.controltovalidate);
    // alert( document.getElementById(oSrc.id).innerHTML);
    // alert(document.getElementById(oSrc.controltovalidate).getHTML());
    if (IsProfanity.toLowerCase() == "true") {
        var arr_profane_words123 = document.getElementById('ctl00_ContentPlaceHolder1_hdfProfanityWords').value.toLowerCase().split('|');
        for (var i = 0; i < arr_profane_words123.length; i++) {
            if (document.getElementById(oSrc.controltovalidate).getHTML() != "") {
                //                var editdoc = document.getElementById(oSrc.controltovalidate).GetDocument();
                //                Titlevalue = editdoc.body.innerText;
                Titlevalue = document.getElementById(oSrc.controltovalidate).getHTML();
                Titlevalue = Titlevalue.toLowerCase();
                //                Titlevalue = Titlevalue.replace(new RegExp('\\.', 'g'), " ");
                var arr_Titlevalue = Titlevalue.split(' ');
                if (arr_profane_words123[i].length > 0) {
                    for (var j = 0; j < arr_Titlevalue.length; j++) {
                        if (arr_Titlevalue[j] != " " && arr_Titlevalue[j] != "") {

                            if (arr_Titlevalue[j] == arr_profane_words123[i]) {
                                flag = 1;
                                WordCount++;
                                if (WordCount > 0) {
                                    strMessage = strMessage + " '" + arr_profane_words123[i] + "' ";
                                }
                                else {
                                    strMessage = strMessage + " '" + arr_profane_words123[i] + "'";
                                }

                            }
                        }
                    }
                }


            }
        }
    }

    if (flag == 0) {
        args.IsValid = true;
    }
    else {
        document.getElementById(oSrc.id).innerHTML = "Enter valid text instead of " + strMessage;
        args.IsValid = false;
    }
}



//************************************************************************************************
//--Name     : trim 
//--Purpose  : trim the string with defined chars
//--Arguments: str: the string which needs to be trimed, chars: which will be trimed from str
//--Author   : Srinivas Kodukula
//--Date     : 13 Oct 2009
//************************************************************************************************	
//  Version       Author                       Date            Remarks       
//--------------------------------------------------------------------------------------
//	1.0.0	      Srinivas Kodukula      13 Oct 2009       Creation. 
//	************************************************************************************************/	
function trim(str, chars) {
    return ltrim(rtrim(str, chars), chars);
}
//************************************************************************************************
//--Name     : ltrim 
//--Purpose  : trim from left
//--Arguments: str will the string which need to be trimed, chars which will be trimed from str
//--Author   : Srinivas Kodukula
//--Date     : 13 Oct 2009
//************************************************************************************************	
//  Version       Author                       Date            Remarks       
//--------------------------------------------------------------------------------------
//	1.0.0	      Srinivas Kodukula      13 Oct 2009       Creation. 
//	************************************************************************************************/	
function ltrim(str, chars) {
    chars = chars || "\\s";
    return str.replace(new RegExp("^[" + chars + "]+", "g"), "");
}
//************************************************************************************************
//--Name     : rtrim 
//--Purpose  : trim from right
//--Arguments: str will the string which need to be trimed, chars which will be trimed from str
//--Author   : Srinivas Kodukula
//--Date     : 13 Oct 2009
//************************************************************************************************	
//  Version       Author                       Date            Remarks       
//--------------------------------------------------------------------------------------
//	1.0.0	      Srinivas Kodukula      13 Oct 2009       Creation. 
//	************************************************************************************************/	
function rtrim(str, chars) {
    chars = chars || "\\s";
    return str.replace(new RegExp("[" + chars + "]+$", "g"), "");
}
/***********Please dont touch this ***************/

// Returns page height;
//
function GetPageHeight() {
    var scrollX, scrollY, windowX, windowY, pageX, pageY;
    if (window.innerHeight && window.scrollMaxY) {
        scrollX = document.body.scrollWidth;
        scrollY = window.innerHeight + window.scrollMaxY;
    } else if (document.body.scrollHeight > document.body.offsetHeight) { // all but Explorer Mac
        scrollX = document.body.scrollWidth;
        scrollY = document.body.scrollHeight;
    } else { // Explorer Mac...would also work in Explorer 6 Strict, Mozilla and Safari
        scrollX = document.body.offsetWidth;
        scrollY = document.body.offsetHeight;
    }

    if (self.innerHeight) {	// all except Explorer
        windowX = self.innerWidth;
        windowY = self.innerHeight;
    } else if (document.documentElement && document.documentElement.clientHeight) { // Explorer 6 Strict Mode
        windowX = document.documentElement.clientWidth;
        windowY = document.documentElement.clientHeight;
    } else if (document.body) { // other Explorers
        windowX = document.body.clientWidth;
        windowY = document.body.clientHeight;
    }

    pageY = (scrollY < windowY) ? windowY : scrollY; // for small pages with total height less then height of the viewport
    pageX = (scrollX < windowX) ? windowX : scrollX; // for small pages with total width less then width of the viewport

    return pageY;
}


function onlyPageNumbers(evt) {

var evtobj = window.event ? event : evt;
var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;

if (charCode > 47 && charCode < 58 || charCode == 8 || charCode == 9)
return true; //back space
else //added by jagadeeshwar on 20 Dec 2008
return false;
}

/************End of Code*****************/
function fncWebSitePageUrl(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if ((charCode > 47 && charCode < 58) || (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32 || charCode == 38 || charCode == 39 || charCode == 44 || charCode == 45 || charCode == 95 || charCode == 8 || charCode == 9 || charCode == 10 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 63 || charCode == 35 || charCode == 47 || charCode == 92)
        return true; 	                       //capital alphabets                       //small alphabets              //space         //&             //'             //,             //-             //_   
    else                                    //added by jagadeeshwar on 20Aug 2008
        return false;
}
function fncWebSitePageTitle(evt) {

    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if ((charCode > 47 && charCode < 58) || (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32 || charCode == 38 || charCode == 39 || charCode == 44 || charCode == 45 || charCode == 95 || charCode == 8 || charCode == 9 || charCode == 10 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 63 || charCode == 40 || charCode == 41 || charCode == 35)
        return true; 	                       //capital alphabets                       //small alphabets              //space         //&             //'             //,             //-             //_   
    else                                    //added by jagadeeshwar on 20Aug 2008
        return false;
}
function fncfaqTitle(evt) {

    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if ((charCode > 46 && charCode < 58) || (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32 || charCode == 38 || charCode == 39 || charCode == 44 || charCode == 45 || charCode == 95 || charCode == 8 || charCode == 9 || charCode == 10 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 63 || charCode == 40 || charCode == 41 || charCode == 35)
        return true; 	                       //capital alphabets                       //small alphabets              //space         //&             //'             //,             //-             //_   
    else                                    //added by jagadeeshwar on 20Aug 2008
        return false;
}
function fncWebSiteAddress(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if ((charCode > 47 && charCode < 59) || (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32 || charCode == 38 || charCode == 39 || charCode == 44 || charCode == 45 || charCode == 95 || charCode == 8 || charCode == 9 || charCode == 10 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35 || charCode == 37 || charCode == 39 || charCode == 46 || charCode == 40 || charCode == 47 || charCode == 92 || charCode == 41)
        return true;
    else
        return false;
}
function fncEnterClick_CMS(evt, BtnID)/*Where BtnID is clientid of the button*/
{
    if ($.browser.msie) /*for ie*/
    {

        if (evt.keyCode == 13) {
            document.getElementById(BtnID).click();
        }
    }
    else /*for firefox only*/
    {
        if (evt.which == 13) {
            var btnid1 = BtnID.replace(/_/g, "$");
            __doPostBack(btnid1, "");
        }
    }
}

function fncAddress(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
    if ((charCode > 46 && charCode < 58) || (charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32 || charCode == 38 || charCode == 39 || charCode == 44 || charCode == 45 || charCode == 95 || charCode == 8 || charCode == 9 || charCode == 10 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15 || charCode == 46 || charCode == 36 || charCode == 35 || charCode == 92 || charCode == 40 || charCode == 41)
        return true; 	                       //capital alphabets                       //small alphabets              //space         //&             //'             //,             //-             //_   
    else                                    //added by jagadeeshwar on 20Aug 2008
        return false;
}





function CharacterCount(textarea, limit, e, LabelCount) {  
    var text = textarea.value;
    var textlength = text.length;
    var Browser = navigator.appName;

    if (Browser == 'Microsoft Internet Explorer') {
        var strSingleLineText = text.replace(new RegExp("\\n", "g"), "$");
        var strs = strSingleLineText.split('$');
        var noOfNewLines = (strs.length - 1);
        //strSingleLineText.value =limit-(strs.length - 1);
        strSingleLineText.length = strSingleLineText - (noOfNewLines);

    }
    else
    { var strSingleLineText = text.replace(new RegExp("\\n", "g"), "@"); }

    var stringAfterReplacingValue = strSingleLineText.value;
    var stringAfterReplacing = strSingleLineText.length;

    if (stringAfterReplacing > limit) {
        if (window.event)//For IE
        { e.returnValue = false; }
        else//For Firefox
        {
            textarea.value = text.substr(0, limit);
            return false;
        }
        //alert('Max Characters Reached');
    }
    else {
        if (Browser == 'Microsoft Internet Explorer') {
            document.getElementById(LabelCount).innerText = (limit - stringAfterReplacing); return true;
        }
        else {

            if (document.all) {

                document.getElementById(LabelCount).innerText = (limit - stringAfterReplacing);
                return true;
            }
            else
                document.getElementById(LabelCount).textContent = (limit - stringAfterReplacing); //for displaying in firefox
            return true;
        }
    }
}

function fnAssignDropdownTooltip(DropdownId) {
    if (document.getElementById(DropdownId) != null) {
        var ddlLength = document.getElementById(DropdownId).options.length;
        for (i = 0; i < ddlLength; i++) {
            document.getElementById(DropdownId).options[i].title = document.getElementById(DropdownId).options[i].text;
        }
    }
}
// Allows Numbers,Dot & Hyphen
function onlyNumbersDotHyphen(evt) {
    var evtobj = window.event ? event : evt;
    var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;

    if (charCode == 60 || charCode == 62) {
        return false;
    }
    else 
    {
        if (charCode > 47 && charCode < 58 || charCode == 8 || charCode == 9 || charCode == 46 || charCode == 45 || charCode == 60 || charCode == 62) 
            {
                return true;
            }

        else
            {
                return false;
            }
        }
    }

//Allow only Numbers -- added by Gopi on -- 1 June 2012
    function allowsOnlyNumbers(evt) {
        var evtobj = window.event ? event : evt;
        var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
        if ((charCode > 47 && charCode < 58)|| charCode == 8 || charCode == 9 || charCode == 11)
            return true;
        else
            return false;
    }

  //Allow only Chars -- added by Gopi on -- 1 June 2012

    function allowsOnlyChars(evt) {
        var evtobj = window.event ? event : evt;
        var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;
        //65-91 --Upper case && 97 -122 LoweCase chars
        if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8 || charCode == 9 || charCode == 11 || charCode == 32)
            return true;
        else
            return false;
    }

    function onlyNumbersAndSlash(evt) {
        debugger;
        var evtobj = window.event ? event : evt;
        var charCode = evtobj.charCode ? evtobj.charCode : evtobj.keyCode;

        if (charCode >= 47 && charCode < 58 || charCode == 9 || charCode == 10 || charCode == 8 || charCode == 2 || charCode == 3 || charCode == 14 || charCode == 15)
            return true;
        else
            return false;
    }