@model BOTS_BL.Models.DLCDashboardContent
@using System.Globalization
@using BOTS_BL.Models;
@using DLC.ViewModel;
@{
    ViewBag.Title = "Index";
    Layout = null;

    var sessionVariables = (SessionVariables)Session["SessionVariables"];
    var Flag = sessionVariables.Flag;
    var MobileNo = sessionVariables.MobileNo;
    var HeaderColor = sessionVariables.objDashboardConfig.HeaderColor;
    var FontColor = sessionVariables.objDashboardConfig.FontColor;
   
    var logoUrl = sessionVariables.objDashboardConfig.UseLogoURL;
    var logoSize = sessionVariables.objDashboardConfig.UseLogo;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no" />
    <title>Gift Points</title>
    <link href="~/css/gift.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.2.0/fonts/remixicon.css"
          rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://kit.fontawesome.com/407b165ed6.js" crossorigin="anonymous"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <link href="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />
    <style>
        .start-button {
            padding: 10px 20px;
            font-size: 16px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            margin-top: 4%;
        }

        .start-button {
            background-color: #4CAF50; /* Green */
            color: white;
        }
        @@media only screen and (min-width: 900px) and (max-width: 1280px) {
            .heading-container {
                margin-top: 16% !important;
            }
        }

        @@media only screen and (max-width: 250px) {
            .heading-container {
                display: flex;
                justify-content: space-around;
                align-items: center;
                margin-top: 9% !important;
            }
        }

        @@media only screen and (max-width: 850px) {
            .heading-container {
                font-size:10px;
                margin-top: 30% !important;
            }
        }
        .logo img {
            width: 180px!important;
            height: 100px!important;
        }
        .footer {
            
            background-color: #344966;
            height: 11vh;
            padding: 20px 20px;
            clear: both;
        }
        .sticky-nav {
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000; /*Ensure it's on top of other elements */
            background-color: white; /*Change as needed */
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /*Optional shadow */
        }

        .features {
            display: flex;
            justify-content: space-between;
            padding: 10px 20px;
        }

        /*Make sure there's padding on the page to compensate for the sticky nav's height */
        body {
            padding-top: 120px; /*Adjust this value based on the height of your navbar */
        }

        /*Optional: Customize appearance of nav links */
        .sticky-nav a {
            text-decoration: none;
            color: black;
        }

            .sticky-nav a:hover {
                text-decoration: underline;
            }

        Ensure logo scales properly
        .logo img {
            max-width: 100%;
            height: auto;
        }
    </style>
</head>
<body>
    <!-- navigation baar -->
    <nav class="sticky-nav">
        @if (logoSize == "Small")
        {
            <div class="logo" style="box-shadow: rgb(136, 136, 136) 5px 5px 19px 3px; height: 100px !important; width: 180px !important; margin-top: -40px;">
                <img id="imgLogo" src="@logoUrl" width="200" height="100" />
            </div>}
        @if (logoSize == "Medium")
        {
            <div class="logo" style="box-shadow: rgb(136, 136, 136) 5px 5px 19px 3px; height: 150px !important; width: 300px !important; margin-top: -40px;">
                <img id="imgLogo" src="@logoUrl" width="300" height="150" />
            </div>}
        @if (logoSize == "Big")
        {
            <div class="logo" style="box-shadow: rgb(136, 136, 136) 5px 5px 19px 3px; height: 200px !important; width: 400px !important; margin-top: -40px;">
                <img id="imgLogo" src="@logoUrl" width="400" height="200" />
            </div>}
        <div class="profile_links">
            <!-- Profile links here -->
        </div>
        <div class="language" style="display:none">
            <select name="language" id="">
                <option value="language">Language</option>
                <option value="English">English</option>
                <option value="Hindi">Hindi</option>
                <option value="Marathi">Marathi</option>
            </select>
        </div>
        <div class="features" style="margin-left:250px;margin-top:15px;">
            <a href="@Url.Action("Index", "Dashboard")"><h1>Dashboard</h1></a>
            <a href="@Url.Action("Index", "Store")"><h1>Store locator</h1></a>
            <a href="@Url.Action("Index", "ReferEarn")"><h1 class="active">Refer and Earn</h1></a>
            <a href="@Url.Action("Index", "PersonalDetails")"><h1>Personal Details</h1></a>
            <a href="@Url.Action("Index", "TransactionHistory")"><h1>Transaction History</h1></a>
            <a href="@Url.Action("Index", "GiftPoints")"><h1>Gift Points</h1></a>
            <a href="@Url.Action("Index", "Terms")"><h1>Terms and Conditions</h1></a>
            <a href="@Url.Action("Index", "Optout")"><h1>Optout</h1></a>
            <a href="@Url.Action("Logout", "Start")"><h1>Logout</h1></a>
        </div>
        <div class="hamburger">
            <i class="ri-menu-2-line"></i>
        </div>
    </nav>
    <div class="menu-container">
        <div id="menu">
            <a href="@Url.Action("Index", "Dashboard")"><h1>Dashboard</h1></a>
            <a href="@Url.Action("Index", "Store")"><h1>Store locator</h1></a>
            <a href="@Url.Action("Index", "ReferEarn")"><h1>Refer and Earn</h1></a>
            <a href="@Url.Action("Index", "PersonalDetails")"><h1>Personal Details</h1></a>
            <a href="@Url.Action("Index", "TransactionHistory")"><h1>Transaction History</h1></a>
            <a href="@Url.Action("Index", "GiftPoints")"><h1 class="active">Gift Points</h1></a>
            <a href="@Url.Action("Index", "Terms")"><h1>Terms and Conditions</h1></a>
            <a href="@Url.Action("Index", "Optout")"><h1>Optout</h1></a>
            <a href="@Url.Action("Logout", "Start")"><h1>Logout</h1></a>
        </div>
    </div>

    <!-- navigation end -->

    <div class="heading-container">
        <div class="heading heading1" style="margin-left: 60px">
            <h2>TOTAL POINTS</h2>
        </div>

        <div class="heading heading2" style="margin-left: 50px">
            <h2>POINTS YOU CAN GIFT</h2>

        </div>

        @*<div class="heading heading3">
                <h2>BALANCE POINTS</h2>
            </div>*@
    </div>
    <div class="circle-container">
        <div id="txtTotalPoints" style="margin-left:30px;">
            <span>@Convert.ToInt32(Model.EarnPoints)</span>
        </div>
        <div id="txtRedemablePoints" style="margin-right:40px;">
            <span>@Convert.ToInt32(Model.BasePoints)</span>

        </div>

        @*<div class="circle green">
                <span id="txtRemainingPoints">0</span>
            </div>*@
    </div>


    <div class="note" style="margin-bottom: 50px;">
        <p style="text-align: center;display:none;">
            <b>Note: </b>Promotional points are not eligible for gifting. Only
            points earned from transaction will be available for gifting purpose
        </p>
    </div>
    <div class="gift-heading">
        <h1>Gift Points</h1>
    </div>
    <div class="gift-container">
        <div class="box">
            <label for="Name">Name</label>
            <input type="text" id="txtRecipientName" placeholder="Enter Recipient's Name" required />

            <label for="Registered Phone Number">Recipient's Mobile Number</label>
            <input type="tel" id="txtRecipientNo" placeholder="Enter Recipient's Number" required />

            <label for="Gift_Points">Gift Points  <span style="font-size: medium;" id="spnRS"></span></label>
            <input type="text" id="txtGiftPoints" placeholder="Enter Number of points to gift" />
            <span id="spnRS"></span>

            <label for="progress-bar">Or Select Points</label>
            <div class="slider">
                <input type="range"
                       min="0"
                       max="@Convert.ToInt32(Model.BasePoints)"
                       value="0"
                       id="selectedPoints"
                       oninput="updateTextInput(this.value)" />
                <p id="rangeValue">0</p>
            </div>
            <div id="error-message" style="color: red; display: none;"></div>

            <input type="radio" id="chkTerms" name="radio-group" />
            <label for="radio1">I agree to the Gift-a-Points TnC</label>

            <button type="button" class="start-button" id="btnGiftPoints" onclick="SendGift();">Send</button>
            <div class="note">
                <p>
                    <b style="font-weight:bold;">Note: </b>Promotional points are not eligible for gifting. Only
                    points earned from transaction will be available for gifting purpose
                </p>
            </div>
        </div>

    </div>

    <section class="footer" style="text-align:center;">
        @if (!string.IsNullOrEmpty(sessionVariables.objDashboardConfig.FacebookUrl))
        {
            <a id="HlnkinstagramURL" style="text-decoration:none;" target="_blank" href="@sessionVariables.objDashboardConfig.FacebookUrl">
                <img src="~/img/facebook.svg" />
            </a>
        }
        @if (!string.IsNullOrEmpty(sessionVariables.objDashboardConfig.InstagramUrl))
        {
            <a id="HlnkinstagramURL" style="text-decoration:none;" target="_blank" href="@sessionVariables.objDashboardConfig.InstagramUrl">
                <img src="~/img/instagram.svg" />
            </a>
        }
        @if (!string.IsNullOrEmpty(sessionVariables.objDashboardConfig.TwitterUrl))
        {
            <a id="HlnkinstagramURL" style="text-decoration:none;" target="_blank" href="@sessionVariables.objDashboardConfig.TwitterUrl">
                <img src="~/img/twitterx.svg" />
            </a>
        }
        @if (!string.IsNullOrEmpty(sessionVariables.objDashboardConfig.YoutubeURL))
        {
            <a id="HlnkinstagramURL" style="text-decoration:none;" target="_blank" href="@sessionVariables.objDashboardConfig.YoutubeURL">
                <img src="~/img/youtube.svg" />
            </a>
        }
        @if (!string.IsNullOrEmpty(sessionVariables.objDashboardConfig.WhatsappUrl))
        {
            <a id="HlnkinstagramURL" style="text-decoration:none;" target="_blank" href="@sessionVariables.objDashboardConfig.WhatsappUrl">
                <img src="~/img/whatsapp.svg" />
            </a>
        }
    </section>


    <script>
        function Hamburger() {
            var hamburger = document.querySelector('.hamburger');
            var menu = document.querySelector('.menu-container');
            var logo = document.querySelector('.logo');

            var isMenuVisible = false;

            hamburger.addEventListener('click', function () {
                if (!isMenuVisible) {
                    menu.style.display = 'block';
                    menu.style.transform = 'translateY(0)';
                    isMenuVisible = true;
                    logo.style.display = 'none';
                } else {
                    menu.style.transform = 'translateY(-100vh)';
                    isMenuVisible = false;
                    logo.style.display = 'block';

                }
            });

        }

        Hamburger();
    </script>


    <script>
        $(document).ready(function () {
        var totalPoints = '@Convert.ToInt32(Model.BasePoints)';
        var pointsToRS = '@Model.PointsToRS';

        $("#spnRS").text("(Rs. 0)");
        $("#txtGiftPoints").keyup(function () {
            var points = $("#txtGiftPoints").val();
            var rsOfPts = Math.round(points * pointsToRS);

            $("#spnRS").text("(Rs. " + rsOfPts + ")");
            var per = Math.round((points * 100) / totalPoints);
            var cords = per + ", 100";
            var remainingpts = totalPoints - points;

            if (parseInt(points) > parseInt(totalPoints)) {
                remainingpts = 0;
                $("#txtGiftPoints").val(parseInt(totalPoints));
            }
            $("#txtRemainingPoints").text(remainingpts);
            //$(".dummyClass").attr("stroke-dasharray", cords);
        });
    });

    function updateTextInput(val) {
        var totalPoints = '@Convert.ToInt32(Model.BasePoints)';
        var pointsToRS = '@Model.PointsToRS';
        //if (val > totalPoints) {
        //    val = totalPoints;
        //}
        document.getElementById('rangeValue').innerText = val;
        document.getElementById('txtGiftPoints').value = val;
        var points = $("#txtGiftPoints").val();
        var rsOfPts = Math.round(points * pointsToRS);

        $("#spnRS").text("(Rs. " + rsOfPts + ")");
        var per = Math.round((points * 100) / totalPoints);
        var cords = per + ", 100";
        var remainingpts = totalPoints - points;

        if (parseInt(points) > parseInt(totalPoints)) {
            remainingpts = 0;
            $("#txtGiftPoints").val(parseInt(totalPoints));
        }
        $("#txtRemainingPoints").text(remainingpts);
    }

    document.getElementById('txtGiftPoints').addEventListener('input', function () {
        var totalPoints = '@Convert.ToInt32(Model.BasePoints)';
        var value = this.value;
        if (value !== '' && !isNaN(value)) {
            var numValue = Number(value);
            if (numValue >= 0 && numValue <= totalPoints) {
                document.getElementById('selectedPoints').value = numValue;
                document.getElementById('rangeValue').innerText = numValue;
            } else if (numValue > totalPoints) {
                this.value = totalPoints;
                document.getElementById('selectedPoints').value = totalPoints;
                document.getElementById('rangeValue').innerText = totalPoints;
            }
        }
    });

    document.getElementById('selectedPoints').addEventListener('input', function () {
        var totalPoints = '@Convert.ToInt32(Model.BasePoints)';
        var value = this.value;
        //if (value > totalPoints) {
        //    value = totalPoints;
        //}
        document.getElementById('txtGiftPoints').value = value;
        document.getElementById('rangeValue').innerText = value;
    });


        function SendGift()
        {
            var status = true;
            var recipientName = $("#txtRecipientName").val();
            var recipientNo = $("#txtRecipientNo").val();
            var giftPoints = $("#txtGiftPoints").val();
            var isTermsChecked = $("#chkTerms").is(":checked")
            if (!recipientName) {
                toastr.error('Please enter Recipient Name');
                status = false;
            }

            if (!recipientNo) {
                toastr.error('Please enter Mobile No');
                status = false;
            } else if (!/^[6789]\d{9}$/.test(recipientNo)) {
                toastr.error('Please enter a valid Mobile No');
                status = false;
            }

            if (!giftPoints || giftPoints == "0") {
                toastr.error('Please enter Gift Points');
                status = false;
            } else if (!/^\d+$/.test(giftPoints)) {
                toastr.error('Please enter valid numeric Gift Points');
                status = false;
            }

            if (!isTermsChecked) {
                toastr.warning('Please accept the Gift-a-Points TnC to continue!!!!');
                status = false;
            }


            if (status)
            {
                $("#divLoader").show();
                  $.ajax({
                    type: "POST",
                    url: '@Url.Action("GiveGiftPoints", "GiftPoints")',
                      data: '{RecipientName: ' + JSON.stringify($("#txtRecipientName").val()) + ',RecipientNo: ' + JSON.stringify($("#txtRecipientNo").val()) + ',GiftPoints: ' + JSON.stringify($("#txtGiftPoints").val()) + '}',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                      success: function (result) {
                          console.log(result)
                          if (result.ResponseCode == "1")
                          {
                              toastr.success("Points Gifted Successfully !!!");
                              //setTimeout(myStopFunction, 2000);
                          }
                          else
                          {
                              toastr.error(result.ResponseMessage);
                          }
                            $("#divLoader").hide();
                        },
                        error: function (result) {
                            console.log(result.responseText)
                        }
                    });
            }
        }
        function myStopFunction() {
            //window.location.reload();
        }
    </script>


    @*<script src="~/lib/jquery/dist/jquery.min.js"></script>
        <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
        <script src="~/js/site.js" asp-append-version="true"></script>*@
</body>
</html>
