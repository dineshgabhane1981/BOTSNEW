@model DLC.ViewModel.DashboardViewModel
@using BOTS_BL.Models;
@using DLC.ViewModel;
@{
    ViewBag.Title = "Index";
    Layout = null;

    var sessionVariables = (SessionVariables)Session["SessionVariables"];
    var Flag = sessionVariables.Flag;
    var MobileNo = sessionVariables.MobileNo;
    var HeaderColor = sessionVariables.objDashboardConfig.HeaderColor;
    var FontColor = sessionVariables.objDashboardConfig.FontColor;

    var logoUrl = sessionVariables.objDashboardConfig.UseLogoURL;
    var logoSize = sessionVariables.objDashboardConfig.UseLogo;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no" />
    <title>Dashboard</title>
    <link href="~/css/dashboard.css" rel="stylesheet">
    <link href="~/css/common.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.2.0/fonts/remixicon.css"
          rel="stylesheet" />
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">


    <style>
        @@media (max-width: 1024px) {
            .gift-card {
                flex: 1 1 30%; /* More flexibility for smaller screens */
            }

            .gift-card-top i {
                font-size: 4vw; /* Adjust icon size */
            }

            .gift-card-top h3,
            .gift-card-bottom h3 {
                font-size: 2.5vw; /* Larger font for smaller screens */
            }
        }

        @@media (max-width: 768px) {
            .gift-card {
                flex: 1 1 45%; /* Allows for 2 cards per row on smaller devices */
                min-width: 120px; /* Minimum width for smaller screens */
                max-width: 150px; /* Maximum width to maintain consistency */
            }

            .gift-card-top i {
                font-size: 5vw; /* Adjust icon size */
            }

            .gift-card-top h3,
            .gift-card-bottom h3 {
                font-size: 3vw; /* Larger font for readability on smaller devices */
            }
        }

        #imageContainer {
            padding-top: 80px;
        }

        @@media (max-width: 480px) {
            .gift-card {
                flex: 1 1 100%; /* Single card per row on very small devices */
            }

            .gift-card-top i {
                font-size: 6vw; /* Larger icon on small devices */
            }

            .gift-card-top h3,
            .gift-card-bottom h3 {
                font-size: 4vw; /* Larger font for small devices */
            }
        }

        .custom-modal {
            display: none;
            position: fixed;
            z-index: 1050;
            padding-top: 100px;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.4);
        }

        .custom-modal-content {
            margin: auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 500px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        .custom-modal-header, .custom-modal-footer {
            padding: 10px;
            border-bottom: 1px solid #e5e5e5;
            border-top: 1px solid #e5e5e5;
            background-color: #f5f5f5;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .custom-modal-header {
            border-bottom: none;
        }

        .custom-modal-body {
            padding: 20px;
        }

        .close {
            cursor: pointer;
            font-size: 1.5rem;
            border: none;
            background: none;
        }

        .btn {
            padding: 10px 20px;
            color: #fff;
            background-color: #007bff;
            border: none;
            cursor: pointer;
            border-radius: 4px;
        }

            .btn:hover {
                background-color: #0056b3;
            }

        .form-control {
            width: 100%;
            padding: 10px;
            margin-top: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        .footer {
            background-color: #344966;
            height: 11vh;
            padding: 20px 20px;
            clear: both;
        }

        .sticky-nav {
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1; /* Ensure it's on top of other elements */
            background-color: white; /* Change as needed */
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Optional shadow */
            transition: height 0.3s; /* Smooth transition for height changes */
        }

            .sticky-nav.scrolled .logo {
                display: none; /* Hide the logo when scrolled */
            }

            .sticky-nav.scrolled .features {
                padding-top: 10px; /* Adjust padding if needed */
            }

        /* Ensure logo scales properly */
        .logo img {
            max-width: 100%;
            height: auto;
        }
    </style>
</head>
<body>

    <nav id="nvbarcolor" class="sticky-nav">
        <div class="profile_links">

        </div>
        @if (logoSize == "Small")
        {
            <div class="logo" style="box-shadow: rgb(136, 136, 136) 5px 5px 19px 3px; height: 100px !important; width: 180px !important; margin-top:-40px;">
                <img id="imgLogo" src="@logoUrl" width="200" height="100" />
            </div>
        }
        @if (logoSize == "Medium")
        {
            <div class="logo" style="box-shadow: rgb(136, 136, 136) 5px 5px 19px 3px; height: 150px !important; width: 300px !important; margin-top: -40px;">
                <img id="imgLogo" src="@logoUrl" width="300" height="150" />
            </div>
        }
        @if (logoSize == "Big")
        {
            <div class="logo" style="box-shadow: rgb(136, 136, 136) 5px 5px 19px 3px; height: 200px !important; width: 400px !important; margin-top: -40px;">
                <img id="imgLogo" src="@logoUrl" width="400" height="200" />
            </div>
        }
        <div class="profile_links" style="display:none">
            <span><i class="user ri-account-circle-fill"></i></span>
            <span><i class="noti ri-notification-3-line"></i></span>
        </div>
        <div class="language" style="display:none">
            <select name="language" id="">
                <option value="language">Language</option>
                <option value="English">English</option>
                <option value="Hindi">Hindi</option>
                <option value="Marathi">Marathi</option>

            </select>
        </div>
        <div class="features">
            <a href="@Url.Action("Index", "Dashboard")"><h1 class="active">Dashboard</h1></a>
            <a href="@Url.Action("Index", "Store")"><h1>Store locator</h1></a>
            <a href="@Url.Action("Index", "ReferEarn")"><h1>Refer and Earn</h1></a>
            <a href="@Url.Action("Index", "PersonalDetails")"><h1>Personal Details</h1></a>
            <a href="@Url.Action("Index", "TransactionHistory")"><h1>Transaction History</h1></a>
            <a href="@Url.Action("Index", "GiftPoints")"><h1>Gift Points</h1></a>
            <a href="@Url.Action("Index", "Terms")"><h1>Terms and Conditions</h1></a>
            @*<a href="@Url.Action("Index", "Optout")"><h1>Optout</h1></a>*@
            <a href="@Url.Action("Logout", "Start")"><h1>Logout</h1></a>

        </div>
        <div class="hamburger">
            <i class="ri-menu-2-line"></i>
        </div>
    </nav>
    <div class="menu-container1">
        <div id="menu1">
            <a href="@Url.Action("Index", "Dashboard")"><h1 class="active">Dashboard</h1></a>
            <a href="@Url.Action("Index", "Store")"><h1>Store locator</h1></a>
            <a href="@Url.Action("Index", "ReferEarn")"><h1>Refer and Earn</h1></a>
            <a href="@Url.Action("Index", "PersonalDetails")"><h1>Personal Details</h1></a>
            <a href="@Url.Action("Index", "TransactionHistory")"><h1>Transaction History</h1></a>
            <a href="@Url.Action("Index", "GiftPoints")"><h1>Gift Points</h1></a>
            <a href="@Url.Action("Index", "Terms")"><h1>Terms and Conditions</h1></a>
            @*<a href="@Url.Action("Index", "Optout")"><h1>Optout</h1></a>*@
            <a href="@Url.Action("Logout", "Start")"><h1>Logout</h1></a>
        </div>
    </div>
    <!-- card  -->
    <!-- content -->

    <section class="content" style="margin-top:200px;">
       


    </section>
    <div class="bottom" style="margin-bottom:20px;">
        <div class="left-content">
            <h2>MY ACCOUNT</h2>
            <h2>9003552567</h2>
        </div>
        <div class="right-content">
            <h2>MY POINTS</h2>
            <h2>2149</h2>
        </div>
        <div class="right-content">
            <h2>MY CASH</h2>
            <h2>Rs. 1049</h2>
        </div>
    </div>

    




    
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

    <script>
        $(document).ready(function () {

            FillOutlet();
        });
        var outletDetails;

        function FillOutlet() {
            $.ajax({
            url: '@Url.Action("GetOutlets", "Store")',
            type: 'GET',
                success: function (data) {
                    console.log(data);
                    outletDetails = data;
                    if (navigator.geolocation) {
                        navigator.geolocation.getCurrentPosition(UserLocation);
                    }
                },
            error: function() {
                toastr.error('Failed to fetch outlet names.');
            }
        });
        }
        function UserLocation(position) {
            NearestCity(position.coords.latitude, position.coords.longitude);
        }

        function Deg2Rad(deg) {
            return deg * Math.PI / 180;
        }

        function PythagorasEquirectangular(lat1, lon1, lat2, lon2) {
            lat1 = Deg2Rad(lat1);
            lat2 = Deg2Rad(lat2);
            lon1 = Deg2Rad(lon1);
            lon2 = Deg2Rad(lon2);
            var R = 6371; // km
            var x = (lon2 - lon1) * Math.cos((lat1 + lat2) / 2);
            var y = (lat2 - lat1);
            var d = Math.sqrt(x * x + y * y) * R;
            return d;
        }
        function NearestCity(latitude, longitude) {
            var minDif = 99999;
            var closest;

            for (index = 0; index < outletDetails.length; ++index) {
                var dif = PythagorasEquirectangular(latitude, longitude, outletDetails[index]["Lat"], outletDetails[index]["Long"]);
                if (dif < minDif) {
                    closest = index;
                    minDif = dif;
                }
            }
            console.log(outletDetails[closest]);

            var url = "https://maps.google.com/maps?q=";
            url = url + outletDetails[closest]["Lat"] + "," + outletDetails[closest]["Long"];
            url = url + "&z=12 &output=embed";
            $('#storeFrame').attr('src', url);

            $("#spnOutletName").text(outletDetails[closest]["OutletName"]);
            $("#spnOutletAddress").text(outletDetails[closest]["Address"]);
            $("#spnContact").text(outletDetails[closest]["Contact"]);
        }

    </script>
    <section class="footer" style="text-align:center;">
        @if (!string.IsNullOrEmpty(Model.objDashboardConfig.FacebookUrl))
        {
            <a id="HlnkinstagramURL" style="text-decoration:none;" target="_blank" href="@Model.objDashboardConfig.FacebookUrl">
                <img src="https://blueocktopus.in/dlc/img/facebook.svg" />
            </a>
        }
        @if (!string.IsNullOrEmpty(Model.objDashboardConfig.InstagramUrl))
        {
            <a id="HlnkinstagramURL" style="text-decoration:none;" target="_blank" href="@Model.objDashboardConfig.InstagramUrl">
                <img src="https://blueocktopus.in/dlc/img/instagram.svg" />
            </a>
        }
        @if (!string.IsNullOrEmpty(Model.objDashboardConfig.TwitterUrl))
        {
            <a id="HlnkinstagramURL" style="text-decoration:none;" target="_blank" href="@Model.objDashboardConfig.TwitterUrl">
                <img src="https://blueocktopus.in/dlc/img/twitterx.svg" />
            </a>
        }
        @if (!string.IsNullOrEmpty(Model.objDashboardConfig.YoutubeURL))
        {
            <a id="HlnkinstagramURL" style="text-decoration:none;" target="_blank" href="@Model.objDashboardConfig.YoutubeURL">
                <img src="https://blueocktopus.in/dlc/img/youtube.svg" />
            </a>
        }
        @if (!string.IsNullOrEmpty(Model.objDashboardConfig.WhatsappUrl))
        {
            <a id="HlnkinstagramURL" style="text-decoration:none;" target="_blank" href="@Model.objDashboardConfig.WhatsappUrl">
                <img src="https://blueocktopus.in/dlc/img/whatsapp.svg" />
            </a>
        }
    </section>

    <script>
        function handleCardClick()
        {
            window.location.href = '@Url.Action("Index", "ReferEarn")';
        }
        function gotostore()
        {
            window.location.href = '@Url.Action("Index", "Store")';
        }
    </script>

    <script>
    function showModal() {
        document.getElementById("missingFieldModal").style.display = "block";
    }

    function hideModal() {
        document.getElementById("missingFieldModal").style.display = "none";
        }

    function checkAndPromptMissingField() {
    var mobileNumber = "@MobileNo";
    var xhr = new XMLHttpRequest();
    xhr.open("POST", "Dashboard/GetUserDetails", true);
    xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    xhr.onreadystatechange = function() {
        if (xhr.readyState === 4 && xhr.status === 200) {
            var response = JSON.parse(xhr.responseText);
            if (response.success && response.missingField) {
                var missingField = response.missingField;
                var id = response.id;

                /*document.getElementById("missingFieldModalLabel").innerText = "Update Profile for Better Rewards";*/

                document.getElementById("missingFieldLabel").innerText = "Please enter your " + missingField + ":";
                document.getElementById("missingField").value = missingField;

                var minDate = new Date();
                minDate.setFullYear(minDate.getFullYear() - 18); // 18 years ago
                var minDateString = minDate.toISOString().split('T')[0]; // Format: yyyy-MM-dd

                var maxDate = new Date();
                maxDate.setFullYear(maxDate.getFullYear() - 100); // 100 years ago
                var maxDateString = maxDate.toISOString().split('T')[0]; // Format: yyyy-MM-dd

                var cntrl = '';

                if (missingField == "Name") {
                    cntrl = "<input type='text' id='missingFieldValue' class='form-control' required>";
                } else if (missingField == "BirthDate") {
                    // Restrict date to 18-100 years range
                    cntrl = "<input type='date' id='missingFieldValue' class='form-control' required min='" + maxDateString + "' max='" + minDateString + "'>";
                } else if (missingField == "AnniversaryDate") {
                    // Restrict future dates for AnniversaryDate
                    var today = new Date().toISOString().split('T')[0]; // Format: yyyy-MM-dd
                    cntrl = "<input type='date' id='missingFieldValue' class='form-control' required max='" + today + "'>";
                } else if (missingField == "Gender") {
                    cntrl = "<select id='missingFieldValue' class='form-control' required>";
                    cntrl += "<option value='M'>Male</option>";
                    cntrl += "<option value='F'>Female</option>";
                    cntrl += "</select>";
                }

                document.getElementById("dvmissingField").innerHTML = cntrl;
                document.getElementById("userId").value = id;

                // Show the modal
                showModal();
            } else {
                $("#wdPersonalDetails").hide();
                // If no missing fields, the modal won't show
                //toastr.error('No missing fields.');
            }
        }
    };
    xhr.send("mobileNumber=" + encodeURIComponent(mobileNumber));
}


    function saveMissingField() {
        var id = document.getElementById("userId").value;
        var field = document.getElementById("missingField").value;
        var value = document.getElementById("missingFieldValue").value;

        if (!id || !field || !value) {
            toastr.error("Please fill out all required fields.");
            return;
        }

        var data = JSON.stringify({
            id: id,
            field: field,
            value: value
        });

        var xhr = new XMLHttpRequest();
        xhr.open("POST", "Dashboard/UpdateUserDetails", true);
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.onreadystatechange = function() {
            if (xhr.readyState === 4 && xhr.status === 200) {
                var response = JSON.parse(xhr.responseText);
                if (response.success) {
                    toastr.success(response.message);
                    hideModal();
                } else {
                    toastr.error(response.message);
                }
            }
        };
        xhr.onerror = function() {
            toastr.error("An error occurred while updating user details.");
        };
        xhr.send(data);
    }

    document.addEventListener("DOMContentLoaded", function() {
        var status = @Flag; // Ensure this is correctly passed from your backend
        if (status) {
            checkAndPromptMissingField();
        }
    });
    </script>
    <script>
        document.addEventListener("scroll", function () {
            const navbar = document.getElementById("nvbarcolor");
            if (window.scrollY > 50) { // You can adjust the scroll threshold as needed
                navbar.classList.add("scrolled");
            } else {
                navbar.classList.remove("scrolled");
            }
        });
    </script>

    <script src="~/js/dashboard.js"></script>

</body>
</html>



