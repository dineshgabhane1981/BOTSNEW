@model LeadGeneration.ViewModel.LeadViewModel
@{
    ViewBag.Title = "Add Lead";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("AddSalesLead", "Lead", FormMethod.Post, new { id = "frmaddlead", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.sALES_TblLeads.LeadId, new { @id = "hdnLeadId" })

    if (!string.IsNullOrEmpty(Convert.ToString(ViewData["URL"])))
    {
        <script>

                    cuteAlert({
                        type: "success",
                        title: "Saved",
                        message: "Sale Done Successfully!",
                        buttonText: "Okay"
                    }).then(() => {
                        var RUrl = '@Convert.ToString(ViewData["URL"])' + '&LeadId=' + '@Convert.ToString(ViewData["LeadId"])';
                        window.open(RUrl, '_blank');
                    })
        </script>
    }
    else if (!string.IsNullOrEmpty(Convert.ToString(ViewData["Status"])))
    {
        if (Convert.ToString(ViewData["Status"]) == "0")
        {
            <script>
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "There is problem in saving Data!",
                    buttonText: "Okay"
                })
            </script>
        }
        else if (Convert.ToString(ViewData["Status"]) == "exist")
        {
            <script>
                cuteAlert({
                    type: "error",
                    title: "OOPS...",
                    message: "Mobile Number is already exist!",
                    buttonText: "Okay"
                })
            </script>
        }
        else if (Convert.ToString(ViewData["Status"]) != "0")
        {
            <script>
                cuteAlert({
                        type: "success",
                        title: "Saved",
                        message: "Data Saved Successfully!",
                        buttonText: "Okay"
                    }).then(() => {
                        window.location.href = '@Url.Action("Index", "Lead")'
                    })
            </script>
        }
    }

    <div class="app-main__inner">
        <div class="mb-3 card" style="padding-top:20px;">
            <div class="content">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-6 col-sm-6">
                            Business Name <br /> @Html.TextBoxFor(model => model.sALES_TblLeads.BusinessName, new { @class = "input100", @id = "txtbusinessnm" })
                        </div>
                        <div class="col-md-6 col-sm-6">
                            Categry <br />@Html.DropDownListFor(model => model.sALES_TblLeads.Category, new SelectList(Model.lstcategory, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlCategory" })

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6">
                            Product <br />@Html.DropDownListFor(model => model.sALES_TblLeads.Product, new SelectList(Model.BOProducts(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlBOProduct" })
                        </div>
                        <div class="col-md-6 col-sm-6">
                            Billing partner <br /> @Html.DropDownListFor(model => model.sALES_TblLeads.BillingPartner, new SelectList(Model.lstBillingPartner, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlBillingPartner" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6">
                            E-Commerce integration <br />
                            @Html.RadioButtonFor(model => model.sALES_TblLeads.EcomIntegration, true, new { @id = "IsEcommerceYes" }) Yes
                            @Html.RadioButtonFor(model => model.sALES_TblLeads.EcomIntegration, false, new { @id = "IsEcommerceNo" }) No
                        </div>
                        <div class="col-md-6 col-sm-6">
                            Number of outlet <br /> @Html.TextBoxFor(model => model.sALES_TblLeads.NoOfOutlet, new { @class = "input100", @oninput = "numberOnly(this.id);", @id = "txtnoofoutlet" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6">
                            Address <br />@Html.TextBoxFor(model => model.sALES_TblLeads.Address, new { @class = "input100", @id = "txtaddress" })
                        </div>
                        <div class="col-md-6 col-sm-6">
                            State <br />@Html.DropDownListFor(model => model.sALES_TblLeads.State, new SelectList(Model.lstStates, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlState" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6">
                            City <br />@Html.DropDownListFor(model => model.sALES_TblLeads.City, new SelectList(Model.lstCity, "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlCity" })
                        </div>
                        <div class="col-md-6 col-sm-6">
                            Pincode <br /> @Html.TextBoxFor(model => model.sALES_TblLeads.Pincode, new { @class = "input100", @oninput = "numberOnly(this.id);", @maxlength = "6", @id = "txtpincode" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6">
                            Contact type <br />@Html.DropDownListFor(model => model.sALES_TblLeads.ContactType, new SelectList(Model.ContactType(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlcontacttype" })
                        </div>
                        <div class="col-md-6 col-sm-6">
                            Meeting type  <br />@Html.DropDownListFor(model => model.sALES_TblLeads.MeetingType, new SelectList(Model.MeetingType(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlmeetingtype" })

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6">
                            Lead status <br />@Html.DropDownListFor(model => model.sALES_TblLeads.LeadStatus, new SelectList(Model.LeadStatus(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlleadstatus" })
                        </div>
                        <div class="col-md-6 col-sm-6">
                            Mobile no<br /> @Html.TextBoxFor(model => model.sALES_TblLeads.MobileNo, new { @maxlength = "10", @oninput = "numberOnly(this.id);", @class = "input100", @id = "txtmobileno" })
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6">
                            Met /spoke with <br />@Html.TextBoxFor(model => model.sALES_TblLeads.SpokeWith, new { @class = "input100", @id = "txtspokenwith" })
                        </div>
                        <div class="col-md-6 col-sm-6">
                            Customer Type <br />@Html.DropDownListFor(model => model.sALES_TblLeads.CustomerType, new SelectList(Model.CustomerType(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlcustomertype" })
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6">
                            Price quoted <br />@Html.TextBoxFor(model => model.sALES_TblLeads.PriceQuoted, new { @class = "input100", @id = "txtpricequoted" })
                        </div>
                        <div class="col-md-6 col-sm-6">
                            Follow up date <br />@Html.TextBoxFor(model => model.sALES_TblLeads.FollowupDate, new { @class = "input100", @id = "txtfollowupdt" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6">
                            Lead source <br />@Html.DropDownListFor(model => model.sALES_TblLeads.LeadSource, new SelectList(Model.LeadSource(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlleadsource" })
                        </div>
                        <div class="col-md-6 col-sm-6">
                            Lead source Name <br />@Html.TextBoxFor(model => model.sALES_TblLeads.LeadSourceName, new { @class = "input100", @id = "txtleadsourcenm" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6">
                            Lead Type <br />@Html.DropDownListFor(model => model.sALES_TblLeads.LeadType, new SelectList(Model.LeadType(), "Value", "Text"), "Please Select", htmlAttributes: new { @class = "input100", @id = "ddlleadtype" })
                        </div>
                        <div class="col-md-6 col-sm-6">
                            Comments <br />@Html.TextAreaFor(model => model.sALES_TblLeads.Comments, new { @class = "input100", @rows = 5, @id = "txtcomment" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 pull-right mb-3 mt-3">
                            <button type="submit" id="btnLeadSave" class="btn btn-primary pull-right" style="margin-right:10px;" onclick="return CheckValidationAndSubmit();">Save</button>
                            @*<button type="button" id="btnLeadCancel" class="btn btn-primary pull-right" style="margin-right:10px;">cancel</button>*@

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>
    $(document).ready(function () {
        var today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());
        $("#txtfollowupdt").datepicker({
            dateFormat: "yy-mm-dd",
        });
        if ($("#hdnLeadId").val() != 0) {
            var dt = $("#hdnLeadId").val();
            EnableDisableData();
        }
        
        $('#ddlmeetingtype option').each(function (item) {           
            if ($("#hdnLeadId").val() != 0) {
                if ($('#ddlmeetingtype').val() == '1stcall') {                                         
                        $("#ddlmeetingtype option[value='1stcall']").prop("disabled", true); 
                }
                if ($('#ddlmeetingtype').val() == '1stMeeting') {
                    $("#ddlmeetingtype option[value='1stcall']").prop("disabled", true);
                    $("#ddlmeetingtype option[value='1stMeeting']").prop("disabled", true);
                }
            }
        });
        RemoveRedBorder();
    });

    function numberOnly(id) {
        // Get element by id which passed as parameter within HTML element event
        var element = document.getElementById(id);
        // This removes any other character but numbers as entered by user
        element.value = element.value.replace(/[^0-9]/gi, "");
    }


    function EnableDisableData() {
        $("#txtbusinessnm").attr("readonly", true);
        $('#txtbusinessnm').css('background-color', '#d3d3d3');
        $("#ddlCategory").attr("disabled", true);
        $('#ddlCategory').css('background-color', '#d3d3d3');
        $("#ddlBOProduct").attr("disabled", true);
        $('#ddlBOProduct').css('background-color', '#d3d3d3');
        $("#ddlCity").attr("disabled", true);
        $('#ddlCity').css('background-color', '#d3d3d3');
        $("#txtpincode").attr("readonly", true);
        $('#txtpincode').css('background-color', '#d3d3d3');
        $("#txtmobileno").attr("readonly", true);
    }

    function RemoveRedBorder() {
        $("#txtbusinessnm").focusout(function () {
            if ($("#txtbusinessnm").val() != "") {
                $('#txtbusinessnm').css('border-color', '');
            }
            else {
                $('#txtbusinessnm').css('border-color', 'red');
            }
        });
        $('#ddlCategory').change(function () {
            if ($("#ddlCategory option:selected").text() == "Please Select") {
                $('#ddlCategory').css('border-color', 'red');
            }
            else {
                $('#ddlCategory').css('border-color', '');
            }
        });
        $('#ddlBOProduct').change(function () {            
            if ($("#ddlBOProduct option:selected").text() == "Please Select") {
                $('#ddlBOProduct').css('border-color', 'red');
                $('#ddlBillingPartner').attr("disabled", false);
            }
            else {
                if ($('#ddlBOProduct').val() == "2") {
                    $('#ddlBillingPartner').css('border-color', '');
                    $('#ddlBillingPartner').prop('selectedIndex', 0);
                    $('#ddlBillingPartner').attr("disabled", true);
                    
                }
                else {
                    $('#ddlBillingPartner').attr("disabled", false);
                }
                $('#ddlBOProduct').css('border-color', '');
            }
        });
        $('#ddlBillingPartner').change(function () {
            if ($("#ddlBillingPartner option:selected").text() == "Please Select") {
                if ($('#ddlBOProduct').val() == "2") {
                }
                else {
                    $('#ddlBillingPartner').css('border-color', 'red');
                }
            }
            else {

                $('#ddlBillingPartner').css('border-color', '');
            }
        });
        $("#txtnoofoutlet").focusout(function () {
            if ($("#txtnoofoutlet").val() != "") {
                $('#txtnoofoutlet').css('border-color', '');
            }
            else {
                $('#txtnoofoutlet').css('border-color', 'red');
            }
        });
        $('#ddlCity').change(function () {
            if ($("#ddlCity option:selected").text() == "Please Select") {
                $('#ddlCity').css('border-color', 'red');
            }
            else {
                $('#ddlCity').css('border-color', '');
            }
        });
        $("#txtpincode").focusout(function () {
            if ($("#txtpincode").val() != "") {
                $('#txtpincode').css('border-color', '');
            }
            else {
                $('#txtpincode').css('border-color', 'red');
            }
        });
        $('#ddlcontacttype').change(function () {
            if ($("#ddlcontacttype option:selected").text() == "Please Select") {
                $('#ddlcontacttype').css('border-color', 'red');
            }
            else {
                $('#ddlcontacttype').css('border-color', '');
            }
        });
        $("#txtspokenwith").focusout(function () {
            if ($("#txtspokenwith").val() != "") {
                $('#txtspokenwith').css('border-color', '');
            }
            else {
                $('#txtspokenwith').css('border-color', 'red');
            }
        });
        $("#txtmobileno").focusout(function () {
            if ($("#txtmobileno").val() != "") {
                $('#txtmobileno').css('border-color', '');
            }
            else {
                $('#txtmobileno').css('border-color', 'red');
            }
        });
        $('#ddlleadstatus').change(function () {
            if ($("#ddlleadstatus option:selected").text() == "Please Select") {
                $('#ddlleadstatus').css('border-color', 'red');
            }
            else {                
                $('#ddlleadstatus').css('border-color', '');
            }
        });
        $('#ddlmeetingtype').change(function () {
            if ($("#ddlmeetingtype option:selected").text() == "Please Select") {
                $('#ddlmeetingtype').css('border-color', 'red');
            }
            else {
                $('#ddlmeetingtype').css('border-color', '');
            }
        });
        $("#txtfollowupdt").focusout(function () {
            if ($("#txtfollowupdt").val() != "") {
                $('#txtfollowupdt').css('border-color', '');
            }
            else {
                if ($('#ddlleadstatus').val() == "NotInterested") {
                    $('#txtfollowupdt').css('border-color', '');
                }
                else {
                    $('#txtfollowupdt').css('border-color', 'red');
                }
            }
        });
        $("#txtcomment").focusout(function () {
            if ($("#txtcomment").val() != "") {
                $('#txtcomment').css('border-color', '');
            }
            else {
                $('#txtcomment').css('border-color', 'red');
            }
        });

    }


    function CheckValidationAndSubmit() {
        var returnStatus = true;
        if ($("#txtbusinessnm").val() == "") {
            $('#txtbusinessnm').css('border-color', 'red');
            returnStatus = false;
        }

        if ($("#ddlCategory option:selected").text() == "Please Select") {
            $("#ddlCategory").css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#ddlBOProduct option:selected").text() == "Please Select") {
            $("#ddlBOProduct").css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#ddlBOProduct").val() != "2") {
            if ($("#ddlBillingPartner option:selected").text() == "Please Select") {
                $("#ddlBillingPartner").css('border-color', 'red');
                returnStatus = false;
            }
        }

        if ($("#txtnoofoutlet").val() == "") {
            $('#txtnoofoutlet').css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#ddlCity option:selected").text() == "Please Select") {
            $("#ddlCity").css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#txtpincode").val() == "") {
            $('#txtpincode').css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#ddlcontacttype option:selected").text() == "Please Select") {
            $("#ddlcontacttype").css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#txtspokenwith").val() == "") {
            $('#txtspokenwith').css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#txtmobileno").val() == "") {
            $('#txtmobileno').css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#ddlleadstatus option:selected").text() == "Please Select") {
            $("#ddlleadstatus").css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#ddlmeetingtype option:selected").text() == "Please Select") {
            $("#ddlmeetingtype").css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#txtfollowupdt").val() == "") {
            $('#txtfollowupdt').css('border-color', 'red');
            returnStatus = false;
        }
        if ($("#txtcomment").val() == "") {
            $('#txtcomment').css('border-color', 'red');
            returnStatus = false;
        }

        if ($("#hdnLeadId").val() != 0) {            
            if ($("#ddlmeetingtype option:selected").text() == "1st Call" || $("#ddlmeetingtype option:selected").text() == "1st Meeting") {
                
                $("#ddlmeetingtype").css('border-color', 'red');
                cuteAlert({
                    type: "error",
                    title: "Oops..",
                    message: "Meeting Type should not 1st Call or 1st Meeting",
                    buttonText: "Okay"
                })
                returnStatus = false;
            }
        }

        if (returnStatus == true) {
            return true;
        }
        else {
            cuteAlert({
                type: "error",
                title: "Oops..",
                message: "Please enter Required fields",
                buttonText: "Okay"
            })
            return false;
        }

    }
</script>
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />


